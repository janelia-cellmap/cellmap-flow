Search.setIndex({"alltitles":{"API Reference":[[33,null]],"AffinityPostprocessor":[[40,"affinitypostprocessor"]],"Attributes":[[0,"attributes"],[1,"attributes"],[3,"attributes"],[5,"attributes"],[6,"attributes"],[7,"attributes"],[8,"attributes"],[10,"attributes"],[13,"attributes"],[14,"attributes"],[17,"attributes"],[19,"attributes"],[22,"attributes"],[23,"attributes"],[24,"attributes"],[25,"attributes"],[26,"attributes"],[27,"attributes"],[29,"attributes"],[30,"attributes"],[31,"attributes"],[32,"attributes"]],"Base Class":[[40,"base-class"]],"CLI":[[34,null]],"Can Have":[[41,"can-have"]],"ChannelSelection":[[40,"channelselection"]],"Classes":[[0,"classes"],[2,"classes"],[10,"classes"],[11,"classes"],[13,"classes"],[14,"classes"],[19,"classes"],[22,"classes"],[23,"classes"],[24,"classes"],[26,"classes"],[27,"classes"],[29,"classes"],[31,"classes"]],"DefaultPostprocessor":[[40,"defaultpostprocessor"]],"Detailed Road Map":[[41,"detailed-road-map"]],"Functions":[[0,"functions"],[1,"functions"],[3,"functions"],[5,"functions"],[6,"functions"],[7,"functions"],[8,"functions"],[13,"functions"],[16,"functions"],[17,"functions"],[19,"functions"],[20,"functions"],[22,"functions"],[23,"functions"],[24,"functions"],[25,"functions"],[26,"functions"],[27,"functions"],[29,"functions"],[30,"functions"],[31,"functions"],[32,"functions"]],"Installation":[[36,null],[37,null]],"LabelPostprocessor":[[40,"labelpostprocessor"]],"LambdaPostprocessor":[[40,"lambdapostprocessor"]],"Module Contents":[[0,"module-contents"],[1,"module-contents"],[3,"module-contents"],[5,"module-contents"],[6,"module-contents"],[7,"module-contents"],[8,"module-contents"],[10,"module-contents"],[11,"module-contents"],[13,"module-contents"],[14,"module-contents"],[16,"module-contents"],[17,"module-contents"],[19,"module-contents"],[20,"module-contents"],[22,"module-contents"],[23,"module-contents"],[24,"module-contents"],[25,"module-contents"],[26,"module-contents"],[27,"module-contents"],[29,"module-contents"],[30,"module-contents"],[31,"module-contents"],[32,"module-contents"]],"MortonSegmentationRelabeling":[[40,"mortonsegmentationrelabeling"]],"Non-Goals (for v1.0)":[[41,"non-goals-for-v1-0"]],"Overview":[[39,null],[40,"overview"],[41,"overview"]],"Package Contents":[[2,"package-contents"]],"PostProcessor Module":[[40,null]],"PostProcessor Subclasses":[[40,"postprocessor-subclasses"]],"Road Map":[[41,null]],"Run multiple model at once:":[[36,"run-multiple-model-at-once"]],"Script keywords:":[[36,"script-keywords"]],"SimpleBlockwiseMerger":[[40,"simpleblockwisemerger"]],"Submodules":[[2,"submodules"],[4,"submodules"],[9,"submodules"],[12,"submodules"],[15,"submodules"],[18,"submodules"],[21,"submodules"],[28,"submodules"]],"ThresholdPostprocessor":[[40,"thresholdpostprocessor"]],"Tutorial: A Simple Experiment in Python":[[42,null]],"Usage":[[36,"usage"]],"Using Dacapo model:":[[36,"using-dacapo-model"]],"Using TensorFlow model:":[[36,"using-tensorflow-model"]],"Using bioimage-io model:":[[36,"using-bioimage-io-model"]],"Using custom script:":[[36,"using-custom-script"]],"What is CelMapFlow?":[[39,"what-is-celmapflow"]],"cellmap_flow":[[12,null],[38,null]],"cellmap_flow.blockwise":[[2,null]],"cellmap_flow.blockwise.blockwise_processor":[[0,null]],"cellmap_flow.blockwise.cli":[[1,null]],"cellmap_flow.cli":[[4,null]],"cellmap_flow.cli.cli":[[3,null]],"cellmap_flow.cli.multiple_cli":[[5,null]],"cellmap_flow.cli.multiple_yaml_cli":[[6,null]],"cellmap_flow.cli.server_cli":[[7,null]],"cellmap_flow.dashboard":[[9,null]],"cellmap_flow.dashboard.app":[[8,null]],"cellmap_flow.globals":[[10,null]],"cellmap_flow.image_data_interface":[[11,null]],"cellmap_flow.inferencer":[[13,null]],"cellmap_flow.models":[[15,null]],"cellmap_flow.models.cellmap_models":[[14,null]],"cellmap_flow.models.model_yaml":[[16,null]],"cellmap_flow.models.run":[[17,null]],"cellmap_flow.norm":[[18,null]],"cellmap_flow.norm.input_normalize":[[19,null]],"cellmap_flow.norm.models":[[20,null]],"cellmap_flow.post":[[21,null]],"cellmap_flow.post.postprocessors":[[22,null]],"cellmap_flow.server":[[23,null]],"cellmap_flow.utils":[[28,null]],"cellmap_flow.utils.bsub_utils":[[24,null]],"cellmap_flow.utils.config_utils":[[25,null]],"cellmap_flow.utils.data":[[26,null]],"cellmap_flow.utils.ds":[[27,null]],"cellmap_flow.utils.load_py":[[29,null]],"cellmap_flow.utils.neuroglancer_utils":[[30,null]],"cellmap_flow.utils.scale_pyramid":[[31,null]],"cellmap_flow.utils.web_utils":[[32,null]]},"docnames":["autoapi/cellmap_flow/blockwise/blockwise_processor/index","autoapi/cellmap_flow/blockwise/cli/index","autoapi/cellmap_flow/blockwise/index","autoapi/cellmap_flow/cli/cli/index","autoapi/cellmap_flow/cli/index","autoapi/cellmap_flow/cli/multiple_cli/index","autoapi/cellmap_flow/cli/multiple_yaml_cli/index","autoapi/cellmap_flow/cli/server_cli/index","autoapi/cellmap_flow/dashboard/app/index","autoapi/cellmap_flow/dashboard/index","autoapi/cellmap_flow/globals/index","autoapi/cellmap_flow/image_data_interface/index","autoapi/cellmap_flow/index","autoapi/cellmap_flow/inferencer/index","autoapi/cellmap_flow/models/cellmap_models/index","autoapi/cellmap_flow/models/index","autoapi/cellmap_flow/models/model_yaml/index","autoapi/cellmap_flow/models/run/index","autoapi/cellmap_flow/norm/index","autoapi/cellmap_flow/norm/input_normalize/index","autoapi/cellmap_flow/norm/models/index","autoapi/cellmap_flow/post/index","autoapi/cellmap_flow/post/postprocessors/index","autoapi/cellmap_flow/server/index","autoapi/cellmap_flow/utils/bsub_utils/index","autoapi/cellmap_flow/utils/config_utils/index","autoapi/cellmap_flow/utils/data/index","autoapi/cellmap_flow/utils/ds/index","autoapi/cellmap_flow/utils/index","autoapi/cellmap_flow/utils/load_py/index","autoapi/cellmap_flow/utils/neuroglancer_utils/index","autoapi/cellmap_flow/utils/scale_pyramid/index","autoapi/cellmap_flow/utils/web_utils/index","autoapi/index","cli","conf","index","install","modules","overview","post","roadmap","tutorial"],"envversion":{"nbsphinx":4,"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2},"filenames":["autoapi/cellmap_flow/blockwise/blockwise_processor/index.rst","autoapi/cellmap_flow/blockwise/cli/index.rst","autoapi/cellmap_flow/blockwise/index.rst","autoapi/cellmap_flow/cli/cli/index.rst","autoapi/cellmap_flow/cli/index.rst","autoapi/cellmap_flow/cli/multiple_cli/index.rst","autoapi/cellmap_flow/cli/multiple_yaml_cli/index.rst","autoapi/cellmap_flow/cli/server_cli/index.rst","autoapi/cellmap_flow/dashboard/app/index.rst","autoapi/cellmap_flow/dashboard/index.rst","autoapi/cellmap_flow/globals/index.rst","autoapi/cellmap_flow/image_data_interface/index.rst","autoapi/cellmap_flow/index.rst","autoapi/cellmap_flow/inferencer/index.rst","autoapi/cellmap_flow/models/cellmap_models/index.rst","autoapi/cellmap_flow/models/index.rst","autoapi/cellmap_flow/models/model_yaml/index.rst","autoapi/cellmap_flow/models/run/index.rst","autoapi/cellmap_flow/norm/index.rst","autoapi/cellmap_flow/norm/input_normalize/index.rst","autoapi/cellmap_flow/norm/models/index.rst","autoapi/cellmap_flow/post/index.rst","autoapi/cellmap_flow/post/postprocessors/index.rst","autoapi/cellmap_flow/server/index.rst","autoapi/cellmap_flow/utils/bsub_utils/index.rst","autoapi/cellmap_flow/utils/config_utils/index.rst","autoapi/cellmap_flow/utils/data/index.rst","autoapi/cellmap_flow/utils/ds/index.rst","autoapi/cellmap_flow/utils/index.rst","autoapi/cellmap_flow/utils/load_py/index.rst","autoapi/cellmap_flow/utils/neuroglancer_utils/index.rst","autoapi/cellmap_flow/utils/scale_pyramid/index.rst","autoapi/cellmap_flow/utils/web_utils/index.rst","autoapi/index.rst","cli.rst","conf.py","index.rst","install.rst","modules.rst","overview.rst","post.rst","roadmap.rst","tutorial.rst"],"indexentries":{"__call__() (postprocessor method)":[[40,"PostProcessor.__call__",false]],"__class_vars__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__class_vars__",false]],"__private_attributes__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__private_attributes__",false]],"__pydantic_complete__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_complete__",false]],"__pydantic_computed_fields__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_computed_fields__",false]],"__pydantic_core_schema__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_core_schema__",false]],"__pydantic_custom_init__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_custom_init__",false]],"__pydantic_decorators__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_decorators__",false]],"__pydantic_extra__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_extra__",false]],"__pydantic_fields__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_fields__",false]],"__pydantic_fields_set__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_fields_set__",false]],"__pydantic_generic_metadata__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_generic_metadata__",false]],"__pydantic_parent_namespace__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_parent_namespace__",false]],"__pydantic_post_init__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_post_init__",false]],"__pydantic_private__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_private__",false]],"__pydantic_root_model__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_root_model__",false]],"__pydantic_serializer__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_serializer__",false]],"__pydantic_validator__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_validator__",false]],"__signature__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.__signature__",false]],"_process() (postprocessor method)":[[40,"PostProcessor._process",false]],"access_parent() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.access_parent",false]],"affinitypostprocessor (built-in class)":[[40,"AffinityPostprocessor",false]],"affinitypostprocessor (class in cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.AffinityPostprocessor",false]],"analyze_script() (in module cellmap_flow.utils.load_py)":[[29,"cellmap_flow.utils.load_py.analyze_script",false]],"app (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.app",false]],"apply_norms() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.apply_norms",false]],"apply_postprocess() (in module cellmap_flow.inferencer)":[[13,"cellmap_flow.inferencer.apply_postprocess",false]],"args_key (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.ARGS_KEY",false]],"author (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.author",false]],"bias (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.AffinityPostprocessor.bias",false]],"bias (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.DefaultPostprocessor.bias",false]],"bioimage() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.bioimage",false]],"bioimage() (in module cellmap_flow.cli.server_cli)":[[7,"cellmap_flow.cli.server_cli.bioimage",false]],"biomodelconfig (class in cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.BioModelConfig",false]],"block_shape (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.block_shape",false]],"block_shape (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.block_shape",false]],"block_shape (cellmap_flow.server.dummyconfig attribute)":[[23,"cellmap_flow.server.DummyConfig.block_shape",false]],"build_models() (in module cellmap_flow.utils.config_utils)":[[25,"cellmap_flow.utils.config_utils.build_models",false]],"calculate_equivalences() (cellmap_flow.post.postprocessors.simpleblockwisemerger method)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.calculate_equivalences",false]],"cellmap_flow":[[12,"module-cellmap_flow",false]],"cellmap_flow.blockwise":[[2,"module-cellmap_flow.blockwise",false]],"cellmap_flow.blockwise.blockwise_processor":[[0,"module-cellmap_flow.blockwise.blockwise_processor",false]],"cellmap_flow.blockwise.cli":[[1,"module-cellmap_flow.blockwise.cli",false]],"cellmap_flow.cli":[[4,"module-cellmap_flow.cli",false]],"cellmap_flow.cli.cli":[[3,"module-cellmap_flow.cli.cli",false]],"cellmap_flow.cli.multiple_cli":[[5,"module-cellmap_flow.cli.multiple_cli",false]],"cellmap_flow.cli.multiple_yaml_cli":[[6,"module-cellmap_flow.cli.multiple_yaml_cli",false]],"cellmap_flow.cli.server_cli":[[7,"module-cellmap_flow.cli.server_cli",false]],"cellmap_flow.dashboard":[[9,"module-cellmap_flow.dashboard",false]],"cellmap_flow.dashboard.app":[[8,"module-cellmap_flow.dashboard.app",false]],"cellmap_flow.globals":[[10,"module-cellmap_flow.globals",false]],"cellmap_flow.image_data_interface":[[11,"module-cellmap_flow.image_data_interface",false]],"cellmap_flow.inferencer":[[13,"module-cellmap_flow.inferencer",false]],"cellmap_flow.models":[[15,"module-cellmap_flow.models",false]],"cellmap_flow.models.cellmap_models":[[14,"module-cellmap_flow.models.cellmap_models",false]],"cellmap_flow.models.model_yaml":[[16,"module-cellmap_flow.models.model_yaml",false]],"cellmap_flow.models.run":[[17,"module-cellmap_flow.models.run",false]],"cellmap_flow.norm":[[18,"module-cellmap_flow.norm",false]],"cellmap_flow.norm.input_normalize":[[19,"module-cellmap_flow.norm.input_normalize",false]],"cellmap_flow.norm.models":[[20,"module-cellmap_flow.norm.models",false]],"cellmap_flow.post":[[21,"module-cellmap_flow.post",false]],"cellmap_flow.post.postprocessors":[[22,"module-cellmap_flow.post.postprocessors",false]],"cellmap_flow.server":[[23,"module-cellmap_flow.server",false]],"cellmap_flow.utils":[[28,"module-cellmap_flow.utils",false]],"cellmap_flow.utils.bsub_utils":[[24,"module-cellmap_flow.utils.bsub_utils",false]],"cellmap_flow.utils.config_utils":[[25,"module-cellmap_flow.utils.config_utils",false]],"cellmap_flow.utils.data":[[26,"module-cellmap_flow.utils.data",false]],"cellmap_flow.utils.ds":[[27,"module-cellmap_flow.utils.ds",false]],"cellmap_flow.utils.load_py":[[29,"module-cellmap_flow.utils.load_py",false]],"cellmap_flow.utils.neuroglancer_utils":[[30,"module-cellmap_flow.utils.neuroglancer_utils",false]],"cellmap_flow.utils.scale_pyramid":[[31,"module-cellmap_flow.utils.scale_pyramid",false]],"cellmap_flow.utils.web_utils":[[32,"module-cellmap_flow.utils.web_utils",false]],"cellmap_model (cellmap_flow.utils.data.cellmapmodelconfig attribute)":[[26,"cellmap_flow.utils.data.CellMapModelConfig.cellmap_model",false]],"cellmap_model() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.cellmap_model",false]],"cellmap_model() (in module cellmap_flow.cli.server_cli)":[[7,"cellmap_flow.cli.server_cli.cellmap_model",false]],"cellmapflowblockwiseprocessor (class in cellmap_flow.blockwise)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor",false]],"cellmapflowblockwiseprocessor (class in cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor",false]],"cellmapflowserver (class in cellmap_flow.server)":[[23,"cellmap_flow.server.CellMapFlowServer",false]],"cellmapmodel (class in cellmap_flow.models.cellmap_models)":[[14,"cellmap_flow.models.cellmap_models.CellmapModel",false]],"cellmapmodelconfig (class in cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.CellMapModelConfig",false]],"cellmapmodels (class in cellmap_flow.models.cellmap_models)":[[14,"cellmap_flow.models.cellmap_models.CellmapModels",false]],"channel (cellmap_flow.post.postprocessors.labelpostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.LabelPostprocessor.channel",false]],"channel (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling attribute)":[[22,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.channel",false]],"channel (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.channel",false]],"channels (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.channels",false]],"channels (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.channels",false]],"channels (cellmap_flow.post.postprocessors.channelselection attribute)":[[22,"cellmap_flow.post.postprocessors.ChannelSelection.channels",false]],"channels_names (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.channels_names",false]],"channelselection (built-in class)":[[40,"ChannelSelection",false]],"channelselection (class in cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.ChannelSelection",false]],"charge_group (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.charge_group",false]],"charge_group (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.charge_group",false]],"charge_group_arg (in module cellmap_flow.cli.multiple_cli)":[[5,"cellmap_flow.cli.multiple_cli.charge_group_arg",false]],"check_config() (in module cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.check_config",false]],"check_for_attrs_multiscale() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.check_for_attrs_multiscale",false]],"check_for_multiscale() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.check_for_multiscale",false]],"check_for_offset() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.check_for_offset",false]],"check_for_units() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.check_for_units",false]],"check_for_voxel_size() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.check_for_voxel_size",false]],"chunk_encoder (cellmap_flow.server.cellmapflowserver attribute)":[[23,"cellmap_flow.server.CellMapFlowServer.chunk_encoder",false]],"chunk_slice_position_to_coords_id_dict (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.chunk_slice_position_to_coords_id_dict",false]],"cleanup() (in module cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.cleanup",false]],"cli() (in module cellmap_flow.blockwise.cli)":[[1,"cellmap_flow.blockwise.cli.cli",false]],"cli() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.cli",false]],"cli() (in module cellmap_flow.cli.server_cli)":[[7,"cellmap_flow.cli.server_cli.cli",false]],"client() (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor method)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.client",false]],"client() (cellmap_flow.blockwise.cellmapflowblockwiseprocessor method)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.client",false]],"clip_max (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.DefaultPostprocessor.clip_max",false]],"clip_min (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.DefaultPostprocessor.clip_min",false]],"command (cellmap_flow.utils.data.biomodelconfig property)":[[26,"cellmap_flow.utils.data.BioModelConfig.command",false]],"command (cellmap_flow.utils.data.cellmapmodelconfig property)":[[26,"cellmap_flow.utils.data.CellMapModelConfig.command",false]],"command (cellmap_flow.utils.data.dacapomodelconfig property)":[[26,"cellmap_flow.utils.data.DaCapoModelConfig.command",false]],"command (cellmap_flow.utils.data.scriptmodelconfig property)":[[26,"cellmap_flow.utils.data.ScriptModelConfig.command",false]],"concat_along_c() (in module cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.concat_along_c",false]],"concurrency_limit (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[11,"cellmap_flow.image_data_interface.ImageDataInterface.concurrency_limit",false]],"config (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.config",false]],"config (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.config",false]],"config (cellmap_flow.utils.data.modelconfig property)":[[26,"cellmap_flow.utils.data.ModelConfig.config",false]],"config (class in cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.Config",false]],"config (class in cellmap_flow.utils.load_py)":[[29,"cellmap_flow.utils.load_py.Config",false]],"create_and_run_app() (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.create_and_run_app",false]],"custom_fill_value (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[11,"cellmap_flow.image_data_interface.ImageDataInterface.custom_fill_value",false]],"customcodefolder (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.CustomCodeFolder",false]],"dacapo() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.dacapo",false]],"dacapo() (in module cellmap_flow.cli.server_cli)":[[7,"cellmap_flow.cli.server_cli.dacapo",false]],"dacapomodelconfig (class in cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.DaCapoModelConfig",false]],"data_args (in module cellmap_flow.cli.multiple_cli)":[[5,"cellmap_flow.cli.multiple_cli.data_args",false]],"decode_to_json() (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.decode_to_json",false]],"default_server_queue (in module cellmap_flow.cli.multiple_cli)":[[5,"cellmap_flow.cli.multiple_cli.DEFAULT_SERVER_QUEUE",false]],"default_server_queue (in module cellmap_flow.utils.config_utils)":[[25,"cellmap_flow.utils.config_utils.DEFAULT_SERVER_QUEUE",false]],"defaultpostprocessor (built-in class)":[[40,"DefaultPostprocessor",false]],"defaultpostprocessor (class in cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.DefaultPostprocessor",false]],"delete() (cellmap_flow.globals.flow class method)":[[10,"cellmap_flow.globals.Flow.delete",false]],"description (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.description",false]],"dims (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid.dims",false]],"disallowed_functions (in module cellmap_flow.utils.load_py)":[[29,"cellmap_flow.utils.load_py.DISALLOWED_FUNCTIONS",false]],"disallowed_imports (in module cellmap_flow.utils.load_py)":[[29,"cellmap_flow.utils.load_py.DISALLOWED_IMPORTS",false]],"dtype (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.dtype",false]],"dtype (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.inputnormalizer property)":[[19,"cellmap_flow.norm.input_normalize.InputNormalizer.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.lambdanormalizer property)":[[19,"cellmap_flow.norm.input_normalize.LambdaNormalizer.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.minmaxnormalizer property)":[[19,"cellmap_flow.norm.input_normalize.MinMaxNormalizer.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.zscorenormalizer property)":[[19,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.dtype",false]],"dtype (cellmap_flow.post.postprocessors.affinitypostprocessor property)":[[22,"cellmap_flow.post.postprocessors.AffinityPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.defaultpostprocessor property)":[[22,"cellmap_flow.post.postprocessors.DefaultPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.labelpostprocessor property)":[[22,"cellmap_flow.post.postprocessors.LabelPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.lambdapostprocessor property)":[[22,"cellmap_flow.post.postprocessors.LambdaPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling property)":[[22,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.dtype",false]],"dtype (cellmap_flow.post.postprocessors.postprocessor property)":[[22,"cellmap_flow.post.postprocessors.PostProcessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.simpleblockwisemerger property)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.dtype",false]],"dtype (cellmap_flow.post.postprocessors.thresholdpostprocessor property)":[[22,"cellmap_flow.post.postprocessors.ThresholdPostprocessor.dtype",false]],"dtype (postprocessor attribute)":[[40,"PostProcessor.dtype",false]],"dummyconfig (class in cellmap_flow.server)":[[23,"cellmap_flow.server.DummyConfig",false]],"encode_to_str() (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.encode_to_str",false]],"ends_with_scale() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.ends_with_scale",false]],"equivalences (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.equivalences",false]],"expression (cellmap_flow.norm.input_normalize.lambdanormalizer attribute)":[[19,"cellmap_flow.norm.input_normalize.LambdaNormalizer.expression",false]],"expression (cellmap_flow.post.postprocessors.lambdapostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.LambdaPostprocessor.expression",false]],"face_erosion_iterations (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.face_erosion_iterations",false]],"filetype (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[11,"cellmap_flow.image_data_interface.ImageDataInterface.filetype",false]],"find_target_scale() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.find_target_scale",false]],"flow (class in cellmap_flow.globals)":[[10,"cellmap_flow.globals.Flow",false]],"folder_path (cellmap_flow.models.cellmap_models.cellmapmodel attribute)":[[14,"cellmap_flow.models.cellmap_models.CellmapModel.folder_path",false]],"format_output_bioimage() (in module cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.format_output_bioimage",false]],"framework (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.framework",false]],"g (in module cellmap_flow.globals)":[[10,"cellmap_flow.globals.g",false]],"generate_neuroglancer_url() (in module cellmap_flow.utils.neuroglancer_utils)":[[30,"cellmap_flow.utils.neuroglancer_utils.generate_neuroglancer_url",false]],"get_available_models() (in module cellmap_flow.norm.models)":[[20,"cellmap_flow.norm.models.get_available_models",false]],"get_axes_and_dims() (cellmap_flow.utils.data.biomodelconfig method)":[[26,"cellmap_flow.utils.data.BioModelConfig.get_axes_and_dims",false]],"get_dacapo_channels() (in module cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.get_dacapo_channels",false]],"get_dacapo_run_model() (in module cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.get_dacapo_run_model",false]],"get_ds_info() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.get_ds_info",false]],"get_encoded_subvolume() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid.get_encoded_subvolume",false]],"get_free_port() (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.get_free_port",false]],"get_host_from_stdout() (in module cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.get_host_from_stdout",false]],"get_input_normalizers() (in module cellmap_flow.norm.input_normalize)":[[19,"cellmap_flow.norm.input_normalize.get_input_normalizers",false]],"get_input_slicer() (cellmap_flow.utils.data.biomodelconfig method)":[[26,"cellmap_flow.utils.data.BioModelConfig.get_input_slicer",false]],"get_normalizations() (in module cellmap_flow.norm.input_normalize)":[[19,"cellmap_flow.norm.input_normalize.get_normalizations",false]],"get_norms_post_args() (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.get_norms_post_args",false]],"get_object_mesh() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid.get_object_mesh",false]],"get_output_dtype() (cellmap_flow.globals.flow method)":[[10,"cellmap_flow.globals.Flow.get_output_dtype",false]],"get_postprocessors() (in module cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.get_postprocessors",false]],"get_postprocessors_list() (in module cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.get_postprocessors_list",false]],"get_process_dataset() (in module cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.get_process_dataset",false]],"get_process_dataset() (in module cellmap_flow.server)":[[23,"cellmap_flow.server.get_process_dataset",false]],"get_public_ip() (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.get_public_ip",false]],"get_raw_layer() (in module cellmap_flow.utils.scale_pyramid)":[[31,"cellmap_flow.utils.scale_pyramid.get_raw_layer",false]],"get_scale_info() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.get_scale_info",false]],"get_spatial_dims() (cellmap_flow.utils.data.biomodelconfig method)":[[26,"cellmap_flow.utils.data.BioModelConfig.get_spatial_dims",false]],"get_url() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.get_url",false]],"host (cellmap_flow.utils.bsub_utils.job attribute)":[[24,"cellmap_flow.utils.bsub_utils.Job.host",false]],"idi_raw (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.idi_raw",false]],"idi_raw (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.idi_raw",false]],"idi_raw (cellmap_flow.server.cellmapflowserver attribute)":[[23,"cellmap_flow.server.CellMapFlowServer.idi_raw",false]],"imagedatainterface (class in cellmap_flow.image_data_interface)":[[11,"cellmap_flow.image_data_interface.ImageDataInterface",false]],"in_channels (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.in_channels",false]],"index() (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.index",false]],"inference_input_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.inference_input_shape",false]],"inference_output_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.inference_output_shape",false]],"inference_server (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.INFERENCE_SERVER",false]],"inferencer (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.inferencer",false]],"inferencer (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.inferencer",false]],"inferencer (cellmap_flow.server.cellmapflowserver attribute)":[[23,"cellmap_flow.server.CellMapFlowServer.inferencer",false]],"inferencer (class in cellmap_flow.inferencer)":[[13,"cellmap_flow.inferencer.Inferencer",false]],"info() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid.info",false]],"input_norm_dict_key (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.INPUT_NORM_DICT_KEY",false]],"input_path (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.input_path",false]],"input_path (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.input_path",false]],"input_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.input_shape",false]],"input_voxel_size (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.input_voxel_size",false]],"input_voxel_size (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.input_voxel_size",false]],"input_voxel_size (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.input_voxel_size",false]],"input_voxel_size (cellmap_flow.server.cellmapflowserver attribute)":[[23,"cellmap_flow.server.CellMapFlowServer.input_voxel_size",false]],"inputnormalizer (class in cellmap_flow.norm.input_normalize)":[[19,"cellmap_flow.norm.input_normalize.InputNormalizer",false]],"invalidate() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid.invalidate",false]],"ip_pattern (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.IP_PATTERN",false]],"is_bsub_available() (in module cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.is_bsub_available",false]],"is_output_segmentation() (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.is_output_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.affinitypostprocessor property)":[[22,"cellmap_flow.post.postprocessors.AffinityPostprocessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.defaultpostprocessor property)":[[22,"cellmap_flow.post.postprocessors.DefaultPostprocessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.labelpostprocessor property)":[[22,"cellmap_flow.post.postprocessors.LabelPostprocessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling property)":[[22,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.postprocessor property)":[[22,"cellmap_flow.post.postprocessors.PostProcessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.simpleblockwisemerger property)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.thresholdpostprocessor property)":[[22,"cellmap_flow.post.postprocessors.ThresholdPostprocessor.is_segmentation",false]],"is_segmentation (postprocessor attribute)":[[40,"PostProcessor.is_segmentation",false]],"iteration (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.iteration",false]],"iteration (cellmap_flow.utils.data.dacapomodelconfig attribute)":[[26,"cellmap_flow.utils.data.DaCapoModelConfig.iteration",false]],"job (class in cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.Job",false]],"job_id (cellmap_flow.utils.bsub_utils.job attribute)":[[24,"cellmap_flow.utils.bsub_utils.Job.job_id",false]],"json_str (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.json_str",false]],"json_str (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.json_str",false]],"keys_to_skip (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.keys_to_skip",false]],"kill() (cellmap_flow.utils.bsub_utils.job method)":[[24,"cellmap_flow.utils.bsub_utils.Job.kill",false]],"kill_n_remove_from_neuroglancer() (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.kill_n_remove_from_neuroglancer",false]],"labelpostprocessor (built-in class)":[[40,"LabelPostprocessor",false]],"labelpostprocessor (class in cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.LabelPostprocessor",false]],"lambdanormalizer (class in cellmap_flow.norm.input_normalize)":[[19,"cellmap_flow.norm.input_normalize.LambdaNormalizer",false]],"lambdapostprocessor (built-in class)":[[40,"LambdaPostprocessor",false]],"lambdapostprocessor (class in cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.LambdaPostprocessor",false]],"lazynormalization (class in cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.LazyNormalization",false]],"list_cls_to_dict() (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.list_cls_to_dict",false]],"list_models() (cellmap_flow.models.cellmap_models.cellmapmodels method)":[[14,"cellmap_flow.models.cellmap_models.CellmapModels.list_models",false]],"load_config() (in module cellmap_flow.utils.config_utils)":[[25,"cellmap_flow.utils.config_utils.load_config",false]],"load_input_information() (cellmap_flow.utils.data.biomodelconfig method)":[[26,"cellmap_flow.utils.data.BioModelConfig.load_input_information",false]],"load_model_paths() (in module cellmap_flow.models.model_yaml)":[[16,"cellmap_flow.models.model_yaml.load_model_paths",false]],"load_output_information() (cellmap_flow.utils.data.biomodelconfig method)":[[26,"cellmap_flow.utils.data.BioModelConfig.load_output_information",false]],"load_safe_config() (in module cellmap_flow.utils.load_py)":[[29,"cellmap_flow.utils.load_py.load_safe_config",false]],"logger (in module cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.logger",false]],"logger (in module cellmap_flow.blockwise.cli)":[[1,"cellmap_flow.blockwise.cli.logger",false]],"logger (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.logger",false],[3,"id0",false]],"logger (in module cellmap_flow.cli.multiple_cli)":[[5,"cellmap_flow.cli.multiple_cli.logger",false]],"logger (in module cellmap_flow.cli.multiple_yaml_cli)":[[6,"cellmap_flow.cli.multiple_yaml_cli.logger",false]],"logger (in module cellmap_flow.cli.server_cli)":[[7,"cellmap_flow.cli.server_cli.logger",false]],"logger (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.logger",false]],"logger (in module cellmap_flow.inferencer)":[[13,"cellmap_flow.inferencer.logger",false]],"logger (in module cellmap_flow.models.run)":[[17,"cellmap_flow.models.run.logger",false]],"logger (in module cellmap_flow.norm.input_normalize)":[[19,"cellmap_flow.norm.input_normalize.logger",false]],"logger (in module cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.logger",false]],"logger (in module cellmap_flow.server)":[[23,"cellmap_flow.server.logger",false]],"logger (in module cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.logger",false],[24,"id0",false]],"logger (in module cellmap_flow.utils.config_utils)":[[25,"cellmap_flow.utils.config_utils.logger",false]],"logger (in module cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.logger",false]],"logger (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.logger",false]],"logger (in module cellmap_flow.utils.neuroglancer_utils)":[[30,"cellmap_flow.utils.neuroglancer_utils.logger",false]],"logger (in module cellmap_flow.utils.scale_pyramid)":[[31,"cellmap_flow.utils.scale_pyramid.logger",false]],"main() (in module cellmap_flow.cli.multiple_cli)":[[5,"cellmap_flow.cli.multiple_cli.main",false]],"main() (in module cellmap_flow.cli.multiple_yaml_cli)":[[6,"cellmap_flow.cli.multiple_yaml_cli.main",false]],"max_value (cellmap_flow.norm.input_normalize.minmaxnormalizer attribute)":[[19,"cellmap_flow.norm.input_normalize.MinMaxNormalizer.max_value",false]],"max_voxel_size (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid.max_voxel_size",false]],"mean (cellmap_flow.norm.input_normalize.zscorenormalizer attribute)":[[19,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.mean",false]],"metadata (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[14,"cellmap_flow.models.cellmap_models.CellmapModel.metadata",false]],"min_value (cellmap_flow.norm.input_normalize.minmaxnormalizer attribute)":[[19,"cellmap_flow.norm.input_normalize.MinMaxNormalizer.min_value",false]],"min_voxel_size (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid.min_voxel_size",false]],"minmaxnormalizer (class in cellmap_flow.norm.input_normalize)":[[19,"cellmap_flow.norm.input_normalize.MinMaxNormalizer",false]],"model_config (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.model_config",false]],"model_config (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.model_config",false]],"model_config (cellmap_flow.inferencer.inferencer attribute)":[[13,"cellmap_flow.inferencer.Inferencer.model_config",false]],"model_name (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.model_name",false]],"model_name (cellmap_flow.utils.bsub_utils.job attribute)":[[24,"cellmap_flow.utils.bsub_utils.Job.model_name",false]],"model_name (cellmap_flow.utils.data.biomodelconfig attribute)":[[26,"cellmap_flow.utils.data.BioModelConfig.model_name",false]],"model_type (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.model_type",false]],"modelconfig (class in cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.ModelConfig",false]],"modelmetadata (class in cellmap_flow.models.cellmap_models)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata",false]],"module":[[0,"module-cellmap_flow.blockwise.blockwise_processor",false],[1,"module-cellmap_flow.blockwise.cli",false],[2,"module-cellmap_flow.blockwise",false],[3,"module-cellmap_flow.cli.cli",false],[4,"module-cellmap_flow.cli",false],[5,"module-cellmap_flow.cli.multiple_cli",false],[6,"module-cellmap_flow.cli.multiple_yaml_cli",false],[7,"module-cellmap_flow.cli.server_cli",false],[8,"module-cellmap_flow.dashboard.app",false],[9,"module-cellmap_flow.dashboard",false],[10,"module-cellmap_flow.globals",false],[11,"module-cellmap_flow.image_data_interface",false],[12,"module-cellmap_flow",false],[13,"module-cellmap_flow.inferencer",false],[14,"module-cellmap_flow.models.cellmap_models",false],[15,"module-cellmap_flow.models",false],[16,"module-cellmap_flow.models.model_yaml",false],[17,"module-cellmap_flow.models.run",false],[18,"module-cellmap_flow.norm",false],[19,"module-cellmap_flow.norm.input_normalize",false],[20,"module-cellmap_flow.norm.models",false],[21,"module-cellmap_flow.post",false],[22,"module-cellmap_flow.post.postprocessors",false],[23,"module-cellmap_flow.server",false],[24,"module-cellmap_flow.utils.bsub_utils",false],[25,"module-cellmap_flow.utils.config_utils",false],[26,"module-cellmap_flow.utils.data",false],[27,"module-cellmap_flow.utils.ds",false],[28,"module-cellmap_flow.utils",false],[29,"module-cellmap_flow.utils.load_py",false],[30,"module-cellmap_flow.utils.neuroglancer_utils",false],[31,"module-cellmap_flow.utils.scale_pyramid",false],[32,"module-cellmap_flow.utils.web_utils",false]],"mortonsegmentationrelabeling (built-in class)":[[40,"MortonSegmentationRelabeling",false]],"mortonsegmentationrelabeling (class in cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling",false]],"multiplier (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.DefaultPostprocessor.multiplier",false]],"n5_block_shape (cellmap_flow.server.cellmapflowserver attribute)":[[23,"cellmap_flow.server.CellMapFlowServer.n5_block_shape",false]],"name (cellmap_flow.utils.data.biomodelconfig attribute)":[[26,"cellmap_flow.utils.data.BioModelConfig.name",false]],"name (cellmap_flow.utils.data.cellmapmodelconfig attribute)":[[26,"cellmap_flow.utils.data.CellMapModelConfig.name",false]],"name (cellmap_flow.utils.data.dacapomodelconfig attribute)":[[26,"cellmap_flow.utils.data.DaCapoModelConfig.name",false]],"name (cellmap_flow.utils.data.scriptmodelconfig attribute)":[[26,"cellmap_flow.utils.data.ScriptModelConfig.name",false]],"name() (cellmap_flow.norm.input_normalize.inputnormalizer class method)":[[19,"cellmap_flow.norm.input_normalize.InputNormalizer.name",false]],"name() (cellmap_flow.post.postprocessors.postprocessor class method)":[[22,"cellmap_flow.post.postprocessors.PostProcessor.name",false]],"name() (postprocessor method)":[[40,"PostProcessor.name",false]],"neighborhood (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.AffinityPostprocessor.neighborhood",false]],"neuroglancer_url (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.NEUROGLANCER_URL",false]],"normalizationmethods (in module cellmap_flow.norm.input_normalize)":[[19,"cellmap_flow.norm.input_normalize.NormalizationMethods",false]],"normalize() (cellmap_flow.norm.input_normalize.inputnormalizer method)":[[19,"cellmap_flow.norm.input_normalize.InputNormalizer.normalize",false]],"normalize() (cellmap_flow.norm.input_normalize.zscorenormalizer method)":[[19,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.normalize",false]],"num_channels (cellmap_flow.post.postprocessors.affinitypostprocessor property)":[[22,"cellmap_flow.post.postprocessors.AffinityPostprocessor.num_channels",false]],"num_channels (cellmap_flow.post.postprocessors.channelselection property)":[[22,"cellmap_flow.post.postprocessors.ChannelSelection.num_channels",false]],"num_previous_segments (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.AffinityPostprocessor.num_previous_segments",false]],"num_previous_segments (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling attribute)":[[22,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.num_previous_segments",false]],"offset (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[11,"cellmap_flow.image_data_interface.ImageDataInterface.offset",false]],"onnx_model (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[14,"cellmap_flow.models.cellmap_models.CellmapModel.onnx_model",false]],"open_ds_tensorstore() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.open_ds_tensorstore",false]],"optimize_model() (cellmap_flow.inferencer.inferencer method)":[[13,"cellmap_flow.inferencer.Inferencer.optimize_model",false]],"ort (in module cellmap_flow.models.cellmap_models)":[[14,"cellmap_flow.models.cellmap_models.ort",false]],"out_channels (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.out_channels",false]],"output_arrays (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_arrays",false]],"output_arrays (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_arrays",false]],"output_channels (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_channels",false]],"output_channels (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_channels",false]],"output_channels (cellmap_flow.server.cellmapflowserver attribute)":[[23,"cellmap_flow.server.CellMapFlowServer.output_channels",false]],"output_channels (cellmap_flow.server.dummyconfig attribute)":[[23,"cellmap_flow.server.DummyConfig.output_channels",false]],"output_dtype (cellmap_flow.utils.data.modelconfig property)":[[26,"cellmap_flow.utils.data.ModelConfig.output_dtype",false]],"output_path (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_path",false]],"output_path (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_path",false]],"output_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.output_shape",false]],"output_voxel_size (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_voxel_size",false]],"output_voxel_size (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_voxel_size",false]],"output_voxel_size (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.output_voxel_size",false]],"output_voxel_size (cellmap_flow.server.cellmapflowserver attribute)":[[23,"cellmap_flow.server.CellMapFlowServer.output_voxel_size",false]],"output_voxel_size (cellmap_flow.server.dummyconfig attribute)":[[23,"cellmap_flow.server.DummyConfig.output_voxel_size",false]],"parse_bpeek_output() (in module cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.parse_bpeek_output",false]],"parse_model_configs() (in module cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.parse_model_configs",false]],"path (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[11,"cellmap_flow.image_data_interface.ImageDataInterface.path",false]],"postprocess_dict_key (in module cellmap_flow.utils.web_utils)":[[32,"cellmap_flow.utils.web_utils.POSTPROCESS_DICT_KEY",false]],"postprocessing_lock (in module cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.postprocessing_lock",false]],"postprocessor (built-in class)":[[40,"PostProcessor",false]],"postprocessor (class in cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.PostProcessor",false]],"postprocessormethods (in module cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.PostProcessorMethods",false]],"predict() (in module cellmap_flow.inferencer)":[[13,"cellmap_flow.inferencer.predict",false]],"previous_refresh_time (cellmap_flow.server.cellmapflowserver attribute)":[[23,"cellmap_flow.server.CellMapFlowServer.previous_refresh_time",false]],"process (cellmap_flow.utils.bsub_utils.job attribute)":[[24,"cellmap_flow.utils.bsub_utils.Job.process",false]],"process() (cellmap_flow.post.postprocessors.postprocessor method)":[[22,"cellmap_flow.post.postprocessors.PostProcessor.process",false]],"process() (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.process",false]],"process() (postprocessor method)":[[40,"PostProcessor.process",false]],"process_chunk() (cellmap_flow.inferencer.inferencer method)":[[13,"cellmap_flow.inferencer.Inferencer.process_chunk",false]],"process_chunk_basic() (cellmap_flow.inferencer.inferencer method)":[[13,"cellmap_flow.inferencer.Inferencer.process_chunk_basic",false]],"process_chunk_bioimage() (in module cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.process_chunk_bioimage",false]],"process_chunk_bioimage_test() (in module cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.process_chunk_bioimage_test",false]],"process_fn() (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor method)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.process_fn",false]],"process_fn() (cellmap_flow.blockwise.cellmapflowblockwiseprocessor method)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.process_fn",false]],"pytorch_model (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[14,"cellmap_flow.models.cellmap_models.CellmapModel.pytorch_model",false]],"queue (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.queue",false]],"queue (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.queue",false]],"read_block_shape (cellmap_flow.server.cellmapflowserver attribute)":[[23,"cellmap_flow.server.CellMapFlowServer.read_block_shape",false]],"readme (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[14,"cellmap_flow.models.cellmap_models.CellmapModel.readme",false]],"refresh_rate_seconds (cellmap_flow.server.cellmapflowserver attribute)":[[23,"cellmap_flow.server.CellMapFlowServer.refresh_rate_seconds",false]],"regularize_offset() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.regularize_offset",false]],"reorder_axes() (in module cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.reorder_axes",false]],"root_dir (cellmap_flow.models.cellmap_models.cellmapmodels attribute)":[[14,"cellmap_flow.models.cellmap_models.CellmapModels.root_dir",false]],"run() (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor method)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.run",false]],"run() (cellmap_flow.blockwise.cellmapflowblockwiseprocessor method)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.run",false]],"run() (cellmap_flow.globals.flow class method)":[[10,"cellmap_flow.globals.Flow.run",false]],"run() (cellmap_flow.server.cellmapflowserver method)":[[23,"cellmap_flow.server.CellMapFlowServer.run",false]],"run() (in module cellmap_flow.blockwise.cli)":[[1,"cellmap_flow.blockwise.cli.run",false]],"run() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.run",false]],"run_locally() (in module cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.run_locally",false]],"run_model() (in module cellmap_flow.models.run)":[[17,"cellmap_flow.models.run.run_model",false]],"run_multiple() (in module cellmap_flow.cli.multiple_cli)":[[5,"cellmap_flow.cli.multiple_cli.run_multiple",false]],"run_multiple() (in module cellmap_flow.cli.multiple_yaml_cli)":[[6,"cellmap_flow.cli.multiple_yaml_cli.run_multiple",false]],"run_name (cellmap_flow.utils.data.dacapomodelconfig attribute)":[[26,"cellmap_flow.utils.data.DaCapoModelConfig.run_name",false]],"run_server() (in module cellmap_flow.cli.server_cli)":[[7,"cellmap_flow.cli.server_cli.run_server",false]],"run_ui_server() (in module cellmap_flow.cli.server_cli)":[[7,"cellmap_flow.cli.server_cli.run_ui_server",false]],"scale (cellmap_flow.utils.data.cellmapmodelconfig attribute)":[[26,"cellmap_flow.utils.data.CellMapModelConfig.scale",false]],"scale (cellmap_flow.utils.data.scriptmodelconfig attribute)":[[26,"cellmap_flow.utils.data.ScriptModelConfig.scale",false]],"scalepyramid (class in cellmap_flow.utils.scale_pyramid)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid",false]],"script() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.script",false]],"script() (in module cellmap_flow.cli.server_cli)":[[7,"cellmap_flow.cli.server_cli.script",false]],"script_path (cellmap_flow.utils.data.scriptmodelconfig attribute)":[[26,"cellmap_flow.utils.data.ScriptModelConfig.script_path",false]],"script_server_check() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.script_server_check",false]],"scriptmodelconfig (class in cellmap_flow.utils.data)":[[26,"cellmap_flow.utils.data.ScriptModelConfig",false]],"security (in module cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.security",false]],"separate_store_path() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.separate_store_path",false]],"server_command (in module cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.SERVER_COMMAND",false]],"server_queue_arg (in module cellmap_flow.cli.multiple_cli)":[[5,"cellmap_flow.cli.multiple_cli.server_queue_arg",false]],"show() (in module cellmap_flow.utils.neuroglancer_utils)":[[30,"cellmap_flow.utils.neuroglancer_utils.show",false]],"simpleblockwisemerger (built-in class)":[[40,"SimpleBlockwiseMerger",false]],"simpleblockwisemerger (class in cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger",false]],"slices (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.slices",false]],"spatial_dims (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.spatial_dims",false]],"spawn_worker() (in module cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.spawn_worker",false]],"split_dataset_path() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.split_dataset_path",false]],"start_hosts() (in module cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.start_hosts",false]],"status (cellmap_flow.utils.bsub_utils.job attribute)":[[24,"cellmap_flow.utils.bsub_utils.Job.status",false]],"std (cellmap_flow.norm.input_normalize.zscorenormalizer attribute)":[[19,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.std",false]],"stop() (cellmap_flow.globals.flow class method)":[[10,"cellmap_flow.globals.Flow.stop",false]],"submit_bsub_job() (in module cellmap_flow.utils.bsub_utils)":[[24,"cellmap_flow.utils.bsub_utils.submit_bsub_job",false]],"submit_models() (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.submit_models",false]],"swap_axes (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[11,"cellmap_flow.image_data_interface.ImageDataInterface.swap_axes",false]],"task_name (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.task_name",false]],"task_name (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.task_name",false]],"threshold (cellmap_flow.post.postprocessors.thresholdpostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.ThresholdPostprocessor.threshold",false]],"thresholdpostprocessor (built-in class)":[[40,"ThresholdPostprocessor",false]],"thresholdpostprocessor (class in cellmap_flow.post.postprocessors)":[[22,"cellmap_flow.post.postprocessors.ThresholdPostprocessor",false]],"to_dict() (cellmap_flow.globals.flow method)":[[10,"cellmap_flow.globals.Flow.to_dict",false]],"to_dict() (cellmap_flow.norm.input_normalize.inputnormalizer method)":[[19,"cellmap_flow.norm.input_normalize.InputNormalizer.to_dict",false]],"to_dict() (cellmap_flow.norm.input_normalize.lambdanormalizer method)":[[19,"cellmap_flow.norm.input_normalize.LambdaNormalizer.to_dict",false]],"to_dict() (cellmap_flow.post.postprocessors.affinitypostprocessor method)":[[22,"cellmap_flow.post.postprocessors.AffinityPostprocessor.to_dict",false]],"to_dict() (cellmap_flow.post.postprocessors.channelselection method)":[[22,"cellmap_flow.post.postprocessors.ChannelSelection.to_dict",false]],"to_dict() (cellmap_flow.post.postprocessors.labelpostprocessor method)":[[22,"cellmap_flow.post.postprocessors.LabelPostprocessor.to_dict",false]],"to_dict() (cellmap_flow.post.postprocessors.lambdapostprocessor method)":[[22,"cellmap_flow.post.postprocessors.LambdaPostprocessor.to_dict",false]],"to_dict() (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling method)":[[22,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.to_dict",false]],"to_dict() (cellmap_flow.post.postprocessors.postprocessor method)":[[22,"cellmap_flow.post.postprocessors.PostProcessor.to_dict",false]],"to_dict() (cellmap_flow.post.postprocessors.simpleblockwisemerger method)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.to_dict",false]],"to_dict() (cellmap_flow.post.postprocessors.thresholdpostprocessor method)":[[22,"cellmap_flow.post.postprocessors.ThresholdPostprocessor.to_dict",false]],"to_dict() (postprocessor method)":[[40,"PostProcessor.to_dict",false]],"to_ndarray_tensorstore() (in module cellmap_flow.utils.ds)":[[27,"cellmap_flow.utils.ds.to_ndarray_tensorstore",false]],"to_ndarray_ts() (cellmap_flow.image_data_interface.imagedatainterface method)":[[11,"cellmap_flow.image_data_interface.ImageDataInterface.to_ndarray_ts",false]],"token (cellmap_flow.utils.scale_pyramid.scalepyramid property)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid.token",false]],"torch (in module cellmap_flow.models.cellmap_models)":[[14,"cellmap_flow.models.cellmap_models.torch",false]],"ts (cellmap_flow.image_data_interface.imagedatainterface property)":[[11,"cellmap_flow.image_data_interface.ImageDataInterface.ts",false]],"ts_dataset (cellmap_flow.utils.ds.lazynormalization attribute)":[[27,"cellmap_flow.utils.ds.LazyNormalization.ts_dataset",false]],"ts_model (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[14,"cellmap_flow.models.cellmap_models.CellmapModel.ts_model",false]],"update_equivalences() (in module cellmap_flow.dashboard.app)":[[8,"cellmap_flow.dashboard.app.update_equivalences",false]],"update_run_models() (in module cellmap_flow.models.run)":[[17,"cellmap_flow.models.run.update_run_models",false]],"use_exact (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[22,"cellmap_flow.post.postprocessors.AffinityPostprocessor.use_exact",false]],"use_exact (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling attribute)":[[22,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.use_exact",false]],"use_exact (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[22,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.use_exact",false]],"use_half_prediction (cellmap_flow.inferencer.inferencer attribute)":[[13,"cellmap_flow.inferencer.Inferencer.use_half_prediction",false]],"version (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[14,"cellmap_flow.models.cellmap_models.ModelMetadata.version",false]],"volume_layers (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid.volume_layers",false]],"volume_type (cellmap_flow.utils.scale_pyramid.scalepyramid property)":[[31,"cellmap_flow.utils.scale_pyramid.ScalePyramid.volume_type",false]],"voxel_size (cellmap_flow.utils.data.biomodelconfig attribute)":[[26,"cellmap_flow.utils.data.BioModelConfig.voxel_size",false]],"voxels_to_process (cellmap_flow.utils.data.biomodelconfig attribute)":[[26,"cellmap_flow.utils.data.BioModelConfig.voxels_to_process",false]],"workers (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.workers",false]],"workers (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.workers",false]],"yaml_config (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.yaml_config",false]],"yaml_config (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.yaml_config",false]],"zscorenormalizer (class in cellmap_flow.norm.input_normalize)":[[19,"cellmap_flow.norm.input_normalize.ZScoreNormalizer",false]]},"objects":{"":[[40,0,1,"","AffinityPostprocessor"],[40,0,1,"","ChannelSelection"],[40,0,1,"","DefaultPostprocessor"],[40,0,1,"","LabelPostprocessor"],[40,0,1,"","LambdaPostprocessor"],[40,0,1,"","MortonSegmentationRelabeling"],[40,0,1,"","PostProcessor"],[40,0,1,"","SimpleBlockwiseMerger"],[40,0,1,"","ThresholdPostprocessor"],[12,3,0,"-","cellmap_flow"]],"PostProcessor":[[40,1,1,"","__call__"],[40,1,1,"","_process"],[40,2,1,"","dtype"],[40,2,1,"","is_segmentation"],[40,1,1,"","name"],[40,1,1,"","process"],[40,1,1,"","to_dict"]],"cellmap_flow":[[2,3,0,"-","blockwise"],[4,3,0,"-","cli"],[9,3,0,"-","dashboard"],[10,3,0,"-","globals"],[11,3,0,"-","image_data_interface"],[13,3,0,"-","inferencer"],[15,3,0,"-","models"],[18,3,0,"-","norm"],[21,3,0,"-","post"],[23,3,0,"-","server"],[28,3,0,"-","utils"]],"cellmap_flow.blockwise":[[2,0,1,"","CellMapFlowBlockwiseProcessor"],[0,3,0,"-","blockwise_processor"],[1,3,0,"-","cli"]],"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor":[[2,2,1,"","block_shape"],[2,2,1,"","channels"],[2,2,1,"","charge_group"],[2,1,1,"","client"],[2,2,1,"","config"],[2,2,1,"","dtype"],[2,2,1,"","idi_raw"],[2,2,1,"","inferencer"],[2,2,1,"","input_path"],[2,2,1,"","input_voxel_size"],[2,2,1,"","json_str"],[2,2,1,"","model_config"],[2,2,1,"","output_arrays"],[2,2,1,"","output_channels"],[2,2,1,"","output_path"],[2,2,1,"","output_voxel_size"],[2,1,1,"","process_fn"],[2,2,1,"","queue"],[2,1,1,"","run"],[2,2,1,"","task_name"],[2,2,1,"","workers"],[2,2,1,"","yaml_config"]],"cellmap_flow.blockwise.blockwise_processor":[[0,0,1,"","CellMapFlowBlockwiseProcessor"],[0,4,1,"","get_process_dataset"],[0,5,1,"","logger"],[0,4,1,"","spawn_worker"]],"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor":[[0,2,1,"","block_shape"],[0,2,1,"","channels"],[0,2,1,"","charge_group"],[0,1,1,"","client"],[0,2,1,"","config"],[0,2,1,"","dtype"],[0,2,1,"","idi_raw"],[0,2,1,"","inferencer"],[0,2,1,"","input_path"],[0,2,1,"","input_voxel_size"],[0,2,1,"","json_str"],[0,2,1,"","model_config"],[0,2,1,"","output_arrays"],[0,2,1,"","output_channels"],[0,2,1,"","output_path"],[0,2,1,"","output_voxel_size"],[0,1,1,"","process_fn"],[0,2,1,"","queue"],[0,1,1,"","run"],[0,2,1,"","task_name"],[0,2,1,"","workers"],[0,2,1,"","yaml_config"]],"cellmap_flow.blockwise.cli":[[1,4,1,"","cli"],[1,5,1,"","logger"],[1,4,1,"","run"]],"cellmap_flow.cli":[[3,3,0,"-","cli"],[5,3,0,"-","multiple_cli"],[6,3,0,"-","multiple_yaml_cli"],[7,3,0,"-","server_cli"]],"cellmap_flow.cli.cli":[[3,4,1,"","bioimage"],[3,4,1,"","cellmap_model"],[3,4,1,"","cli"],[3,4,1,"","dacapo"],[3,5,1,"id0","logger"],[3,4,1,"","run"],[3,4,1,"","script"],[3,4,1,"","script_server_check"]],"cellmap_flow.cli.multiple_cli":[[5,5,1,"","DEFAULT_SERVER_QUEUE"],[5,5,1,"","charge_group_arg"],[5,5,1,"","data_args"],[5,5,1,"","logger"],[5,4,1,"","main"],[5,4,1,"","run_multiple"],[5,5,1,"","server_queue_arg"]],"cellmap_flow.cli.multiple_yaml_cli":[[6,5,1,"","logger"],[6,4,1,"","main"],[6,4,1,"","run_multiple"]],"cellmap_flow.cli.server_cli":[[7,4,1,"","bioimage"],[7,4,1,"","cellmap_model"],[7,4,1,"","cli"],[7,4,1,"","dacapo"],[7,5,1,"","logger"],[7,4,1,"","run_server"],[7,4,1,"","run_ui_server"],[7,4,1,"","script"]],"cellmap_flow.dashboard":[[8,3,0,"-","app"]],"cellmap_flow.dashboard.app":[[8,5,1,"","CustomCodeFolder"],[8,5,1,"","INFERENCE_SERVER"],[8,5,1,"","NEUROGLANCER_URL"],[8,5,1,"","app"],[8,4,1,"","create_and_run_app"],[8,4,1,"","index"],[8,4,1,"","is_output_segmentation"],[8,5,1,"","logger"],[8,4,1,"","process"],[8,4,1,"","submit_models"],[8,4,1,"","update_equivalences"]],"cellmap_flow.globals":[[10,0,1,"","Flow"],[10,5,1,"","g"]],"cellmap_flow.globals.Flow":[[10,1,1,"","delete"],[10,1,1,"","get_output_dtype"],[10,1,1,"","run"],[10,1,1,"","stop"],[10,1,1,"","to_dict"]],"cellmap_flow.image_data_interface":[[11,0,1,"","ImageDataInterface"]],"cellmap_flow.image_data_interface.ImageDataInterface":[[11,2,1,"","concurrency_limit"],[11,2,1,"","custom_fill_value"],[11,2,1,"","filetype"],[11,2,1,"","offset"],[11,2,1,"","path"],[11,2,1,"","swap_axes"],[11,1,1,"","to_ndarray_ts"],[11,6,1,"","ts"]],"cellmap_flow.inferencer":[[13,0,1,"","Inferencer"],[13,4,1,"","apply_postprocess"],[13,5,1,"","logger"],[13,4,1,"","predict"]],"cellmap_flow.inferencer.Inferencer":[[13,2,1,"","model_config"],[13,1,1,"","optimize_model"],[13,1,1,"","process_chunk"],[13,1,1,"","process_chunk_basic"],[13,2,1,"","use_half_prediction"]],"cellmap_flow.models":[[14,3,0,"-","cellmap_models"],[16,3,0,"-","model_yaml"],[17,3,0,"-","run"]],"cellmap_flow.models.cellmap_models":[[14,0,1,"","CellmapModel"],[14,0,1,"","CellmapModels"],[14,0,1,"","ModelMetadata"],[14,5,1,"","ort"],[14,5,1,"","torch"]],"cellmap_flow.models.cellmap_models.CellmapModel":[[14,2,1,"","folder_path"],[14,6,1,"","metadata"],[14,6,1,"","onnx_model"],[14,6,1,"","pytorch_model"],[14,6,1,"","readme"],[14,6,1,"","ts_model"]],"cellmap_flow.models.cellmap_models.CellmapModels":[[14,1,1,"","list_models"],[14,2,1,"","root_dir"]],"cellmap_flow.models.cellmap_models.ModelMetadata":[[14,2,1,"","__class_vars__"],[14,2,1,"","__private_attributes__"],[14,2,1,"","__pydantic_complete__"],[14,2,1,"","__pydantic_computed_fields__"],[14,2,1,"","__pydantic_core_schema__"],[14,2,1,"","__pydantic_custom_init__"],[14,2,1,"","__pydantic_decorators__"],[14,2,1,"","__pydantic_extra__"],[14,2,1,"","__pydantic_fields__"],[14,2,1,"","__pydantic_fields_set__"],[14,2,1,"","__pydantic_generic_metadata__"],[14,2,1,"","__pydantic_parent_namespace__"],[14,2,1,"","__pydantic_post_init__"],[14,2,1,"","__pydantic_private__"],[14,2,1,"","__pydantic_root_model__"],[14,2,1,"","__pydantic_serializer__"],[14,2,1,"","__pydantic_validator__"],[14,2,1,"","__signature__"],[14,2,1,"","author"],[14,2,1,"","channels_names"],[14,2,1,"","description"],[14,2,1,"","framework"],[14,2,1,"","in_channels"],[14,2,1,"","inference_input_shape"],[14,2,1,"","inference_output_shape"],[14,2,1,"","input_shape"],[14,2,1,"","input_voxel_size"],[14,2,1,"","iteration"],[14,2,1,"","model_name"],[14,2,1,"","model_type"],[14,2,1,"","out_channels"],[14,2,1,"","output_shape"],[14,2,1,"","output_voxel_size"],[14,2,1,"","spatial_dims"],[14,2,1,"","version"]],"cellmap_flow.models.model_yaml":[[16,4,1,"","load_model_paths"]],"cellmap_flow.models.run":[[17,5,1,"","logger"],[17,4,1,"","run_model"],[17,4,1,"","update_run_models"]],"cellmap_flow.norm":[[19,3,0,"-","input_normalize"],[20,3,0,"-","models"]],"cellmap_flow.norm.input_normalize":[[19,0,1,"","InputNormalizer"],[19,0,1,"","LambdaNormalizer"],[19,0,1,"","MinMaxNormalizer"],[19,5,1,"","NormalizationMethods"],[19,0,1,"","ZScoreNormalizer"],[19,4,1,"","get_input_normalizers"],[19,4,1,"","get_normalizations"],[19,5,1,"","logger"]],"cellmap_flow.norm.input_normalize.InputNormalizer":[[19,6,1,"","dtype"],[19,1,1,"","name"],[19,1,1,"","normalize"],[19,1,1,"","to_dict"]],"cellmap_flow.norm.input_normalize.LambdaNormalizer":[[19,6,1,"","dtype"],[19,2,1,"","expression"],[19,1,1,"","to_dict"]],"cellmap_flow.norm.input_normalize.MinMaxNormalizer":[[19,6,1,"","dtype"],[19,2,1,"","max_value"],[19,2,1,"","min_value"]],"cellmap_flow.norm.input_normalize.ZScoreNormalizer":[[19,6,1,"","dtype"],[19,2,1,"","mean"],[19,1,1,"","normalize"],[19,2,1,"","std"]],"cellmap_flow.norm.models":[[20,4,1,"","get_available_models"]],"cellmap_flow.post":[[22,3,0,"-","postprocessors"]],"cellmap_flow.post.postprocessors":[[22,0,1,"","AffinityPostprocessor"],[22,0,1,"","ChannelSelection"],[22,0,1,"","DefaultPostprocessor"],[22,0,1,"","LabelPostprocessor"],[22,0,1,"","LambdaPostprocessor"],[22,0,1,"","MortonSegmentationRelabeling"],[22,0,1,"","PostProcessor"],[22,5,1,"","PostProcessorMethods"],[22,0,1,"","SimpleBlockwiseMerger"],[22,0,1,"","ThresholdPostprocessor"],[22,4,1,"","get_postprocessors"],[22,4,1,"","get_postprocessors_list"],[22,5,1,"","logger"],[22,5,1,"","postprocessing_lock"]],"cellmap_flow.post.postprocessors.AffinityPostprocessor":[[22,2,1,"","bias"],[22,6,1,"","dtype"],[22,6,1,"","is_segmentation"],[22,2,1,"","neighborhood"],[22,6,1,"","num_channels"],[22,2,1,"","num_previous_segments"],[22,1,1,"","to_dict"],[22,2,1,"","use_exact"]],"cellmap_flow.post.postprocessors.ChannelSelection":[[22,2,1,"","channels"],[22,6,1,"","num_channels"],[22,1,1,"","to_dict"]],"cellmap_flow.post.postprocessors.DefaultPostprocessor":[[22,2,1,"","bias"],[22,2,1,"","clip_max"],[22,2,1,"","clip_min"],[22,6,1,"","dtype"],[22,6,1,"","is_segmentation"],[22,2,1,"","multiplier"]],"cellmap_flow.post.postprocessors.LabelPostprocessor":[[22,2,1,"","channel"],[22,6,1,"","dtype"],[22,6,1,"","is_segmentation"],[22,1,1,"","to_dict"]],"cellmap_flow.post.postprocessors.LambdaPostprocessor":[[22,6,1,"","dtype"],[22,2,1,"","expression"],[22,1,1,"","to_dict"]],"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling":[[22,2,1,"","channel"],[22,6,1,"","dtype"],[22,6,1,"","is_segmentation"],[22,2,1,"","num_previous_segments"],[22,1,1,"","to_dict"],[22,2,1,"","use_exact"]],"cellmap_flow.post.postprocessors.PostProcessor":[[22,6,1,"","dtype"],[22,6,1,"","is_segmentation"],[22,1,1,"","name"],[22,1,1,"","process"],[22,1,1,"","to_dict"]],"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger":[[22,1,1,"","calculate_equivalences"],[22,2,1,"","channel"],[22,2,1,"","chunk_slice_position_to_coords_id_dict"],[22,6,1,"","dtype"],[22,2,1,"","equivalences"],[22,2,1,"","face_erosion_iterations"],[22,6,1,"","is_segmentation"],[22,2,1,"","keys_to_skip"],[22,2,1,"","slices"],[22,1,1,"","to_dict"],[22,2,1,"","use_exact"]],"cellmap_flow.post.postprocessors.ThresholdPostprocessor":[[22,6,1,"","dtype"],[22,6,1,"","is_segmentation"],[22,2,1,"","threshold"],[22,1,1,"","to_dict"]],"cellmap_flow.server":[[23,0,1,"","CellMapFlowServer"],[23,0,1,"","DummyConfig"],[23,4,1,"","get_process_dataset"],[23,5,1,"","logger"]],"cellmap_flow.server.CellMapFlowServer":[[23,2,1,"","chunk_encoder"],[23,2,1,"","idi_raw"],[23,2,1,"","inferencer"],[23,2,1,"","input_voxel_size"],[23,2,1,"","n5_block_shape"],[23,2,1,"","output_channels"],[23,2,1,"","output_voxel_size"],[23,2,1,"","previous_refresh_time"],[23,2,1,"","read_block_shape"],[23,2,1,"","refresh_rate_seconds"],[23,1,1,"","run"]],"cellmap_flow.server.DummyConfig":[[23,2,1,"","block_shape"],[23,2,1,"","output_channels"],[23,2,1,"","output_voxel_size"]],"cellmap_flow.utils":[[24,3,0,"-","bsub_utils"],[25,3,0,"-","config_utils"],[26,3,0,"-","data"],[27,3,0,"-","ds"],[29,3,0,"-","load_py"],[30,3,0,"-","neuroglancer_utils"],[31,3,0,"-","scale_pyramid"],[32,3,0,"-","web_utils"]],"cellmap_flow.utils.bsub_utils":[[24,0,1,"","Job"],[24,5,1,"","SERVER_COMMAND"],[24,4,1,"","cleanup"],[24,4,1,"","get_host_from_stdout"],[24,4,1,"","is_bsub_available"],[24,5,1,"id0","logger"],[24,4,1,"","parse_bpeek_output"],[24,4,1,"","run_locally"],[24,5,1,"","security"],[24,4,1,"","start_hosts"],[24,4,1,"","submit_bsub_job"]],"cellmap_flow.utils.bsub_utils.Job":[[24,2,1,"","host"],[24,2,1,"","job_id"],[24,1,1,"","kill"],[24,2,1,"","model_name"],[24,2,1,"","process"],[24,2,1,"","status"]],"cellmap_flow.utils.config_utils":[[25,5,1,"","DEFAULT_SERVER_QUEUE"],[25,4,1,"","build_models"],[25,4,1,"","load_config"],[25,5,1,"","logger"]],"cellmap_flow.utils.data":[[26,0,1,"","BioModelConfig"],[26,0,1,"","CellMapModelConfig"],[26,0,1,"","Config"],[26,0,1,"","DaCapoModelConfig"],[26,0,1,"","ModelConfig"],[26,0,1,"","ScriptModelConfig"],[26,4,1,"","check_config"],[26,4,1,"","concat_along_c"],[26,4,1,"","format_output_bioimage"],[26,4,1,"","get_dacapo_channels"],[26,4,1,"","get_dacapo_run_model"],[26,5,1,"","logger"],[26,4,1,"","parse_model_configs"],[26,4,1,"","process_chunk_bioimage"],[26,4,1,"","process_chunk_bioimage_test"],[26,4,1,"","reorder_axes"]],"cellmap_flow.utils.data.BioModelConfig":[[26,6,1,"","command"],[26,1,1,"","get_axes_and_dims"],[26,1,1,"","get_input_slicer"],[26,1,1,"","get_spatial_dims"],[26,1,1,"","load_input_information"],[26,1,1,"","load_output_information"],[26,2,1,"","model_name"],[26,2,1,"","name"],[26,2,1,"","voxel_size"],[26,2,1,"","voxels_to_process"]],"cellmap_flow.utils.data.CellMapModelConfig":[[26,2,1,"","cellmap_model"],[26,6,1,"","command"],[26,2,1,"","name"],[26,2,1,"","scale"]],"cellmap_flow.utils.data.DaCapoModelConfig":[[26,6,1,"","command"],[26,2,1,"","iteration"],[26,2,1,"","name"],[26,2,1,"","run_name"]],"cellmap_flow.utils.data.ModelConfig":[[26,6,1,"","config"],[26,6,1,"","output_dtype"]],"cellmap_flow.utils.data.ScriptModelConfig":[[26,6,1,"","command"],[26,2,1,"","name"],[26,2,1,"","scale"],[26,2,1,"","script_path"]],"cellmap_flow.utils.ds":[[27,0,1,"","LazyNormalization"],[27,4,1,"","access_parent"],[27,4,1,"","apply_norms"],[27,4,1,"","check_for_attrs_multiscale"],[27,4,1,"","check_for_multiscale"],[27,4,1,"","check_for_offset"],[27,4,1,"","check_for_units"],[27,4,1,"","check_for_voxel_size"],[27,4,1,"","ends_with_scale"],[27,4,1,"","find_target_scale"],[27,4,1,"","get_ds_info"],[27,4,1,"","get_scale_info"],[27,4,1,"","get_url"],[27,5,1,"","logger"],[27,4,1,"","open_ds_tensorstore"],[27,4,1,"","regularize_offset"],[27,4,1,"","separate_store_path"],[27,4,1,"","split_dataset_path"],[27,4,1,"","to_ndarray_tensorstore"]],"cellmap_flow.utils.ds.LazyNormalization":[[27,2,1,"","ts_dataset"]],"cellmap_flow.utils.load_py":[[29,0,1,"","Config"],[29,5,1,"","DISALLOWED_FUNCTIONS"],[29,5,1,"","DISALLOWED_IMPORTS"],[29,4,1,"","analyze_script"],[29,4,1,"","load_safe_config"]],"cellmap_flow.utils.neuroglancer_utils":[[30,4,1,"","generate_neuroglancer_url"],[30,5,1,"","logger"],[30,4,1,"","show"]],"cellmap_flow.utils.scale_pyramid":[[31,0,1,"","ScalePyramid"],[31,4,1,"","get_raw_layer"],[31,5,1,"","logger"]],"cellmap_flow.utils.scale_pyramid.ScalePyramid":[[31,2,1,"","dims"],[31,1,1,"","get_encoded_subvolume"],[31,1,1,"","get_object_mesh"],[31,1,1,"","info"],[31,1,1,"","invalidate"],[31,2,1,"","max_voxel_size"],[31,2,1,"","min_voxel_size"],[31,6,1,"","token"],[31,2,1,"","volume_layers"],[31,6,1,"","volume_type"]],"cellmap_flow.utils.web_utils":[[32,5,1,"","ARGS_KEY"],[32,5,1,"","INPUT_NORM_DICT_KEY"],[32,5,1,"","IP_PATTERN"],[32,5,1,"","POSTPROCESS_DICT_KEY"],[32,4,1,"","decode_to_json"],[32,4,1,"","encode_to_str"],[32,4,1,"","get_free_port"],[32,4,1,"","get_norms_post_args"],[32,4,1,"","get_public_ip"],[32,4,1,"","kill_n_remove_from_neuroglancer"],[32,4,1,"","list_cls_to_dict"]]},"objnames":{"0":["py","class","Python class"],"1":["py","method","Python method"],"2":["py","attribute","Python attribute"],"3":["py","module","Python module"],"4":["py","function","Python function"],"5":["py","data","Python data"],"6":["py","property","Python property"]},"objtypes":{"0":"py:class","1":"py:method","2":"py:attribute","3":"py:module","4":"py:function","5":"py:data","6":"py:property"},"terms":{"":[3,5,7,32,36],"0":[19,22,23,35,40],"003":36,"1":[11,19,22,23,26,33,35,36,40],"10":32,"12":0,"127":[22,40],"1413":36,"16":36,"168":32,"192":32,"2":[36,40],"2024":35,"20241204_finetune_mito_affs_task_datasplit_v3_u21_kidney_mito_default_cache_8_1":36,"255":19,"3":22,"32":23,"4":[23,26],"5":[22,23,40],"50":5,"60":5,"6_pixel":27,"700000":36,"9":22,"A":[14,27,31,36],"For":[26,35],"IF":26,"If":[14,26,27,29,35],"Not":41,"One":31,"The":[3,7,14,26,27,35,36,40],"To":[3,7,36,37],"__args__":14,"__call__":40,"__cflow_args__":32,"__class_vars__":14,"__init__":14,"__origin__":14,"__parameters__":14,"__private_attributes__":14,"__pydantic_complete__":14,"__pydantic_computed_fields__":14,"__pydantic_core_schema__":14,"__pydantic_custom_init__":14,"__pydantic_decorators__":14,"__pydantic_extra__":14,"__pydantic_fields__":14,"__pydantic_fields_set__":14,"__pydantic_generic_metadata__":14,"__pydantic_parent_namespace__":14,"__pydantic_post_init__":14,"__pydantic_private__":14,"__pydantic_root_model__":14,"__pydantic_serializer__":14,"__pydantic_validator__":14,"__root_validators__":14,"__signature__":14,"__validators__":14,"_build":35,"_description_":27,"_process":40,"_static":35,"_templat":35,"about":14,"absolut":35,"abspath":35,"abstract":[14,40],"access_par":27,"ackerman":35,"across":41,"ad":40,"add":35,"address":32,"adjust":14,"affect":35,"affin":40,"affinitypostprocessor":22,"after":[29,35,40],"against":27,"all":[14,22,23,27,40],"allow":[5,14],"almost":41,"along":26,"also":35,"alvyrai":27,"an":[14,26,27,29,36],"analyz":29,"analyze_script":29,"ani":[14,26,27,35,36,39],"anoth":35,"api":35,"app":[9,33],"appar":27,"appli":40,"applic":[3,7,23],"apply_norm":27,"apply_postprocess":13,"appropri":5,"ar":[14,23,27,35],"arg":36,"args_kei":32,"argument":[5,27],"arr":26,"arrai":[26,27,40,41],"ast":29,"attr":27,"attribut":40,"aubrei":35,"author":[14,35],"auto":[33,35],"autoapi":[33,35],"autoapi_dir":35,"autoapi_opt":35,"autoapi_typ":35,"autobuild":35,"autodoc":35,"automat":14,"avail":[14,36],"ax":26,"axes_list":26,"axi":26,"back":32,"base":14,"basic":[36,37,41],"befor":40,"behind":32,"between":40,"bia":[22,40],"bias":40,"binar":40,"bioimag":[3,7,37,39],"biomodelconfig":26,"block":[0,2,36],"block_shap":[0,2,23,36],"blockwis":[12,33,41],"blockwise_processor":[2,33],"bodi":27,"boolean":[29,40],"both":[36,37],"boundari":40,"bsub_util":[28,33],"build":14,"build_model":25,"builder":35,"builtin":35,"c":26,"calculate_equival":22,"call":[5,29],"can":[26,27,35,36,37],"cellmap":[3,7,8,10,24,35,36,37],"cellmap_flow":[33,35,36],"cellmap_flow_multipl":[5,36],"cellmap_flow_serv":[7,24],"cellmap_flow_server_ip":32,"cellmap_flow_with_yaml":6,"cellmap_model":[3,7,15,26,33],"cellmapflow":[3,7,36,37],"cellmapflowblockwiseprocessor":[0,2],"cellmapflowserv":23,"cellmapmodel":[14,26],"cellmapmodelconfig":26,"center":27,"cerebellum":36,"certfil":[7,23],"certif":23,"cg":27,"chain":5,"chang":36,"channel":[0,2,22,26,36,40],"channel_axis_nam":26,"channels_nam":14,"channelselect":22,"charge_group":[0,2,3,5,6,10,24],"charge_group_arg":5,"check":27,"check_config":26,"check_for_attrs_multiscal":27,"check_for_multiscal":27,"check_for_offset":27,"check_for_unit":27,"check_for_voxel_s":27,"chunk":40,"chunk_encod":23,"chunk_slice_position_to_coords_id_dict":22,"classif":40,"classmethod":[10,19,22],"cleanup":24,"cli":[2,12,33,35],"client":[0,1,2,31],"clip":40,"clip_max":[22,40],"clip_min":[22,40],"cloud":[36,39],"cm":27,"colexicograph":27,"com":27,"come":35,"comma":40,"command":[3,5,7,24,26,36,37],"common":35,"complet":[14,41],"compon":40,"comput":14,"computedfieldinfo":14,"concat_along_c":26,"concaten":26,"concept":14,"concurrency_limit":[11,27],"conda":36,"config":[0,2,6,13,14,26,29],"config_fold":3,"config_path":29,"config_util":[28,33],"configdict":14,"configur":[25,26,29,35,41],"connect":40,"consist":[26,40],"construct":[26,36],"contain":[14,22,27,33,35],"contribut":36,"control":40,"conveni":23,"convent":[27,41],"convert":40,"coordin":27,"copi":35,"copyright":35,"core":[14,27,36,37],"corner":27,"correct":[25,26,27],"correspond":[14,26],"cpu":14,"creat":[0,2,14,27,33],"create_and_run_app":8,"css":35,"current":[36,41],"custom":[3,7,14,35],"custom_fill_valu":[11,27],"customcodefold":8,"d":[3,5,7,28,33,36],"dacapo":[3,5,7,37,39],"dacapomodelconfig":26,"dashboard":[12,33],"data":[5,13,14,19,22,23,27,28,31,32,33,36,39,40,41],"data_arg":5,"data_format":31,"data_path":[3,7,36],"dataset":[3,23,27,41],"dataset_nam":23,"dataset_path":[3,5,6,11,27,30,31],"david":35,"db":35,"debug":[7,23],"decod":32,"decode_to_json":32,"decor":[14,23],"deem":29,"default":[26,35],"default_server_queu":[5,25],"defaultpostprocessor":22,"defin":[14,23,26,27,36,40],"delet":10,"depend":[36,37],"descript":14,"desir":[3,7,26],"desired_ord":26,"desktop":8,"detect":[14,29],"determin":27,"dev":23,"develop":[36,41],"dict":[16,19,22],"dictionari":[14,22,27,40],"differ":31,"dim":[26,31],"dimens":[26,27],"directori":[14,27,35],"disallowed_funct":29,"disallowed_import":29,"discov":14,"discuss":27,"dispatch":[5,40],"displai":36,"do":36,"doc":35,"document":[14,33,35,41],"doe":[32,36,37],"doesn":14,"done":41,"down":41,"draft":41,"ds_name":27,"ds_store":35,"dtype":[0,2,19,22,26,40],"due":27,"dummyconfig":23,"dump":14,"dure":14,"e":[27,32,36,40],"each":[5,27,40],"edg":40,"edge_length_to_process":[3,7,26],"either":26,"element":27,"elm":[19,22],"els":14,"em":36,"empti":27,"en":35,"enabl":36,"encod":[32,40],"encode_to_str":32,"encoded_str":32,"end":31,"ends_with_scal":27,"ensur":40,"entir":14,"entri":25,"equival":[22,40],"equivalence_map":40,"eros":40,"error":[27,29],"etc":[5,27],"eventu":14,"exactli":26,"exampl":[3,5,7,8,36],"example_job":24,"example_norm":8,"exclude_pattern":35,"exist":[14,27],"explicitli":14,"explor":36,"express":[19,22,40],"ext":35,"extens":35,"extra":14,"face":[32,40],"face_erosion_iter":[22,40],"factor":40,"fals":[23,27,29],"favicon":35,"feel":36,"fibsem":36,"field":14,"fieldinfo":14,"file":[14,26,27,35],"filenam":27,"filepath":29,"filetyp":11,"filter":40,"final":26,"find_target_scal":27,"first":41,"flask":23,"flo":[3,7],"float":[22,27],"float32":26,"flow":[8,10,35,36,37],"fmt":35,"folder_path":[7,14,26],"follow":[3,7,36,37],"force_saf":29,"force_safe_config":29,"format_output_bioimag":26,"found":27,"frame":24,"framework":[14,40],"free":36,"frequent":36,"from":[14,25,26,27,36,40],"full":35,"function":[14,36],"funlib":[26,27],"g":[10,32,36,40],"gener":[14,33,35,40],"generate_neuroglancer_url":30,"geometri":[26,27],"get":27,"get_available_model":20,"get_axes_and_dim":26,"get_dacapo_channel":26,"get_dacapo_run_model":26,"get_ds_info":27,"get_encoded_subvolum":31,"get_free_port":32,"get_host_from_stdout":24,"get_input_norm":19,"get_input_slic":26,"get_norm":19,"get_norms_post_arg":32,"get_object_mesh":31,"get_output_dtyp":10,"get_postprocessor":22,"get_postprocessors_list":22,"get_process_dataset":[0,23],"get_public_ip":32,"get_raw_lay":31,"get_scale_info":27,"get_spatial_dim":26,"get_url":27,"getenv":29,"given":[14,25],"global":[12,33],"go":41,"gpu":[14,36],"gpu_h100":[5,10,24,25],"graph":40,"group":[27,36],"ha":[14,26,27],"handl":41,"hdf5":27,"heat":27,"heinrich":35,"help":35,"here":[26,27,35],"hierarchi":27,"high":41,"host":[23,24,36,39],"how":14,"html":35,"html_css_file":35,"html_extra_path":35,"html_favicon":35,"html_static_path":35,"html_theme":35,"http":[24,27,35],"i":[3,7,14,26,27,29,35,36,40],"ico":35,"id":40,"idi":[13,26],"idi_raw":[0,2,23],"ignor":35,"imag":40,"image_data_interfac":[12,26,33],"imagedatainterfac":[11,26,36],"implement":40,"import":[29,35],"improv":41,"in_channel":14,"includ":[35,36,37],"index":8,"indic":[29,40],"infer":[36,39],"inferenc":[0,2,12,23,33],"inference_host":7,"inference_input_shap":14,"inference_output_shap":14,"inference_serv":8,"inferencesess":14,"info":[27,31],"inform":[27,35],"init":14,"input":[26,27,36,40],"input_ax":26,"input_norm":[10,18,32,33],"input_norm_dict_kei":32,"input_path":[0,2],"input_roi":26,"input_shap":14,"input_voxel_s":[0,2,14,23,36],"inputnorm":19,"insert":[26,35],"inspect":14,"instal":14,"instanc":[14,40,41],"instanti":[14,25],"int":[14,22,26,27],"integr":35,"interest":27,"interfac":[3,7],"interleav":40,"internet":32,"invalid":31,"invok":40,"io":[3,7,37],"ip":32,"ip_pattern":32,"ipynb":35,"is_bsub_avail":24,"is_output_segment":8,"is_segment":[22,40],"isn":14,"issu":29,"iter":[3,7,14,26,36],"its":[26,29],"itself":27,"jeff":35,"jit":14,"job":[24,32],"job_id":24,"job_nam":24,"jrc_mu":36,"jrc_ut21":36,"json":[14,32],"json_data":0,"json_str":[0,2],"jupytext":35,"keyfil":[7,23],"keys_to_skip":22,"kill":24,"kill_n_remove_from_neuroglanc":32,"kwarg":[13,22,29,40],"label":[26,40],"labelpostprocessor":22,"lambda":40,"lambdanorm":19,"lambdapostprocessor":22,"larissa":35,"layer":31,"lazi":14,"lazili":14,"lazynorm":27,"lead":27,"level":[3,7,27],"lexicograph":27,"like":35,"line":[3,7],"list":[14,17,19,22,25,26,27,29,31,35,40],"list_cls_to_dict":32,"list_model":14,"ll":32,"load":[14,25,29],"load_config":25,"load_input_inform":26,"load_model_path":16,"load_output_inform":26,"load_pi":[28,33],"load_safe_config":29,"local":[32,36,39],"localvolum":31,"log":[3,7],"log_level":[1,3,7],"logger":[0,1,3,5,6,7,8,13,17,19,22,23,24,25,26,27,30,31],"logic":5,"long":41,"look":35,"low":41,"m":[3,7,36],"machin":32,"mai":[14,36],"main":[5,6],"maintain":40,"make":35,"manual":26,"map":40,"mark":31,"marwan":35,"master":35,"match":35,"max_valu":19,"max_voxel_s":31,"maximum":40,"md":[14,35],"mean":19,"member":35,"memo":27,"merg":40,"meta":27,"metadata":[14,26],"method":[14,40],"microsoft":27,"mimic":31,"min_valu":19,"min_voxel_s":31,"minim":26,"minimum":40,"minmaxnorm":19,"minut":36,"miss":26,"mode":[11,27],"model":[3,5,6,7,12,18,25,26,33,39],"model_config":[0,2,7,10,13,23],"model_entri":25,"model_nam":[14,24,26],"model_path":[3,7,17,36],"model_spec":36,"model_typ":14,"model_yaml":[15,33],"modelconfig":[13,23,25,26],"modelmetadata":14,"modul":35,"month":36,"morton":40,"mortonsegmentationrelabel":22,"most":35,"multi":40,"multipl":[5,27],"multiple_cli":[4,33],"multiple_yaml_cli":[4,33],"multipli":[22,40],"multiscal":27,"multiscale_group":27,"mwatersh":40,"my_job":24,"my_run":[3,7,36],"myst_nb":35,"myst_pars":35,"n":[22,36],"n5":[23,27],"n5_block_shap":23,"name":[0,3,7,14,17,19,22,24,26,27,35,36,40],"namespac":14,"napoleon":35,"nat":32,"nbsphinx":35,"nbsphinx_custom_format":35,"ncpu":0,"ndarrai":[19,22,26,40],"ndimag":40,"necessari":[26,27],"need":26,"neighborhood":[22,40],"net":41,"neuroglanc":[23,31,40],"neuroglancer_url":[7,8],"neuroglancer_util":[28,33],"nm":27,"node":27,"none":[0,2,8,10,11,14,23,24,26,27,31],"norm":[12,33],"normal":[19,27,40],"normalizationmethod":19,"note":[14,36,37],"np":26,"nr":36,"num_channel":22,"num_previous_seg":22,"number":36,"numpi":[19,22,26,27,40],"o":[27,29,35],"object":[14,25,26,32],"object_id":31,"offset":[11,27,40],"offset_float":27,"often":27,"one":5,"ones":35,"onli":35,"onnx":14,"onnx_model":14,"onnxruntim":14,"open":27,"open_ds_tensorstor":27,"oper":40,"optimize_model":13,"option":[23,35,36],"order":[26,27,40],"org":35,"ort":14,"other":36,"otherwis":[14,26],"out":26,"out_ax":26,"out_channel":14,"output":[24,26,35,36,40],"output_arrai":[0,2],"output_ax":26,"output_channel":[0,2,23,36],"output_dtyp":26,"output_nam":26,"output_path":[0,2],"output_sampl":26,"output_shap":14,"output_voxel_s":[0,2,11,14,23,27,36],"overwrit":35,"p":5,"page":[33,35],"paramet":[3,7,22,26,27,31],"parametr":41,"parent":[14,27],"pars":[5,14],"parse_bpeek_output":24,"parse_model_config":26,"pass":27,"path":[5,6,11,25,27,35,36],"pattern":35,"pdf":27,"per":31,"percent":35,"perform":[36,39],"physic":27,"pip":[36,37],"pixelresolut":27,"placehold":26,"pleas":36,"point":[27,40],"popul":26,"port":[7,23],"posit":26,"post":[12,14,33,41],"post_processor":10,"postprocess":[32,40],"postprocess_dict_kei":32,"postprocessing_lock":22,"postprocessor":[21,33],"postprocessormethod":22,"potenti":29,"predict":[13,26],"present":27,"previous_refresh_tim":23,"primarili":40,"prioriti":41,"privat":[14,32],"process":[8,22,24,36,40,41],"process_chunk":[13,36],"process_chunk_bas":13,"process_chunk_bioimag":26,"process_chunk_bioimage_test":26,"process_fn":[0,2],"produc":40,"project":[5,35],"properti":[11,14,19,22,26,31],"provid":[14,31,36],"pt":14,"public":32,"purpos":14,"py":[6,35,36],"pydant":14,"pymorton":40,"pyramid":27,"python":[6,35,40],"pytorch":[14,36],"pytorch_model":14,"q":5,"queue":[0,2,3,5,6,10,24],"r":[3,5,7,11,27,36],"rais":[26,27,29],"re":32,"read":[26,27,35],"read_block_shap":23,"read_roi":13,"read_shap":36,"readm":14,"real":[32,36,39],"rebuild":14,"recon":36,"refetch":31,"refresh_rate_second":23,"region":27,"regular":27,"regularize_offset":27,"rel":35,"relabel":40,"remov":26,"render":27,"reorder":26,"reorder_ax":26,"replac":14,"repositori":36,"repres":[14,40],"requir":14,"reshap":26,"resolut":[27,31],"respect":27,"return":[14,22,26,27,29,32,36,40],"rhoad":35,"roi":[11,13,26,27,36],"root":[27,35],"root_dir":14,"root_model":14,"rootmodel":14,"rout":23,"rst":35,"run":[0,1,2,3,7,10,15,23,24,33],"run_1":5,"run_2":5,"run_loc":24,"run_model":17,"run_multipl":[5,6],"run_nam":[3,7,26],"run_serv":7,"run_ui_serv":7,"runtim":14,"runtimeerror":27,"s0":36,"safe":[29,32],"safeti":29,"sampl":[26,41],"save":14,"sc":24,"scale":[26,27,31,40],"scale_kei":31,"scale_pyramid":[28,33],"scalepyramid":31,"schema":14,"schemaseri":14,"schemavalid":14,"scipi":40,"script":[3,5,7,29],"script_bas":36,"script_path":[3,7,26,36],"script_server_check":3,"scriptmodelconfig":26,"secur":24,"see":[27,35],"segment":[40,41],"select":[35,40],"self":26,"semant":41,"separ":[27,40],"separate_store_path":27,"serial":40,"server":[7,12,33,36],"server_cli":[4,33],"server_command":24,"server_queue_arg":5,"session":14,"set":14,"setup":35,"shape":[26,36],"share":5,"sheet":35,"should":26,"show":[30,35],"shown":35,"signatur":14,"signum":24,"similar":[14,26],"simpleblockwisemerg":22,"simplifi":41,"singl":14,"size":[26,27,36],"slice":22,"so":[26,35],"some":5,"someon":27,"someth":26,"sometim":27,"sourc":[27,35],"spatial_dim":14,"spawn_work":0,"specif":27,"speed":36,"sphinx":[33,35],"sphinx_autodoc_typehint":35,"sphinx_click":35,"sphinx_rtd_them":35,"split":27,"split_dataset_path":27,"ssl":23,"st_data":17,"start":[31,41],"start_host":24,"state":41,"state_dict":14,"static":35,"statu":24,"std":19,"still":[14,36],"stop":10,"store":27,"str":[0,2,3,7,14,16,17,19,22,23,26,27],"string":[27,32,35],"style":35,"sub":5,"subclass":22,"subfold":14,"submit_bsub_job":24,"submit_model":8,"subset":40,"suggest":36,"summari":35,"support":[36,37],"swap_ax":[11,27],"sy":35,"synthes":14,"system":27,"t":[11,14],"take":36,"target":40,"target_resolut":[11,27],"task":[26,41],"task_nam":[0,2],"templat":35,"templates_path":35,"tensorflow":39,"tensorstor":27,"thei":35,"them":[14,26],"theme":35,"thi":[5,14,26,27,32,33,35,36],"those":27,"threshold":[22,40],"thresholdpostprocessor":22,"thumb":35,"time":[36,39],"to_dict":[10,19,22,40],"to_ndarray_t":11,"to_ndarray_tensorstor":27,"todo":[34,39,41,42],"toi":41,"token":31,"torch":[14,36,39],"torchscript":14,"total":27,"train":41,"transform":27,"translat":27,"true":[0,2,13,22,27,29],"ts_dataset":27,"ts_model":14,"tupl":[26,27],"tutori":41,"type":[14,27],"u":41,"uint8":[36,40],"undefin":14,"under":36,"undoc":35,"uniqu":40,"unit":27,"unitless":27,"unsaf":29,"up":[36,41],"update_equival":8,"update_run_model":17,"url":32,"us":[3,7,14,26,27,29,32,35,37,39,40],"usag":[6,14,35],"use_exact":22,"use_half_predict":13,"user":[8,40],"using_dacapo":36,"util":[12,13,23,33],"v":[14,27],"v1":14,"valid":[14,25,26],"valu":[14,27,40],"valueerror":[26,27],"variabl":[14,36],"variou":40,"vector":40,"verifi":29,"version":14,"via":[23,36],"viewer":30,"virtual":23,"volum":31,"volume_lay":31,"volume_typ":31,"voxel":[27,36,40],"voxel_s":[26,27],"voxel_size_float":27,"voxels_to_process":26,"wa":[14,27],"wai":[27,41],"watersh":40,"we":[26,27,36],"weak":40,"web_util":[28,33],"weigel":35,"when":35,"where":27,"whether":[14,29],"which":[26,27,36],"wise":40,"within":27,"without":32,"worker":[0,2],"workflow":40,"write":41,"write_roi":13,"write_shap":36,"www":35,"x":[26,32,40,41],"y":26,"yaml":[6,25,26],"yaml_config":[0,1,2],"yaml_fil":16,"yaml_file_path":26,"you":[26,27,32,36,37],"your":[14,26,35,36],"your_script":36,"z":26,"zarr":[11,27,36],"zarr_grp":27,"zarr_grp_path":27,"zarr_path":10,"zouinkhi":35,"zouinkhim":[8,36],"zscorenorm":19},"titles":["cellmap_flow.blockwise.blockwise_processor","cellmap_flow.blockwise.cli","cellmap_flow.blockwise","cellmap_flow.cli.cli","cellmap_flow.cli","cellmap_flow.cli.multiple_cli","cellmap_flow.cli.multiple_yaml_cli","cellmap_flow.cli.server_cli","cellmap_flow.dashboard.app","cellmap_flow.dashboard","cellmap_flow.globals","cellmap_flow.image_data_interface","cellmap_flow","cellmap_flow.inferencer","cellmap_flow.models.cellmap_models","cellmap_flow.models","cellmap_flow.models.model_yaml","cellmap_flow.models.run","cellmap_flow.norm","cellmap_flow.norm.input_normalize","cellmap_flow.norm.models","cellmap_flow.post","cellmap_flow.post.postprocessors","cellmap_flow.server","cellmap_flow.utils.bsub_utils","cellmap_flow.utils.config_utils","cellmap_flow.utils.data","cellmap_flow.utils.ds","cellmap_flow.utils","cellmap_flow.utils.load_py","cellmap_flow.utils.neuroglancer_utils","cellmap_flow.utils.scale_pyramid","cellmap_flow.utils.web_utils","API Reference","CLI","&lt;no title&gt;","Installation","Installation","cellmap_flow","Overview","PostProcessor Module","Road Map","Tutorial: A Simple Experiment in Python"],"titleterms":{"0":41,"A":42,"affinitypostprocessor":40,"api":33,"app":8,"attribut":[0,1,3,5,6,7,8,10,13,14,17,19,22,23,24,25,26,27,29,30,31,32],"base":40,"bioimag":36,"blockwis":[0,1,2],"blockwise_processor":0,"bsub_util":24,"can":41,"cellmap_flow":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38],"cellmap_model":14,"celmapflow":39,"channelselect":40,"class":[0,2,10,11,13,14,19,22,23,24,26,27,29,31,40],"cli":[1,3,4,5,6,7,34],"config_util":25,"content":[0,1,2,3,5,6,7,8,10,11,13,14,16,17,19,20,22,23,24,25,26,27,29,30,31,32],"custom":36,"d":27,"dacapo":36,"dashboard":[8,9],"data":26,"defaultpostprocessor":40,"detail":41,"experi":42,"function":[0,1,3,5,6,7,8,13,16,17,19,20,22,23,24,25,26,27,29,30,31,32],"global":10,"goal":41,"have":41,"i":39,"image_data_interfac":11,"inferenc":13,"input_norm":19,"instal":[36,37],"io":36,"keyword":36,"labelpostprocessor":40,"lambdapostprocessor":40,"load_pi":29,"map":41,"model":[14,15,16,17,20,36],"model_yaml":16,"modul":[0,1,3,5,6,7,8,10,11,13,14,16,17,19,20,22,23,24,25,26,27,29,30,31,32,40],"mortonsegmentationrelabel":40,"multipl":36,"multiple_cli":5,"multiple_yaml_cli":6,"neuroglancer_util":30,"non":41,"norm":[18,19,20],"onc":36,"overview":[39,40,41],"packag":2,"post":[21,22],"postprocessor":[22,40],"python":42,"refer":33,"road":41,"run":[17,36],"scale_pyramid":31,"script":36,"server":23,"server_cli":7,"simpl":42,"simpleblockwisemerg":40,"subclass":40,"submodul":[2,4,9,12,15,18,21,28],"tensorflow":36,"thresholdpostprocessor":40,"tutori":42,"us":36,"usag":36,"util":[24,25,26,27,28,29,30,31,32],"v1":41,"web_util":32,"what":39}})