Search.setIndex({"alltitles":{"API Reference":[[37,null]],"Advanced Options":[[38,"advanced-options"]],"Advanced Usage: Custom Process Function (TensorFlow)":[[40,"advanced-usage-custom-process-function-tensorflow"]],"AffinityPostprocessor":[[44,"affinitypostprocessor"]],"Attributes":[[0,"attributes"],[1,"attributes"],[3,"attributes"],[4,"attributes"],[6,"attributes"],[7,"attributes"],[8,"attributes"],[9,"attributes"],[11,"attributes"],[14,"attributes"],[15,"attributes"],[19,"attributes"],[21,"attributes"],[23,"attributes"],[24,"attributes"],[25,"attributes"],[26,"attributes"],[27,"attributes"],[28,"attributes"],[29,"attributes"],[32,"attributes"],[33,"attributes"],[34,"attributes"],[35,"attributes"],[36,"attributes"]],"Available Entry points":[[38,"available-entry-points"]],"Base Class":[[44,"base-class"]],"Basic Script Template (PyTorch)":[[40,"basic-script-template-pytorch"]],"Basic Syntax":[[38,"basic-syntax"]],"CLI Commands":[[38,null]],"Can Have":[[45,"can-have"]],"Chaining Multiple Models (cellmap_flow_multiple)":[[38,"chaining-multiple-models-cellmap-flow-multiple"]],"ChannelSelection":[[44,"channelselection"]],"Classes":[[0,"classes"],[2,"classes"],[11,"classes"],[12,"classes"],[14,"classes"],[15,"classes"],[17,"classes"],[21,"classes"],[23,"classes"],[24,"classes"],[26,"classes"],[28,"classes"],[29,"classes"],[32,"classes"],[34,"classes"]],"Custom Model":[[40,null]],"DefaultPostprocessor":[[44,"defaultpostprocessor"]],"Detailed Road Map":[[45,"detailed-road-map"]],"Explanation":[[46,"explanation"]],"Functions":[[0,"functions"],[1,"functions"],[3,"functions"],[4,"functions"],[6,"functions"],[7,"functions"],[8,"functions"],[9,"functions"],[14,"functions"],[18,"functions"],[19,"functions"],[21,"functions"],[23,"functions"],[24,"functions"],[26,"functions"],[27,"functions"],[28,"functions"],[29,"functions"],[30,"functions"],[32,"functions"],[33,"functions"],[34,"functions"],[35,"functions"],[36,"functions"]],"Installation":[[41,null],[42,null]],"LabelPostprocessor":[[44,"labelpostprocessor"]],"LambdaPostprocessor":[[44,"lambdapostprocessor"]],"Main CLI Entrypoint (cellmap_flow)":[[38,"main-cli-entrypoint-cellmap-flow"]],"Minimum Requirements for Custom Scripts":[[40,"minimum-requirements-for-custom-scripts"]],"Module Contents":[[0,"module-contents"],[1,"module-contents"],[3,"module-contents"],[4,"module-contents"],[6,"module-contents"],[7,"module-contents"],[8,"module-contents"],[9,"module-contents"],[11,"module-contents"],[12,"module-contents"],[14,"module-contents"],[15,"module-contents"],[17,"module-contents"],[18,"module-contents"],[19,"module-contents"],[21,"module-contents"],[23,"module-contents"],[24,"module-contents"],[25,"module-contents"],[26,"module-contents"],[27,"module-contents"],[28,"module-contents"],[29,"module-contents"],[30,"module-contents"],[32,"module-contents"],[33,"module-contents"],[34,"module-contents"],[35,"module-contents"],[36,"module-contents"]],"MortonSegmentationRelabeling":[[44,"mortonsegmentationrelabeling"]],"Non-Goals (for v1.0)":[[45,"non-goals-for-v1-0"]],"Output":[[46,"output"]],"Overview":[[40,"overview"],[44,"overview"],[45,"overview"]],"Package Contents":[[2,"package-contents"]],"PostProcessor Subclasses":[[44,"postprocessor-subclasses"]],"PostProcessors":[[44,null]],"Prerequisites":[[46,"prerequisites"]],"Python Scripts":[[46,null]],"Required Attributes":[[40,"required-attributes"]],"Road Map":[[45,null]],"Run multiple model at once:":[[41,"run-multiple-model-at-once"]],"Script":[[46,"script"]],"Script keywords:":[[41,"script-keywords"]],"Server Check Utility":[[38,"server-check-utility"]],"SimpleBlockwiseMerger":[[44,"simpleblockwisemerger"]],"Submodules":[[2,"submodules"],[5,"submodules"],[10,"submodules"],[13,"submodules"],[16,"submodules"],[20,"submodules"],[22,"submodules"],[31,"submodules"]],"Testing Your Script":[[40,"testing-your-script"]],"ThresholdPostprocessor":[[44,"thresholdpostprocessor"]],"Usage":[[41,"usage"]],"Using Dacapo model:":[[41,"using-dacapo-model"]],"Using TensorFlow model:":[[41,"using-tensorflow-model"]],"Using bioimage-io model:":[[41,"using-bioimage-io-model"]],"Using custom script:":[[41,"using-custom-script"]],"YAML-Based Configuration (cellmap_flow_yaml)":[[38,"yaml-based-configuration-cellmap-flow-yaml"]],"cellmap_flow":[[13,null],[43,null]],"cellmap_flow.blockwise":[[2,null]],"cellmap_flow.blockwise.blockwise_processor":[[0,null]],"cellmap_flow.blockwise.cli":[[1,null]],"cellmap_flow.cli":[[5,null]],"cellmap_flow.cli.cli":[[3,null]],"cellmap_flow.cli.fly_model":[[4,null]],"cellmap_flow.cli.multiple_cli":[[6,null]],"cellmap_flow.cli.multiple_yaml_cli":[[7,null]],"cellmap_flow.cli.server_cli":[[8,null]],"cellmap_flow.dashboard":[[10,null]],"cellmap_flow.dashboard.app":[[9,null]],"cellmap_flow.globals":[[11,null]],"cellmap_flow.image_data_interface":[[12,null]],"cellmap_flow.inferencer":[[14,null]],"cellmap_flow.models":[[16,null]],"cellmap_flow.models.cellmap_models":[[15,null]],"cellmap_flow.models.model_app_config":[[17,null]],"cellmap_flow.models.model_yaml":[[18,null]],"cellmap_flow.models.run":[[19,null]],"cellmap_flow.norm":[[20,null]],"cellmap_flow.norm.input_normalize":[[21,null]],"cellmap_flow.post":[[22,null]],"cellmap_flow.post.postprocessors":[[23,null]],"cellmap_flow.server":[[24,null]],"cellmap_flow.tmp":[[25,null]],"cellmap_flow.utils":[[31,null]],"cellmap_flow.utils.bsub_utils":[[26,null]],"cellmap_flow.utils.config_utils":[[27,null]],"cellmap_flow.utils.data":[[28,null]],"cellmap_flow.utils.ds":[[29,null]],"cellmap_flow.utils.import_utils":[[30,null]],"cellmap_flow.utils.load_py":[[32,null]],"cellmap_flow.utils.neuroglancer_utils":[[33,null]],"cellmap_flow.utils.scale_pyramid":[[34,null]],"cellmap_flow.utils.serilization_utils":[[35,null]],"cellmap_flow.utils.web_utils":[[36,null]]},"docnames":["autoapi/cellmap_flow/blockwise/blockwise_processor/index","autoapi/cellmap_flow/blockwise/cli/index","autoapi/cellmap_flow/blockwise/index","autoapi/cellmap_flow/cli/cli/index","autoapi/cellmap_flow/cli/fly_model/index","autoapi/cellmap_flow/cli/index","autoapi/cellmap_flow/cli/multiple_cli/index","autoapi/cellmap_flow/cli/multiple_yaml_cli/index","autoapi/cellmap_flow/cli/server_cli/index","autoapi/cellmap_flow/dashboard/app/index","autoapi/cellmap_flow/dashboard/index","autoapi/cellmap_flow/globals/index","autoapi/cellmap_flow/image_data_interface/index","autoapi/cellmap_flow/index","autoapi/cellmap_flow/inferencer/index","autoapi/cellmap_flow/models/cellmap_models/index","autoapi/cellmap_flow/models/index","autoapi/cellmap_flow/models/model_app_config/index","autoapi/cellmap_flow/models/model_yaml/index","autoapi/cellmap_flow/models/run/index","autoapi/cellmap_flow/norm/index","autoapi/cellmap_flow/norm/input_normalize/index","autoapi/cellmap_flow/post/index","autoapi/cellmap_flow/post/postprocessors/index","autoapi/cellmap_flow/server/index","autoapi/cellmap_flow/tmp/index","autoapi/cellmap_flow/utils/bsub_utils/index","autoapi/cellmap_flow/utils/config_utils/index","autoapi/cellmap_flow/utils/data/index","autoapi/cellmap_flow/utils/ds/index","autoapi/cellmap_flow/utils/import_utils/index","autoapi/cellmap_flow/utils/index","autoapi/cellmap_flow/utils/load_py/index","autoapi/cellmap_flow/utils/neuroglancer_utils/index","autoapi/cellmap_flow/utils/scale_pyramid/index","autoapi/cellmap_flow/utils/serilization_utils/index","autoapi/cellmap_flow/utils/web_utils/index","autoapi/index","cli_command","conf","custom_script","index","install","modules","post","roadmap","scripts"],"envversion":{"nbsphinx":4,"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2},"filenames":["autoapi/cellmap_flow/blockwise/blockwise_processor/index.rst","autoapi/cellmap_flow/blockwise/cli/index.rst","autoapi/cellmap_flow/blockwise/index.rst","autoapi/cellmap_flow/cli/cli/index.rst","autoapi/cellmap_flow/cli/fly_model/index.rst","autoapi/cellmap_flow/cli/index.rst","autoapi/cellmap_flow/cli/multiple_cli/index.rst","autoapi/cellmap_flow/cli/multiple_yaml_cli/index.rst","autoapi/cellmap_flow/cli/server_cli/index.rst","autoapi/cellmap_flow/dashboard/app/index.rst","autoapi/cellmap_flow/dashboard/index.rst","autoapi/cellmap_flow/globals/index.rst","autoapi/cellmap_flow/image_data_interface/index.rst","autoapi/cellmap_flow/index.rst","autoapi/cellmap_flow/inferencer/index.rst","autoapi/cellmap_flow/models/cellmap_models/index.rst","autoapi/cellmap_flow/models/index.rst","autoapi/cellmap_flow/models/model_app_config/index.rst","autoapi/cellmap_flow/models/model_yaml/index.rst","autoapi/cellmap_flow/models/run/index.rst","autoapi/cellmap_flow/norm/index.rst","autoapi/cellmap_flow/norm/input_normalize/index.rst","autoapi/cellmap_flow/post/index.rst","autoapi/cellmap_flow/post/postprocessors/index.rst","autoapi/cellmap_flow/server/index.rst","autoapi/cellmap_flow/tmp/index.rst","autoapi/cellmap_flow/utils/bsub_utils/index.rst","autoapi/cellmap_flow/utils/config_utils/index.rst","autoapi/cellmap_flow/utils/data/index.rst","autoapi/cellmap_flow/utils/ds/index.rst","autoapi/cellmap_flow/utils/import_utils/index.rst","autoapi/cellmap_flow/utils/index.rst","autoapi/cellmap_flow/utils/load_py/index.rst","autoapi/cellmap_flow/utils/neuroglancer_utils/index.rst","autoapi/cellmap_flow/utils/scale_pyramid/index.rst","autoapi/cellmap_flow/utils/serilization_utils/index.rst","autoapi/cellmap_flow/utils/web_utils/index.rst","autoapi/index.rst","cli_command.rst","conf.py","custom_script.rst","index.rst","install.rst","modules.rst","post.rst","roadmap.rst","scripts.rst"],"indexentries":{"__call__() (postprocessor method)":[[44,"PostProcessor.__call__",false]],"__class_vars__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__class_vars__",false]],"__private_attributes__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__private_attributes__",false]],"__pydantic_complete__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_complete__",false]],"__pydantic_computed_fields__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_computed_fields__",false]],"__pydantic_core_schema__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_core_schema__",false]],"__pydantic_custom_init__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_custom_init__",false]],"__pydantic_decorators__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_decorators__",false]],"__pydantic_extra__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_extra__",false]],"__pydantic_fields__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_fields__",false]],"__pydantic_fields_set__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_fields_set__",false]],"__pydantic_generic_metadata__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_generic_metadata__",false]],"__pydantic_parent_namespace__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_parent_namespace__",false]],"__pydantic_post_init__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_post_init__",false]],"__pydantic_private__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_private__",false]],"__pydantic_root_model__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_root_model__",false]],"__pydantic_serializer__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_serializer__",false]],"__pydantic_validator__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_validator__",false]],"__signature__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__signature__",false]],"_process() (postprocessor method)":[[44,"PostProcessor._process",false]],"access_parent() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.access_parent",false]],"activation (cellmap_flow.norm.input_normalize.euclideandistance attribute)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance.activation",false]],"affinitypostprocessor (built-in class)":[[44,"AffinityPostprocessor",false]],"affinitypostprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor",false]],"analyze_script() (in module cellmap_flow.utils.load_py)":[[32,"cellmap_flow.utils.load_py.analyze_script",false]],"anisotropy (cellmap_flow.norm.input_normalize.euclideandistance attribute)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance.anisotropy",false]],"app (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.app",false]],"app (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.app",false]],"appinput (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.AppInput",false]],"apply_norms() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.apply_norms",false]],"apply_postprocess() (in module cellmap_flow.inferencer)":[[14,"cellmap_flow.inferencer.apply_postprocess",false]],"args_key (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.ARGS_KEY",false]],"author (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.author",false]],"bias (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.bias",false]],"bias (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.bias",false]],"bioimage() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.bioimage",false]],"bioimage() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.bioimage",false]],"biomodelconfig (class in cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.BioModelConfig",false]],"black_border (cellmap_flow.norm.input_normalize.euclideandistance attribute)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance.black_border",false]],"block_shape (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.block_shape",false]],"block_shape (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.block_shape",false]],"block_shape (cellmap_flow.server.dummyconfig attribute)":[[24,"cellmap_flow.server.DummyConfig.block_shape",false]],"build_models() (in module cellmap_flow.utils.config_utils)":[[27,"cellmap_flow.utils.config_utils.build_models",false]],"calculate_equivalences() (cellmap_flow.post.postprocessors.simpleblockwisemerger method)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.calculate_equivalences",false]],"cellmap_flow":[[13,"module-cellmap_flow",false]],"cellmap_flow.blockwise":[[2,"module-cellmap_flow.blockwise",false]],"cellmap_flow.blockwise.blockwise_processor":[[0,"module-cellmap_flow.blockwise.blockwise_processor",false]],"cellmap_flow.blockwise.cli":[[1,"module-cellmap_flow.blockwise.cli",false]],"cellmap_flow.cli":[[5,"module-cellmap_flow.cli",false]],"cellmap_flow.cli.cli":[[3,"module-cellmap_flow.cli.cli",false]],"cellmap_flow.cli.fly_model":[[4,"module-cellmap_flow.cli.fly_model",false]],"cellmap_flow.cli.multiple_cli":[[6,"module-cellmap_flow.cli.multiple_cli",false]],"cellmap_flow.cli.multiple_yaml_cli":[[7,"module-cellmap_flow.cli.multiple_yaml_cli",false]],"cellmap_flow.cli.server_cli":[[8,"module-cellmap_flow.cli.server_cli",false]],"cellmap_flow.dashboard":[[10,"module-cellmap_flow.dashboard",false]],"cellmap_flow.dashboard.app":[[9,"module-cellmap_flow.dashboard.app",false]],"cellmap_flow.globals":[[11,"module-cellmap_flow.globals",false]],"cellmap_flow.image_data_interface":[[12,"module-cellmap_flow.image_data_interface",false]],"cellmap_flow.inferencer":[[14,"module-cellmap_flow.inferencer",false]],"cellmap_flow.models":[[16,"module-cellmap_flow.models",false]],"cellmap_flow.models.cellmap_models":[[15,"module-cellmap_flow.models.cellmap_models",false]],"cellmap_flow.models.model_app_config":[[17,"module-cellmap_flow.models.model_app_config",false]],"cellmap_flow.models.model_yaml":[[18,"module-cellmap_flow.models.model_yaml",false]],"cellmap_flow.models.run":[[19,"module-cellmap_flow.models.run",false]],"cellmap_flow.norm":[[20,"module-cellmap_flow.norm",false]],"cellmap_flow.norm.input_normalize":[[21,"module-cellmap_flow.norm.input_normalize",false]],"cellmap_flow.post":[[22,"module-cellmap_flow.post",false]],"cellmap_flow.post.postprocessors":[[23,"module-cellmap_flow.post.postprocessors",false]],"cellmap_flow.server":[[24,"module-cellmap_flow.server",false]],"cellmap_flow.tmp":[[25,"module-cellmap_flow.tmp",false]],"cellmap_flow.utils":[[31,"module-cellmap_flow.utils",false]],"cellmap_flow.utils.bsub_utils":[[26,"module-cellmap_flow.utils.bsub_utils",false]],"cellmap_flow.utils.config_utils":[[27,"module-cellmap_flow.utils.config_utils",false]],"cellmap_flow.utils.data":[[28,"module-cellmap_flow.utils.data",false]],"cellmap_flow.utils.ds":[[29,"module-cellmap_flow.utils.ds",false]],"cellmap_flow.utils.import_utils":[[30,"module-cellmap_flow.utils.import_utils",false]],"cellmap_flow.utils.load_py":[[32,"module-cellmap_flow.utils.load_py",false]],"cellmap_flow.utils.neuroglancer_utils":[[33,"module-cellmap_flow.utils.neuroglancer_utils",false]],"cellmap_flow.utils.scale_pyramid":[[34,"module-cellmap_flow.utils.scale_pyramid",false]],"cellmap_flow.utils.serilization_utils":[[35,"module-cellmap_flow.utils.serilization_utils",false]],"cellmap_flow.utils.web_utils":[[36,"module-cellmap_flow.utils.web_utils",false]],"cellmap_model (cellmap_flow.utils.data.cellmapmodelconfig attribute)":[[28,"cellmap_flow.utils.data.CellMapModelConfig.cellmap_model",false]],"cellmap_model() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.cellmap_model",false]],"cellmap_model() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.cellmap_model",false]],"cellmapflowblockwiseprocessor (class in cellmap_flow.blockwise)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor",false]],"cellmapflowblockwiseprocessor (class in cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor",false]],"cellmapflowserver (class in cellmap_flow.server)":[[24,"cellmap_flow.server.CellMapFlowServer",false]],"cellmapmodel (class in cellmap_flow.models.cellmap_models)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel",false]],"cellmapmodelconfig (class in cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.CellMapModelConfig",false]],"cellmapmodels (class in cellmap_flow.models.cellmap_models)":[[15,"cellmap_flow.models.cellmap_models.CellmapModels",false]],"channel (cellmap_flow.post.postprocessors.labelpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.LabelPostprocessor.channel",false]],"channel (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling attribute)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.channel",false]],"channel (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.channel",false]],"channels (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.channels",false]],"channels (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.channels",false]],"channels (cellmap_flow.post.postprocessors.channelselection attribute)":[[23,"cellmap_flow.post.postprocessors.ChannelSelection.channels",false]],"channels (cellmap_flow.utils.data.flymodelconfig attribute)":[[28,"cellmap_flow.utils.data.FlyModelConfig.channels",false]],"channels_names (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.channels_names",false]],"channelselection (built-in class)":[[44,"ChannelSelection",false]],"channelselection (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.ChannelSelection",false]],"charge_group (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.charge_group",false]],"charge_group (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.charge_group",false]],"charge_group (in module cellmap_flow.cli.fly_model)":[[4,"cellmap_flow.cli.fly_model.charge_group",false]],"charge_group_arg (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.charge_group_arg",false]],"check_config() (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.check_config",false]],"check_dependencies() (in module cellmap_flow.utils.import_utils)":[[30,"cellmap_flow.utils.import_utils.check_dependencies",false]],"check_for_attrs_multiscale() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.check_for_attrs_multiscale",false]],"check_for_multiscale() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.check_for_multiscale",false]],"check_for_offset() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.check_for_offset",false]],"check_for_units() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.check_for_units",false]],"check_for_voxel_size() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.check_for_voxel_size",false]],"checkpoint_path (cellmap_flow.utils.data.flymodelconfig attribute)":[[28,"cellmap_flow.utils.data.FlyModelConfig.checkpoint_path",false]],"chunk_encoder (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.chunk_encoder",false]],"chunk_slice_position_to_coords_id_dict (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.chunk_slice_position_to_coords_id_dict",false]],"cleanup() (in module cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.cleanup",false]],"cli() (in module cellmap_flow.blockwise.cli)":[[1,"cellmap_flow.blockwise.cli.cli",false]],"cli() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.cli",false]],"cli() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.cli",false]],"client() (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor method)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.client",false]],"client() (cellmap_flow.blockwise.cellmapflowblockwiseprocessor method)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.client",false]],"clip_max (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.clip_max",false]],"clip_min (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.clip_min",false]],"command (cellmap_flow.utils.data.biomodelconfig property)":[[28,"cellmap_flow.utils.data.BioModelConfig.command",false]],"command (cellmap_flow.utils.data.cellmapmodelconfig property)":[[28,"cellmap_flow.utils.data.CellMapModelConfig.command",false]],"command (cellmap_flow.utils.data.dacapomodelconfig property)":[[28,"cellmap_flow.utils.data.DaCapoModelConfig.command",false]],"command (cellmap_flow.utils.data.flymodelconfig property)":[[28,"cellmap_flow.utils.data.FlyModelConfig.command",false]],"command (cellmap_flow.utils.data.scriptmodelconfig property)":[[28,"cellmap_flow.utils.data.ScriptModelConfig.command",false]],"concat_along_c() (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.concat_along_c",false]],"concurrency_limit (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.concurrency_limit",false]],"config (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.config",false]],"config (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.config",false]],"config (cellmap_flow.utils.data.modelconfig property)":[[28,"cellmap_flow.utils.data.ModelConfig.config",false]],"config (class in cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.Config",false]],"config (class in cellmap_flow.utils.load_py)":[[32,"cellmap_flow.utils.load_py.Config",false]],"create_and_run_app() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.create_and_run_app",false]],"custom_fill_value (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.custom_fill_value",false]],"customcodefolder (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.CustomCodeFolder",false]],"dacapo() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.dacapo",false]],"dacapo() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.dacapo",false]],"dacapomodelconfig (class in cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.DaCapoModelConfig",false]],"data_args (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.data_args",false]],"dataset_name (in module cellmap_flow.tmp)":[[25,"cellmap_flow.tmp.dataset_name",false]],"decode_to_json() (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.decode_to_json",false]],"default_server_queue (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.DEFAULT_SERVER_QUEUE",false]],"default_server_queue (in module cellmap_flow.utils.config_utils)":[[27,"cellmap_flow.utils.config_utils.DEFAULT_SERVER_QUEUE",false]],"default_value (cellmap_flow.models.model_app_config.fileinput attribute)":[[17,"cellmap_flow.models.model_app_config.FileInput.default_value",false]],"default_value (cellmap_flow.models.model_app_config.listinput attribute)":[[17,"cellmap_flow.models.model_app_config.ListInput.default_value",false]],"default_value (cellmap_flow.models.model_app_config.selectinput attribute)":[[17,"cellmap_flow.models.model_app_config.SelectInput.default_value",false]],"default_value (cellmap_flow.models.model_app_config.textinput attribute)":[[17,"cellmap_flow.models.model_app_config.TextInput.default_value",false]],"defaultpostprocessor (built-in class)":[[44,"DefaultPostprocessor",false]],"defaultpostprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor",false]],"delete() (cellmap_flow.globals.flow class method)":[[11,"cellmap_flow.globals.Flow.delete",false]],"description (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.description",false]],"description (cellmap_flow.models.model_app_config.fileinput attribute)":[[17,"cellmap_flow.models.model_app_config.FileInput.description",false]],"description (cellmap_flow.models.model_app_config.listinput attribute)":[[17,"cellmap_flow.models.model_app_config.ListInput.description",false]],"description (cellmap_flow.models.model_app_config.selectinput attribute)":[[17,"cellmap_flow.models.model_app_config.SelectInput.description",false]],"description (cellmap_flow.models.model_app_config.textinput attribute)":[[17,"cellmap_flow.models.model_app_config.TextInput.description",false]],"deserialize_list() (in module cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.deserialize_list",false]],"dilate (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.Dilate",false]],"dims (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid.dims",false]],"disallowed_functions (in module cellmap_flow.utils.load_py)":[[32,"cellmap_flow.utils.load_py.DISALLOWED_FUNCTIONS",false]],"disallowed_imports (in module cellmap_flow.utils.load_py)":[[32,"cellmap_flow.utils.load_py.DISALLOWED_IMPORTS",false]],"dtype (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.dtype",false]],"dtype (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.euclideandistance property)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.lambdanormalizer property)":[[21,"cellmap_flow.norm.input_normalize.LambdaNormalizer.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.minmaxnormalizer property)":[[21,"cellmap_flow.norm.input_normalize.MinMaxNormalizer.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.serializableinterface property)":[[21,"cellmap_flow.norm.input_normalize.SerializableInterface.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.zscorenormalizer property)":[[21,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.dtype",false]],"dtype (cellmap_flow.post.postprocessors.affinitypostprocessor property)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.defaultpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.labelpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.LabelPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.lambdapostprocessor property)":[[23,"cellmap_flow.post.postprocessors.LambdaPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling property)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.dtype",false]],"dtype (cellmap_flow.post.postprocessors.simpleblockwisemerger property)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.dtype",false]],"dtype (cellmap_flow.post.postprocessors.thresholdpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.ThresholdPostprocessor.dtype",false]],"dtype (postprocessor attribute)":[[44,"PostProcessor.dtype",false]],"dummyconfig (class in cellmap_flow.server)":[[24,"cellmap_flow.server.DummyConfig",false]],"elemns (cellmap_flow.models.model_app_config.mymodelconfig attribute)":[[17,"cellmap_flow.models.model_app_config.MyModelConfig.elemns",false]],"encode_to_str() (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.encode_to_str",false]],"ends_with_scale() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.ends_with_scale",false]],"equivalences (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.equivalences",false]],"euclideandistance (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance",false]],"expression (cellmap_flow.norm.input_normalize.lambdanormalizer attribute)":[[21,"cellmap_flow.norm.input_normalize.LambdaNormalizer.expression",false]],"expression (cellmap_flow.post.postprocessors.lambdapostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.LambdaPostprocessor.expression",false]],"extra_args (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.extra_args",false]],"face_erosion_iterations (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.face_erosion_iterations",false]],"fileinput (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.FileInput",false]],"filetype (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.filetype",false]],"find_target_scale() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.find_target_scale",false]],"flow (class in cellmap_flow.globals)":[[11,"cellmap_flow.globals.Flow",false]],"fly() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.fly",false]],"flymodelconfig (class in cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.FlyModelConfig",false]],"folder_path (cellmap_flow.models.cellmap_models.cellmapmodel attribute)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.folder_path",false]],"format_output_bioimage() (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.format_output_bioimage",false]],"framework (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.framework",false]],"g (in module cellmap_flow.globals)":[[11,"cellmap_flow.globals.g",false]],"generate_neuroglancer_url() (in module cellmap_flow.utils.neuroglancer_utils)":[[33,"cellmap_flow.utils.neuroglancer_utils.generate_neuroglancer_url",false]],"get_axes_and_dims() (cellmap_flow.utils.data.biomodelconfig method)":[[28,"cellmap_flow.utils.data.BioModelConfig.get_axes_and_dims",false]],"get_dacapo_channels() (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.get_dacapo_channels",false]],"get_dacapo_run_model() (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.get_dacapo_run_model",false]],"get_ds_info() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.get_ds_info",false]],"get_encoded_subvolume() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid.get_encoded_subvolume",false]],"get_free_port() (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.get_free_port",false]],"get_host_from_stdout() (in module cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.get_host_from_stdout",false]],"get_input_normalizers() (in module cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.get_input_normalizers",false]],"get_input_slicer() (cellmap_flow.utils.data.biomodelconfig method)":[[28,"cellmap_flow.utils.data.BioModelConfig.get_input_slicer",false]],"get_normalizations() (in module cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.get_normalizations",false]],"get_norms_post_args() (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.get_norms_post_args",false]],"get_object_mesh() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid.get_object_mesh",false]],"get_output_dtype() (cellmap_flow.globals.flow method)":[[11,"cellmap_flow.globals.Flow.get_output_dtype",false]],"get_postprocessors() (in module cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.get_postprocessors",false]],"get_postprocessors_list() (in module cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.get_postprocessors_list",false]],"get_process_dataset() (in module cellmap_flow.server)":[[24,"cellmap_flow.server.get_process_dataset",false]],"get_process_dataset() (in module cellmap_flow.utils.serilization_utils)":[[35,"cellmap_flow.utils.serilization_utils.get_process_dataset",false]],"get_public_ip() (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.get_public_ip",false]],"get_raw_layer() (in module cellmap_flow.utils.scale_pyramid)":[[34,"cellmap_flow.utils.scale_pyramid.get_raw_layer",false]],"get_scale_info() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.get_scale_info",false]],"get_spatial_dims() (cellmap_flow.utils.data.biomodelconfig method)":[[28,"cellmap_flow.utils.data.BioModelConfig.get_spatial_dims",false]],"get_url() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.get_url",false]],"host (cellmap_flow.utils.bsub_utils.job attribute)":[[26,"cellmap_flow.utils.bsub_utils.Job.host",false]],"idi_raw (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.idi_raw",false]],"idi_raw (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.idi_raw",false]],"idi_raw (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.idi_raw",false]],"imagedatainterface (class in cellmap_flow.image_data_interface)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface",false]],"in_channels (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.in_channels",false]],"index() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.index",false]],"inference_input_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.inference_input_shape",false]],"inference_output_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.inference_output_shape",false]],"inference_server (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.INFERENCE_SERVER",false]],"inferencer (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.inferencer",false]],"inferencer (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.inferencer",false]],"inferencer (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.inferencer",false]],"inferencer (class in cellmap_flow.inferencer)":[[14,"cellmap_flow.inferencer.Inferencer",false]],"info() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid.info",false]],"input_norm_dict_key (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.INPUT_NORM_DICT_KEY",false]],"input_norms (in module cellmap_flow.globals)":[[11,"cellmap_flow.globals.input_norms",false]],"input_path (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.input_path",false]],"input_path (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.input_path",false]],"input_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.input_shape",false]],"input_size (cellmap_flow.utils.data.flymodelconfig attribute)":[[28,"cellmap_flow.utils.data.FlyModelConfig.input_size",false]],"input_voxel_size (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.input_voxel_size",false]],"input_voxel_size (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.input_voxel_size",false]],"input_voxel_size (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.input_voxel_size",false]],"input_voxel_size (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.input_voxel_size",false]],"input_voxel_size (cellmap_flow.utils.data.flymodelconfig attribute)":[[28,"cellmap_flow.utils.data.FlyModelConfig.input_voxel_size",false]],"inputnormalizer (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.InputNormalizer",false]],"invalidate() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid.invalidate",false]],"ip_pattern (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.IP_PATTERN",false]],"is_bsub_available() (in module cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.is_bsub_available",false]],"is_output_segmentation() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.is_output_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.affinitypostprocessor property)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.defaultpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.labelpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.LabelPostprocessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling property)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.postprocessor property)":[[23,"cellmap_flow.post.postprocessors.PostProcessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.simpleblockwisemerger property)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.thresholdpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.ThresholdPostprocessor.is_segmentation",false]],"is_segmentation (postprocessor attribute)":[[44,"PostProcessor.is_segmentation",false]],"iteration (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.iteration",false]],"iteration (cellmap_flow.utils.data.dacapomodelconfig attribute)":[[28,"cellmap_flow.utils.data.DaCapoModelConfig.iteration",false]],"job (class in cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.Job",false]],"job_id (cellmap_flow.utils.bsub_utils.job attribute)":[[26,"cellmap_flow.utils.bsub_utils.Job.job_id",false]],"keys_to_skip (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.keys_to_skip",false]],"kill() (cellmap_flow.utils.bsub_utils.job method)":[[26,"cellmap_flow.utils.bsub_utils.Job.kill",false]],"kill_n_remove_from_neuroglancer() (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.kill_n_remove_from_neuroglancer",false]],"labelpostprocessor (built-in class)":[[44,"LabelPostprocessor",false]],"labelpostprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.LabelPostprocessor",false]],"lambdanormalizer (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.LambdaNormalizer",false]],"lambdapostprocessor (built-in class)":[[44,"LambdaPostprocessor",false]],"lambdapostprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.LambdaPostprocessor",false]],"lazynormalization (class in cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.LazyNormalization",false]],"list_cls_to_dict() (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.list_cls_to_dict",false]],"list_models() (cellmap_flow.models.cellmap_models.cellmapmodels method)":[[15,"cellmap_flow.models.cellmap_models.CellmapModels.list_models",false]],"listinput (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.ListInput",false]],"load_config() (in module cellmap_flow.utils.config_utils)":[[27,"cellmap_flow.utils.config_utils.load_config",false]],"load_eval_model() (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.load_eval_model",false]],"load_input_information() (cellmap_flow.utils.data.biomodelconfig method)":[[28,"cellmap_flow.utils.data.BioModelConfig.load_input_information",false]],"load_model_paths() (in module cellmap_flow.models.model_yaml)":[[18,"cellmap_flow.models.model_yaml.load_model_paths",false]],"load_output_information() (cellmap_flow.utils.data.biomodelconfig method)":[[28,"cellmap_flow.utils.data.BioModelConfig.load_output_information",false]],"load_safe_config() (in module cellmap_flow.utils.load_py)":[[32,"cellmap_flow.utils.load_py.load_safe_config",false]],"logger (in module cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.logger",false]],"logger (in module cellmap_flow.blockwise.cli)":[[1,"cellmap_flow.blockwise.cli.logger",false]],"logger (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.logger",false],[3,"id0",false]],"logger (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.logger",false]],"logger (in module cellmap_flow.cli.multiple_yaml_cli)":[[7,"cellmap_flow.cli.multiple_yaml_cli.logger",false]],"logger (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.logger",false]],"logger (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.logger",false]],"logger (in module cellmap_flow.inferencer)":[[14,"cellmap_flow.inferencer.logger",false]],"logger (in module cellmap_flow.models.run)":[[19,"cellmap_flow.models.run.logger",false]],"logger (in module cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.logger",false]],"logger (in module cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.logger",false]],"logger (in module cellmap_flow.server)":[[24,"cellmap_flow.server.logger",false]],"logger (in module cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.logger",false],[26,"id0",false]],"logger (in module cellmap_flow.utils.config_utils)":[[27,"cellmap_flow.utils.config_utils.logger",false]],"logger (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.logger",false]],"logger (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.logger",false]],"logger (in module cellmap_flow.utils.neuroglancer_utils)":[[33,"cellmap_flow.utils.neuroglancer_utils.logger",false]],"logger (in module cellmap_flow.utils.scale_pyramid)":[[34,"cellmap_flow.utils.scale_pyramid.logger",false]],"logger (in module cellmap_flow.utils.serilization_utils)":[[35,"cellmap_flow.utils.serilization_utils.logger",false]],"main() (in module cellmap_flow.cli.fly_model)":[[4,"cellmap_flow.cli.fly_model.main",false]],"main() (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.main",false]],"main() (in module cellmap_flow.cli.multiple_yaml_cli)":[[7,"cellmap_flow.cli.multiple_yaml_cli.main",false]],"max_value (cellmap_flow.norm.input_normalize.minmaxnormalizer attribute)":[[21,"cellmap_flow.norm.input_normalize.MinMaxNormalizer.max_value",false]],"max_voxel_size (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid.max_voxel_size",false]],"mean (cellmap_flow.norm.input_normalize.zscorenormalizer attribute)":[[21,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.mean",false]],"metadata (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.metadata",false]],"min_value (cellmap_flow.norm.input_normalize.minmaxnormalizer attribute)":[[21,"cellmap_flow.norm.input_normalize.MinMaxNormalizer.min_value",false]],"min_voxel_size (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid.min_voxel_size",false]],"minmaxnormalizer (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.MinMaxNormalizer",false]],"model (cellmap_flow.utils.data.flymodelconfig property)":[[28,"cellmap_flow.utils.data.FlyModelConfig.model",false]],"model_config (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.model_config",false]],"model_config (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.model_config",false]],"model_config (cellmap_flow.inferencer.inferencer attribute)":[[14,"cellmap_flow.inferencer.Inferencer.model_config",false]],"model_name (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.model_name",false]],"model_name (cellmap_flow.utils.bsub_utils.job attribute)":[[26,"cellmap_flow.utils.bsub_utils.Job.model_name",false]],"model_name (cellmap_flow.utils.data.biomodelconfig attribute)":[[28,"cellmap_flow.utils.data.BioModelConfig.model_name",false]],"model_type (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.model_type",false]],"modelconfig (class in cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.ModelConfig",false]],"modeldashboardconfig (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.ModelDashboardConfig",false]],"modelmetadata (class in cellmap_flow.models.cellmap_models)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata",false]],"module":[[0,"module-cellmap_flow.blockwise.blockwise_processor",false],[1,"module-cellmap_flow.blockwise.cli",false],[2,"module-cellmap_flow.blockwise",false],[3,"module-cellmap_flow.cli.cli",false],[4,"module-cellmap_flow.cli.fly_model",false],[5,"module-cellmap_flow.cli",false],[6,"module-cellmap_flow.cli.multiple_cli",false],[7,"module-cellmap_flow.cli.multiple_yaml_cli",false],[8,"module-cellmap_flow.cli.server_cli",false],[9,"module-cellmap_flow.dashboard.app",false],[10,"module-cellmap_flow.dashboard",false],[11,"module-cellmap_flow.globals",false],[12,"module-cellmap_flow.image_data_interface",false],[13,"module-cellmap_flow",false],[14,"module-cellmap_flow.inferencer",false],[15,"module-cellmap_flow.models.cellmap_models",false],[16,"module-cellmap_flow.models",false],[17,"module-cellmap_flow.models.model_app_config",false],[18,"module-cellmap_flow.models.model_yaml",false],[19,"module-cellmap_flow.models.run",false],[20,"module-cellmap_flow.norm",false],[21,"module-cellmap_flow.norm.input_normalize",false],[22,"module-cellmap_flow.post",false],[23,"module-cellmap_flow.post.postprocessors",false],[24,"module-cellmap_flow.server",false],[25,"module-cellmap_flow.tmp",false],[26,"module-cellmap_flow.utils.bsub_utils",false],[27,"module-cellmap_flow.utils.config_utils",false],[28,"module-cellmap_flow.utils.data",false],[29,"module-cellmap_flow.utils.ds",false],[30,"module-cellmap_flow.utils.import_utils",false],[31,"module-cellmap_flow.utils",false],[32,"module-cellmap_flow.utils.load_py",false],[33,"module-cellmap_flow.utils.neuroglancer_utils",false],[34,"module-cellmap_flow.utils.scale_pyramid",false],[35,"module-cellmap_flow.utils.serilization_utils",false],[36,"module-cellmap_flow.utils.web_utils",false]],"mortonsegmentationrelabeling (built-in class)":[[44,"MortonSegmentationRelabeling",false]],"mortonsegmentationrelabeling (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling",false]],"multiplier (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.multiplier",false]],"mymodelconfig (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.MyModelConfig",false]],"n5_block_shape (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.n5_block_shape",false]],"name (cellmap_flow.models.model_app_config.fileinput attribute)":[[17,"cellmap_flow.models.model_app_config.FileInput.name",false]],"name (cellmap_flow.models.model_app_config.listinput attribute)":[[17,"cellmap_flow.models.model_app_config.ListInput.name",false]],"name (cellmap_flow.models.model_app_config.selectinput attribute)":[[17,"cellmap_flow.models.model_app_config.SelectInput.name",false]],"name (cellmap_flow.models.model_app_config.textinput attribute)":[[17,"cellmap_flow.models.model_app_config.TextInput.name",false]],"name (cellmap_flow.utils.data.biomodelconfig attribute)":[[28,"cellmap_flow.utils.data.BioModelConfig.name",false]],"name (cellmap_flow.utils.data.cellmapmodelconfig attribute)":[[28,"cellmap_flow.utils.data.CellMapModelConfig.name",false]],"name (cellmap_flow.utils.data.dacapomodelconfig attribute)":[[28,"cellmap_flow.utils.data.DaCapoModelConfig.name",false]],"name (cellmap_flow.utils.data.flymodelconfig attribute)":[[28,"cellmap_flow.utils.data.FlyModelConfig.name",false]],"name (cellmap_flow.utils.data.scriptmodelconfig attribute)":[[28,"cellmap_flow.utils.data.ScriptModelConfig.name",false]],"name() (cellmap_flow.norm.input_normalize.serializableinterface class method)":[[21,"cellmap_flow.norm.input_normalize.SerializableInterface.name",false]],"name() (postprocessor method)":[[44,"PostProcessor.name",false]],"neighborhood (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.neighborhood",false]],"neuroglancer_url (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.NEUROGLANCER_URL",false]],"normalize (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.normalize",false]],"normalize() (cellmap_flow.norm.input_normalize.zscorenormalizer method)":[[21,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.normalize",false]],"num_channels (cellmap_flow.post.postprocessors.affinitypostprocessor property)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.num_channels",false]],"num_channels (cellmap_flow.post.postprocessors.channelselection property)":[[23,"cellmap_flow.post.postprocessors.ChannelSelection.num_channels",false]],"num_previous_segments (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.num_previous_segments",false]],"num_previous_segments (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling attribute)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.num_previous_segments",false]],"offset (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.offset",false]],"onnx_model (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.onnx_model",false]],"open_ds_tensorstore() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.open_ds_tensorstore",false]],"optimize_model() (cellmap_flow.inferencer.inferencer method)":[[14,"cellmap_flow.inferencer.Inferencer.optimize_model",false]],"options (cellmap_flow.models.model_app_config.listinput attribute)":[[17,"cellmap_flow.models.model_app_config.ListInput.options",false]],"options (cellmap_flow.models.model_app_config.selectinput attribute)":[[17,"cellmap_flow.models.model_app_config.SelectInput.options",false]],"ort (in module cellmap_flow.models.cellmap_models)":[[15,"cellmap_flow.models.cellmap_models.ort",false]],"out_channels (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.out_channels",false]],"output_arrays (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_arrays",false]],"output_arrays (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_arrays",false]],"output_channels (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_channels",false]],"output_channels (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_channels",false]],"output_channels (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.output_channels",false]],"output_channels (cellmap_flow.server.dummyconfig attribute)":[[24,"cellmap_flow.server.DummyConfig.output_channels",false]],"output_dtype (cellmap_flow.utils.data.modelconfig property)":[[28,"cellmap_flow.utils.data.ModelConfig.output_dtype",false]],"output_path (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_path",false]],"output_path (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_path",false]],"output_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.output_shape",false]],"output_size (cellmap_flow.utils.data.flymodelconfig attribute)":[[28,"cellmap_flow.utils.data.FlyModelConfig.output_size",false]],"output_voxel_size (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_voxel_size",false]],"output_voxel_size (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_voxel_size",false]],"output_voxel_size (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.output_voxel_size",false]],"output_voxel_size (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.output_voxel_size",false]],"output_voxel_size (cellmap_flow.server.dummyconfig attribute)":[[24,"cellmap_flow.server.DummyConfig.output_voxel_size",false]],"output_voxel_size (cellmap_flow.utils.data.flymodelconfig attribute)":[[28,"cellmap_flow.utils.data.FlyModelConfig.output_voxel_size",false]],"parallel (cellmap_flow.norm.input_normalize.euclideandistance attribute)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance.parallel",false]],"parse_bpeek_output() (in module cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.parse_bpeek_output",false]],"parse_model_configs() (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.parse_model_configs",false]],"path (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.path",false]],"postprocess (in module cellmap_flow.globals)":[[11,"cellmap_flow.globals.postprocess",false]],"postprocess_dict_key (in module cellmap_flow.utils.web_utils)":[[36,"cellmap_flow.utils.web_utils.POSTPROCESS_DICT_KEY",false]],"postprocessing_lock (in module cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.postprocessing_lock",false]],"postprocessor (built-in class)":[[44,"PostProcessor",false]],"postprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.PostProcessor",false]],"postprocessormethods (in module cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.PostProcessorMethods",false]],"predict() (in module cellmap_flow.inferencer)":[[14,"cellmap_flow.inferencer.predict",false]],"previous_refresh_time (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.previous_refresh_time",false]],"process (cellmap_flow.utils.bsub_utils.job attribute)":[[26,"cellmap_flow.utils.bsub_utils.Job.process",false]],"process() (cellmap_flow.norm.input_normalize.serializableinterface method)":[[21,"cellmap_flow.norm.input_normalize.SerializableInterface.process",false]],"process() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.process",false]],"process() (postprocessor method)":[[44,"PostProcessor.process",false]],"process_chunk() (cellmap_flow.inferencer.inferencer method)":[[14,"cellmap_flow.inferencer.Inferencer.process_chunk",false]],"process_chunk_basic() (cellmap_flow.inferencer.inferencer method)":[[14,"cellmap_flow.inferencer.Inferencer.process_chunk_basic",false]],"process_chunk_bioimage() (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.process_chunk_bioimage",false]],"process_chunk_bioimage_test() (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.process_chunk_bioimage_test",false]],"process_fn() (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor method)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.process_fn",false]],"process_fn() (cellmap_flow.blockwise.cellmapflowblockwiseprocessor method)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.process_fn",false]],"pytorch_model (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.pytorch_model",false]],"queue (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.queue",false]],"queue (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.queue",false]],"queue (in module cellmap_flow.cli.fly_model)":[[4,"cellmap_flow.cli.fly_model.queue",false]],"read_block_shape (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.read_block_shape",false]],"readme (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.readme",false]],"refresh_rate_seconds (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.refresh_rate_seconds",false]],"regularize_offset() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.regularize_offset",false]],"reorder_axes() (in module cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.reorder_axes",false]],"root_dir (cellmap_flow.models.cellmap_models.cellmapmodels attribute)":[[15,"cellmap_flow.models.cellmap_models.CellmapModels.root_dir",false]],"run() (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor method)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.run",false]],"run() (cellmap_flow.blockwise.cellmapflowblockwiseprocessor method)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.run",false]],"run() (cellmap_flow.globals.flow class method)":[[11,"cellmap_flow.globals.Flow.run",false]],"run() (cellmap_flow.server.cellmapflowserver method)":[[24,"cellmap_flow.server.CellMapFlowServer.run",false]],"run() (in module cellmap_flow.blockwise.cli)":[[1,"cellmap_flow.blockwise.cli.run",false]],"run() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.run",false]],"run_locally() (in module cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.run_locally",false]],"run_model() (in module cellmap_flow.models.run)":[[19,"cellmap_flow.models.run.run_model",false]],"run_multiple() (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.run_multiple",false]],"run_multiple() (in module cellmap_flow.cli.multiple_yaml_cli)":[[7,"cellmap_flow.cli.multiple_yaml_cli.run_multiple",false]],"run_name (cellmap_flow.utils.data.dacapomodelconfig attribute)":[[28,"cellmap_flow.utils.data.DaCapoModelConfig.run_name",false]],"run_server() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.run_server",false]],"run_ui_server() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.run_ui_server",false]],"scale (cellmap_flow.utils.data.cellmapmodelconfig attribute)":[[28,"cellmap_flow.utils.data.CellMapModelConfig.scale",false]],"scale (cellmap_flow.utils.data.scriptmodelconfig attribute)":[[28,"cellmap_flow.utils.data.ScriptModelConfig.scale",false]],"scalepyramid (class in cellmap_flow.utils.scale_pyramid)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid",false]],"script() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.script",false]],"script() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.script",false]],"script_path (cellmap_flow.utils.data.scriptmodelconfig attribute)":[[28,"cellmap_flow.utils.data.ScriptModelConfig.script_path",false]],"script_server_check() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.script_server_check",false]],"scriptmodelconfig (class in cellmap_flow.utils.data)":[[28,"cellmap_flow.utils.data.ScriptModelConfig",false]],"security (in module cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.security",false]],"selectinput (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.SelectInput",false]],"separate_store_path() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.separate_store_path",false]],"serializableinterface (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.SerializableInterface",false]],"serialize_norms_posts_to_json() (in module cellmap_flow.utils.serilization_utils)":[[35,"cellmap_flow.utils.serilization_utils.serialize_norms_posts_to_json",false]],"server_command (in module cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.SERVER_COMMAND",false]],"server_queue_arg (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.server_queue_arg",false]],"show() (in module cellmap_flow.utils.neuroglancer_utils)":[[33,"cellmap_flow.utils.neuroglancer_utils.show",false]],"simpleblockwisemerger (built-in class)":[[44,"SimpleBlockwiseMerger",false]],"simpleblockwisemerger (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger",false]],"size (cellmap_flow.norm.input_normalize.dilate attribute)":[[21,"cellmap_flow.norm.input_normalize.Dilate.size",false]],"slices (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.slices",false]],"spatial_dims (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.spatial_dims",false]],"spawn_worker() (in module cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.spawn_worker",false]],"split_dataset_path() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.split_dataset_path",false]],"start_hosts() (in module cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.start_hosts",false]],"status (cellmap_flow.utils.bsub_utils.job attribute)":[[26,"cellmap_flow.utils.bsub_utils.Job.status",false]],"std (cellmap_flow.norm.input_normalize.zscorenormalizer attribute)":[[21,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.std",false]],"stop() (cellmap_flow.globals.flow class method)":[[11,"cellmap_flow.globals.Flow.stop",false]],"submit_bsub_job() (in module cellmap_flow.utils.bsub_utils)":[[26,"cellmap_flow.utils.bsub_utils.submit_bsub_job",false]],"submit_models() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.submit_models",false]],"swap_axes (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.swap_axes",false]],"task_name (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.task_name",false]],"task_name (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.task_name",false]],"textinput (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.TextInput",false]],"threshold (cellmap_flow.post.postprocessors.thresholdpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.ThresholdPostprocessor.threshold",false]],"thresholdpostprocessor (built-in class)":[[44,"ThresholdPostprocessor",false]],"thresholdpostprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.ThresholdPostprocessor",false]],"to_dict() (cellmap_flow.globals.flow method)":[[11,"cellmap_flow.globals.Flow.to_dict",false]],"to_dict() (cellmap_flow.norm.input_normalize.serializableinterface method)":[[21,"cellmap_flow.norm.input_normalize.SerializableInterface.to_dict",false]],"to_dict() (postprocessor method)":[[44,"PostProcessor.to_dict",false]],"to_ndarray_tensorstore() (in module cellmap_flow.utils.ds)":[[29,"cellmap_flow.utils.ds.to_ndarray_tensorstore",false]],"to_ndarray_ts() (cellmap_flow.image_data_interface.imagedatainterface method)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.to_ndarray_ts",false]],"token (cellmap_flow.utils.scale_pyramid.scalepyramid property)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid.token",false]],"torch (in module cellmap_flow.models.cellmap_models)":[[15,"cellmap_flow.models.cellmap_models.torch",false]],"ts (cellmap_flow.image_data_interface.imagedatainterface property)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.ts",false]],"ts_dataset (cellmap_flow.utils.ds.lazynormalization attribute)":[[29,"cellmap_flow.utils.ds.LazyNormalization.ts_dataset",false]],"ts_model (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.ts_model",false]],"update_equivalences() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.update_equivalences",false]],"update_run_models() (in module cellmap_flow.models.run)":[[19,"cellmap_flow.models.run.update_run_models",false]],"use_exact (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.use_exact",false]],"use_exact (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling attribute)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.use_exact",false]],"use_exact (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.use_exact",false]],"use_half_prediction (cellmap_flow.inferencer.inferencer attribute)":[[14,"cellmap_flow.inferencer.Inferencer.use_half_prediction",false]],"version (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.version",false]],"viewer (in module cellmap_flow.globals)":[[11,"cellmap_flow.globals.viewer",false]],"volume_layers (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid.volume_layers",false]],"volume_type (cellmap_flow.utils.scale_pyramid.scalepyramid property)":[[34,"cellmap_flow.utils.scale_pyramid.ScalePyramid.volume_type",false]],"voxel_size (cellmap_flow.utils.data.biomodelconfig attribute)":[[28,"cellmap_flow.utils.data.BioModelConfig.voxel_size",false]],"voxels_to_process (cellmap_flow.utils.data.biomodelconfig attribute)":[[28,"cellmap_flow.utils.data.BioModelConfig.voxels_to_process",false]],"workers (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.workers",false]],"workers (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.workers",false]],"x (in module cellmap_flow.tmp)":[[25,"cellmap_flow.tmp.x",false]],"yaml_config (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.yaml_config",false]],"yaml_config (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.yaml_config",false]],"zscorenormalizer (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.ZScoreNormalizer",false]]},"objects":{"":[[44,0,1,"","AffinityPostprocessor"],[44,0,1,"","ChannelSelection"],[44,0,1,"","DefaultPostprocessor"],[44,0,1,"","LabelPostprocessor"],[44,0,1,"","LambdaPostprocessor"],[44,0,1,"","MortonSegmentationRelabeling"],[44,0,1,"","PostProcessor"],[44,0,1,"","SimpleBlockwiseMerger"],[44,0,1,"","ThresholdPostprocessor"],[13,3,0,"-","cellmap_flow"]],"PostProcessor":[[44,1,1,"","__call__"],[44,1,1,"","_process"],[44,2,1,"","dtype"],[44,2,1,"","is_segmentation"],[44,1,1,"","name"],[44,1,1,"","process"],[44,1,1,"","to_dict"]],"cellmap_flow":[[2,3,0,"-","blockwise"],[5,3,0,"-","cli"],[10,3,0,"-","dashboard"],[11,3,0,"-","globals"],[12,3,0,"-","image_data_interface"],[14,3,0,"-","inferencer"],[16,3,0,"-","models"],[20,3,0,"-","norm"],[22,3,0,"-","post"],[24,3,0,"-","server"],[25,3,0,"-","tmp"],[31,3,0,"-","utils"]],"cellmap_flow.blockwise":[[2,0,1,"","CellMapFlowBlockwiseProcessor"],[0,3,0,"-","blockwise_processor"],[1,3,0,"-","cli"]],"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor":[[2,2,1,"","block_shape"],[2,2,1,"","channels"],[2,2,1,"","charge_group"],[2,1,1,"","client"],[2,2,1,"","config"],[2,2,1,"","dtype"],[2,2,1,"","idi_raw"],[2,2,1,"","inferencer"],[2,2,1,"","input_path"],[2,2,1,"","input_voxel_size"],[2,2,1,"","model_config"],[2,2,1,"","output_arrays"],[2,2,1,"","output_channels"],[2,2,1,"","output_path"],[2,2,1,"","output_voxel_size"],[2,1,1,"","process_fn"],[2,2,1,"","queue"],[2,1,1,"","run"],[2,2,1,"","task_name"],[2,2,1,"","workers"],[2,2,1,"","yaml_config"]],"cellmap_flow.blockwise.blockwise_processor":[[0,0,1,"","CellMapFlowBlockwiseProcessor"],[0,4,1,"","logger"],[0,5,1,"","spawn_worker"]],"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor":[[0,2,1,"","block_shape"],[0,2,1,"","channels"],[0,2,1,"","charge_group"],[0,1,1,"","client"],[0,2,1,"","config"],[0,2,1,"","dtype"],[0,2,1,"","idi_raw"],[0,2,1,"","inferencer"],[0,2,1,"","input_path"],[0,2,1,"","input_voxel_size"],[0,2,1,"","model_config"],[0,2,1,"","output_arrays"],[0,2,1,"","output_channels"],[0,2,1,"","output_path"],[0,2,1,"","output_voxel_size"],[0,1,1,"","process_fn"],[0,2,1,"","queue"],[0,1,1,"","run"],[0,2,1,"","task_name"],[0,2,1,"","workers"],[0,2,1,"","yaml_config"]],"cellmap_flow.blockwise.cli":[[1,5,1,"","cli"],[1,4,1,"","logger"],[1,5,1,"","run"]],"cellmap_flow.cli":[[3,3,0,"-","cli"],[4,3,0,"-","fly_model"],[6,3,0,"-","multiple_cli"],[7,3,0,"-","multiple_yaml_cli"],[8,3,0,"-","server_cli"]],"cellmap_flow.cli.cli":[[3,5,1,"","bioimage"],[3,5,1,"","cellmap_model"],[3,5,1,"","cli"],[3,5,1,"","dacapo"],[3,4,1,"id0","logger"],[3,5,1,"","run"],[3,5,1,"","script"],[3,5,1,"","script_server_check"]],"cellmap_flow.cli.fly_model":[[4,4,1,"","charge_group"],[4,5,1,"","main"],[4,4,1,"","queue"]],"cellmap_flow.cli.multiple_cli":[[6,4,1,"","DEFAULT_SERVER_QUEUE"],[6,4,1,"","charge_group_arg"],[6,4,1,"","data_args"],[6,4,1,"","extra_args"],[6,4,1,"","logger"],[6,5,1,"","main"],[6,5,1,"","run_multiple"],[6,4,1,"","server_queue_arg"]],"cellmap_flow.cli.multiple_yaml_cli":[[7,4,1,"","logger"],[7,5,1,"","main"],[7,5,1,"","run_multiple"]],"cellmap_flow.cli.server_cli":[[8,5,1,"","bioimage"],[8,5,1,"","cellmap_model"],[8,5,1,"","cli"],[8,5,1,"","dacapo"],[8,5,1,"","fly"],[8,4,1,"","logger"],[8,5,1,"","run_server"],[8,5,1,"","run_ui_server"],[8,5,1,"","script"]],"cellmap_flow.dashboard":[[9,3,0,"-","app"]],"cellmap_flow.dashboard.app":[[9,4,1,"","CustomCodeFolder"],[9,4,1,"","INFERENCE_SERVER"],[9,4,1,"","NEUROGLANCER_URL"],[9,4,1,"","app"],[9,5,1,"","create_and_run_app"],[9,5,1,"","index"],[9,5,1,"","is_output_segmentation"],[9,4,1,"","logger"],[9,5,1,"","process"],[9,5,1,"","submit_models"],[9,5,1,"","update_equivalences"]],"cellmap_flow.globals":[[11,0,1,"","Flow"],[11,4,1,"","g"],[11,4,1,"","input_norms"],[11,4,1,"","postprocess"],[11,4,1,"","viewer"]],"cellmap_flow.globals.Flow":[[11,1,1,"","delete"],[11,1,1,"","get_output_dtype"],[11,1,1,"","run"],[11,1,1,"","stop"],[11,1,1,"","to_dict"]],"cellmap_flow.image_data_interface":[[12,0,1,"","ImageDataInterface"]],"cellmap_flow.image_data_interface.ImageDataInterface":[[12,2,1,"","concurrency_limit"],[12,2,1,"","custom_fill_value"],[12,2,1,"","filetype"],[12,2,1,"","normalize"],[12,2,1,"","offset"],[12,2,1,"","path"],[12,2,1,"","swap_axes"],[12,1,1,"","to_ndarray_ts"],[12,6,1,"","ts"]],"cellmap_flow.inferencer":[[14,0,1,"","Inferencer"],[14,5,1,"","apply_postprocess"],[14,4,1,"","logger"],[14,5,1,"","predict"]],"cellmap_flow.inferencer.Inferencer":[[14,2,1,"","model_config"],[14,1,1,"","optimize_model"],[14,1,1,"","process_chunk"],[14,1,1,"","process_chunk_basic"],[14,2,1,"","use_half_prediction"]],"cellmap_flow.models":[[15,3,0,"-","cellmap_models"],[17,3,0,"-","model_app_config"],[18,3,0,"-","model_yaml"],[19,3,0,"-","run"]],"cellmap_flow.models.cellmap_models":[[15,0,1,"","CellmapModel"],[15,0,1,"","CellmapModels"],[15,0,1,"","ModelMetadata"],[15,4,1,"","ort"],[15,4,1,"","torch"]],"cellmap_flow.models.cellmap_models.CellmapModel":[[15,2,1,"","folder_path"],[15,6,1,"","metadata"],[15,6,1,"","onnx_model"],[15,6,1,"","pytorch_model"],[15,6,1,"","readme"],[15,6,1,"","ts_model"]],"cellmap_flow.models.cellmap_models.CellmapModels":[[15,1,1,"","list_models"],[15,2,1,"","root_dir"]],"cellmap_flow.models.cellmap_models.ModelMetadata":[[15,2,1,"","__class_vars__"],[15,2,1,"","__private_attributes__"],[15,2,1,"","__pydantic_complete__"],[15,2,1,"","__pydantic_computed_fields__"],[15,2,1,"","__pydantic_core_schema__"],[15,2,1,"","__pydantic_custom_init__"],[15,2,1,"","__pydantic_decorators__"],[15,2,1,"","__pydantic_extra__"],[15,2,1,"","__pydantic_fields__"],[15,2,1,"","__pydantic_fields_set__"],[15,2,1,"","__pydantic_generic_metadata__"],[15,2,1,"","__pydantic_parent_namespace__"],[15,2,1,"","__pydantic_post_init__"],[15,2,1,"","__pydantic_private__"],[15,2,1,"","__pydantic_root_model__"],[15,2,1,"","__pydantic_serializer__"],[15,2,1,"","__pydantic_validator__"],[15,2,1,"","__signature__"],[15,2,1,"","author"],[15,2,1,"","channels_names"],[15,2,1,"","description"],[15,2,1,"","framework"],[15,2,1,"","in_channels"],[15,2,1,"","inference_input_shape"],[15,2,1,"","inference_output_shape"],[15,2,1,"","input_shape"],[15,2,1,"","input_voxel_size"],[15,2,1,"","iteration"],[15,2,1,"","model_name"],[15,2,1,"","model_type"],[15,2,1,"","out_channels"],[15,2,1,"","output_shape"],[15,2,1,"","output_voxel_size"],[15,2,1,"","spatial_dims"],[15,2,1,"","version"]],"cellmap_flow.models.model_app_config":[[17,0,1,"","AppInput"],[17,0,1,"","FileInput"],[17,0,1,"","ListInput"],[17,0,1,"","ModelDashboardConfig"],[17,0,1,"","MyModelConfig"],[17,0,1,"","SelectInput"],[17,0,1,"","TextInput"]],"cellmap_flow.models.model_app_config.FileInput":[[17,2,1,"","default_value"],[17,2,1,"","description"],[17,2,1,"","name"]],"cellmap_flow.models.model_app_config.ListInput":[[17,2,1,"","default_value"],[17,2,1,"","description"],[17,2,1,"","name"],[17,2,1,"","options"]],"cellmap_flow.models.model_app_config.MyModelConfig":[[17,2,1,"","elemns"]],"cellmap_flow.models.model_app_config.SelectInput":[[17,2,1,"","default_value"],[17,2,1,"","description"],[17,2,1,"","name"],[17,2,1,"","options"]],"cellmap_flow.models.model_app_config.TextInput":[[17,2,1,"","default_value"],[17,2,1,"","description"],[17,2,1,"","name"]],"cellmap_flow.models.model_yaml":[[18,5,1,"","load_model_paths"]],"cellmap_flow.models.run":[[19,4,1,"","logger"],[19,5,1,"","run_model"],[19,5,1,"","update_run_models"]],"cellmap_flow.norm":[[21,3,0,"-","input_normalize"]],"cellmap_flow.norm.input_normalize":[[21,0,1,"","Dilate"],[21,0,1,"","EuclideanDistance"],[21,0,1,"","InputNormalizer"],[21,0,1,"","LambdaNormalizer"],[21,0,1,"","MinMaxNormalizer"],[21,0,1,"","SerializableInterface"],[21,0,1,"","ZScoreNormalizer"],[21,5,1,"","deserialize_list"],[21,5,1,"","get_input_normalizers"],[21,5,1,"","get_normalizations"],[21,4,1,"","logger"]],"cellmap_flow.norm.input_normalize.Dilate":[[21,2,1,"","size"]],"cellmap_flow.norm.input_normalize.EuclideanDistance":[[21,2,1,"","activation"],[21,2,1,"","anisotropy"],[21,2,1,"","black_border"],[21,6,1,"","dtype"],[21,2,1,"","parallel"]],"cellmap_flow.norm.input_normalize.LambdaNormalizer":[[21,6,1,"","dtype"],[21,2,1,"","expression"]],"cellmap_flow.norm.input_normalize.MinMaxNormalizer":[[21,6,1,"","dtype"],[21,2,1,"","max_value"],[21,2,1,"","min_value"]],"cellmap_flow.norm.input_normalize.SerializableInterface":[[21,6,1,"","dtype"],[21,1,1,"","name"],[21,1,1,"","process"],[21,1,1,"","to_dict"]],"cellmap_flow.norm.input_normalize.ZScoreNormalizer":[[21,6,1,"","dtype"],[21,2,1,"","mean"],[21,1,1,"","normalize"],[21,2,1,"","std"]],"cellmap_flow.post":[[23,3,0,"-","postprocessors"]],"cellmap_flow.post.postprocessors":[[23,0,1,"","AffinityPostprocessor"],[23,0,1,"","ChannelSelection"],[23,0,1,"","DefaultPostprocessor"],[23,0,1,"","LabelPostprocessor"],[23,0,1,"","LambdaPostprocessor"],[23,0,1,"","MortonSegmentationRelabeling"],[23,0,1,"","PostProcessor"],[23,4,1,"","PostProcessorMethods"],[23,0,1,"","SimpleBlockwiseMerger"],[23,0,1,"","ThresholdPostprocessor"],[23,5,1,"","get_postprocessors"],[23,5,1,"","get_postprocessors_list"],[23,4,1,"","logger"],[23,4,1,"","postprocessing_lock"]],"cellmap_flow.post.postprocessors.AffinityPostprocessor":[[23,2,1,"","bias"],[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"],[23,2,1,"","neighborhood"],[23,6,1,"","num_channels"],[23,2,1,"","num_previous_segments"],[23,2,1,"","use_exact"]],"cellmap_flow.post.postprocessors.ChannelSelection":[[23,2,1,"","channels"],[23,6,1,"","num_channels"]],"cellmap_flow.post.postprocessors.DefaultPostprocessor":[[23,2,1,"","bias"],[23,2,1,"","clip_max"],[23,2,1,"","clip_min"],[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"],[23,2,1,"","multiplier"]],"cellmap_flow.post.postprocessors.LabelPostprocessor":[[23,2,1,"","channel"],[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"]],"cellmap_flow.post.postprocessors.LambdaPostprocessor":[[23,6,1,"","dtype"],[23,2,1,"","expression"]],"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling":[[23,2,1,"","channel"],[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"],[23,2,1,"","num_previous_segments"],[23,2,1,"","use_exact"]],"cellmap_flow.post.postprocessors.PostProcessor":[[23,6,1,"","is_segmentation"]],"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger":[[23,1,1,"","calculate_equivalences"],[23,2,1,"","channel"],[23,2,1,"","chunk_slice_position_to_coords_id_dict"],[23,6,1,"","dtype"],[23,2,1,"","equivalences"],[23,2,1,"","face_erosion_iterations"],[23,6,1,"","is_segmentation"],[23,2,1,"","keys_to_skip"],[23,2,1,"","slices"],[23,2,1,"","use_exact"]],"cellmap_flow.post.postprocessors.ThresholdPostprocessor":[[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"],[23,2,1,"","threshold"]],"cellmap_flow.server":[[24,0,1,"","CellMapFlowServer"],[24,0,1,"","DummyConfig"],[24,5,1,"","get_process_dataset"],[24,4,1,"","logger"]],"cellmap_flow.server.CellMapFlowServer":[[24,2,1,"","app"],[24,2,1,"","chunk_encoder"],[24,2,1,"","idi_raw"],[24,2,1,"","inferencer"],[24,2,1,"","input_voxel_size"],[24,2,1,"","n5_block_shape"],[24,2,1,"","output_channels"],[24,2,1,"","output_voxel_size"],[24,2,1,"","previous_refresh_time"],[24,2,1,"","read_block_shape"],[24,2,1,"","refresh_rate_seconds"],[24,1,1,"","run"]],"cellmap_flow.server.DummyConfig":[[24,2,1,"","block_shape"],[24,2,1,"","output_channels"],[24,2,1,"","output_voxel_size"]],"cellmap_flow.tmp":[[25,4,1,"","dataset_name"],[25,4,1,"","x"]],"cellmap_flow.utils":[[26,3,0,"-","bsub_utils"],[27,3,0,"-","config_utils"],[28,3,0,"-","data"],[29,3,0,"-","ds"],[30,3,0,"-","import_utils"],[32,3,0,"-","load_py"],[33,3,0,"-","neuroglancer_utils"],[34,3,0,"-","scale_pyramid"],[35,3,0,"-","serilization_utils"],[36,3,0,"-","web_utils"]],"cellmap_flow.utils.bsub_utils":[[26,0,1,"","Job"],[26,4,1,"","SERVER_COMMAND"],[26,5,1,"","cleanup"],[26,5,1,"","get_host_from_stdout"],[26,5,1,"","is_bsub_available"],[26,4,1,"id0","logger"],[26,5,1,"","parse_bpeek_output"],[26,5,1,"","run_locally"],[26,4,1,"","security"],[26,5,1,"","start_hosts"],[26,5,1,"","submit_bsub_job"]],"cellmap_flow.utils.bsub_utils.Job":[[26,2,1,"","host"],[26,2,1,"","job_id"],[26,1,1,"","kill"],[26,2,1,"","model_name"],[26,2,1,"","process"],[26,2,1,"","status"]],"cellmap_flow.utils.config_utils":[[27,4,1,"","DEFAULT_SERVER_QUEUE"],[27,5,1,"","build_models"],[27,5,1,"","load_config"],[27,4,1,"","logger"]],"cellmap_flow.utils.data":[[28,0,1,"","BioModelConfig"],[28,0,1,"","CellMapModelConfig"],[28,0,1,"","Config"],[28,0,1,"","DaCapoModelConfig"],[28,0,1,"","FlyModelConfig"],[28,0,1,"","ModelConfig"],[28,0,1,"","ScriptModelConfig"],[28,5,1,"","check_config"],[28,5,1,"","concat_along_c"],[28,5,1,"","format_output_bioimage"],[28,5,1,"","get_dacapo_channels"],[28,5,1,"","get_dacapo_run_model"],[28,5,1,"","load_eval_model"],[28,4,1,"","logger"],[28,5,1,"","parse_model_configs"],[28,5,1,"","process_chunk_bioimage"],[28,5,1,"","process_chunk_bioimage_test"],[28,5,1,"","reorder_axes"]],"cellmap_flow.utils.data.BioModelConfig":[[28,6,1,"","command"],[28,1,1,"","get_axes_and_dims"],[28,1,1,"","get_input_slicer"],[28,1,1,"","get_spatial_dims"],[28,1,1,"","load_input_information"],[28,1,1,"","load_output_information"],[28,2,1,"","model_name"],[28,2,1,"","name"],[28,2,1,"","voxel_size"],[28,2,1,"","voxels_to_process"]],"cellmap_flow.utils.data.CellMapModelConfig":[[28,2,1,"","cellmap_model"],[28,6,1,"","command"],[28,2,1,"","name"],[28,2,1,"","scale"]],"cellmap_flow.utils.data.DaCapoModelConfig":[[28,6,1,"","command"],[28,2,1,"","iteration"],[28,2,1,"","name"],[28,2,1,"","run_name"]],"cellmap_flow.utils.data.FlyModelConfig":[[28,2,1,"","channels"],[28,2,1,"","checkpoint_path"],[28,6,1,"","command"],[28,2,1,"","input_size"],[28,2,1,"","input_voxel_size"],[28,6,1,"","model"],[28,2,1,"","name"],[28,2,1,"","output_size"],[28,2,1,"","output_voxel_size"]],"cellmap_flow.utils.data.ModelConfig":[[28,6,1,"","config"],[28,6,1,"","output_dtype"]],"cellmap_flow.utils.data.ScriptModelConfig":[[28,6,1,"","command"],[28,2,1,"","name"],[28,2,1,"","scale"],[28,2,1,"","script_path"]],"cellmap_flow.utils.ds":[[29,0,1,"","LazyNormalization"],[29,5,1,"","access_parent"],[29,5,1,"","apply_norms"],[29,5,1,"","check_for_attrs_multiscale"],[29,5,1,"","check_for_multiscale"],[29,5,1,"","check_for_offset"],[29,5,1,"","check_for_units"],[29,5,1,"","check_for_voxel_size"],[29,5,1,"","ends_with_scale"],[29,5,1,"","find_target_scale"],[29,5,1,"","get_ds_info"],[29,5,1,"","get_scale_info"],[29,5,1,"","get_url"],[29,4,1,"","logger"],[29,5,1,"","open_ds_tensorstore"],[29,5,1,"","regularize_offset"],[29,5,1,"","separate_store_path"],[29,5,1,"","split_dataset_path"],[29,5,1,"","to_ndarray_tensorstore"]],"cellmap_flow.utils.ds.LazyNormalization":[[29,2,1,"","ts_dataset"]],"cellmap_flow.utils.import_utils":[[30,5,1,"","check_dependencies"]],"cellmap_flow.utils.load_py":[[32,0,1,"","Config"],[32,4,1,"","DISALLOWED_FUNCTIONS"],[32,4,1,"","DISALLOWED_IMPORTS"],[32,5,1,"","analyze_script"],[32,5,1,"","load_safe_config"]],"cellmap_flow.utils.neuroglancer_utils":[[33,5,1,"","generate_neuroglancer_url"],[33,4,1,"","logger"],[33,5,1,"","show"]],"cellmap_flow.utils.scale_pyramid":[[34,0,1,"","ScalePyramid"],[34,5,1,"","get_raw_layer"],[34,4,1,"","logger"]],"cellmap_flow.utils.scale_pyramid.ScalePyramid":[[34,2,1,"","dims"],[34,1,1,"","get_encoded_subvolume"],[34,1,1,"","get_object_mesh"],[34,1,1,"","info"],[34,1,1,"","invalidate"],[34,2,1,"","max_voxel_size"],[34,2,1,"","min_voxel_size"],[34,6,1,"","token"],[34,2,1,"","volume_layers"],[34,6,1,"","volume_type"]],"cellmap_flow.utils.serilization_utils":[[35,5,1,"","get_process_dataset"],[35,4,1,"","logger"],[35,5,1,"","serialize_norms_posts_to_json"]],"cellmap_flow.utils.web_utils":[[36,4,1,"","ARGS_KEY"],[36,4,1,"","INPUT_NORM_DICT_KEY"],[36,4,1,"","IP_PATTERN"],[36,4,1,"","POSTPROCESS_DICT_KEY"],[36,5,1,"","decode_to_json"],[36,5,1,"","encode_to_str"],[36,5,1,"","get_free_port"],[36,5,1,"","get_norms_post_args"],[36,5,1,"","get_public_ip"],[36,5,1,"","kill_n_remove_from_neuroglancer"],[36,5,1,"","list_cls_to_dict"]]},"objnames":{"0":["py","class","Python class"],"1":["py","method","Python method"],"2":["py","attribute","Python attribute"],"3":["py","module","Python module"],"4":["py","data","Python data"],"5":["py","function","Python function"],"6":["py","property","Python property"]},"objtypes":{"0":"py:class","1":"py:method","2":"py:attribute","3":"py:module","4":"py:data","5":"py:function","6":"py:property"},"terms":{"":[3,6,8,36,38,40,41],"0":[8,21,23,24,39,40,44,46],"003":41,"1":[12,21,23,24,28,37,38,39,40,41,44,46],"10":[36,40],"12":0,"127":[23,44],"1413":41,"158":40,"16":41,"164":40,"168":36,"178":[28,40],"192":36,"2":[40,41,44],"2024":39,"20241204_finetune_mito_affs_task_datasplit_v3_u21_kidney_mito_default_cache_8_1":41,"233":40,"255":[21,40,46],"268":40,"2d":38,"2x2x2":[38,40],"3":23,"32":24,"36000":38,"4":[24,28],"40000":38,"5":[21,23,24,44],"50":[6,21],"56":[28,40],"60":[6,38],"6_pixel":29,"700000":41,"8":[40,46],"9":23,"A":[15,29,34,41],"For":[28,38,39,40],"IF":28,"If":[15,28,29,32,39,40],"Not":45,"One":34,"The":[3,8,15,28,29,38,39,40,41,44,46],"Then":46,"To":[3,8,38,40,41,42],"__args__":15,"__call__":44,"__cflow_args__":36,"__class_vars__":15,"__init__":15,"__origin__":15,"__parameters__":15,"__private_attributes__":15,"__pydantic_complete__":15,"__pydantic_computed_fields__":15,"__pydantic_core_schema__":15,"__pydantic_custom_init__":15,"__pydantic_decorators__":15,"__pydantic_extra__":15,"__pydantic_fields__":15,"__pydantic_fields_set__":15,"__pydantic_generic_metadata__":15,"__pydantic_parent_namespace__":15,"__pydantic_post_init__":15,"__pydantic_private__":15,"__pydantic_root_model__":15,"__pydantic_serializer__":15,"__pydantic_validator__":15,"__root_validators__":15,"__signature__":15,"__validators__":15,"_build":39,"_description_":29,"_process":44,"_static":39,"_templat":39,"about":15,"absolut":39,"abspath":39,"abstract":[15,44],"access":46,"access_par":29,"accord":40,"account":46,"ackerman":39,"across":45,"activ":21,"ad":44,"add":39,"address":36,"adjust":15,"affect":39,"affin":44,"affinitypostprocessor":23,"after":[32,39,44],"against":29,"all":[15,23,24,29,38,44],"alloc":46,"allow":[6,15,38],"almost":45,"along":28,"also":[39,46],"alvyrai":29,"an":[15,28,29,32,41],"analyz":32,"analyze_script":32,"ani":[15,28,29,39,41],"anisotropi":21,"anoth":39,"api":39,"app":[10,24,37],"appar":29,"appinput":17,"appli":44,"applic":[3,8,24],"apply_norm":29,"apply_postprocess":14,"appropri":[6,46],"ar":[15,24,29,38,39],"arg":41,"args_kei":36,"argument":[6,29],"arr":28,"arrai":[28,29,40,44,45],"as_default":40,"ast":32,"astyp":40,"attr":29,"attribut":44,"aubrei":39,"author":[15,39],"auto":[37,39],"autoapi":[37,39],"autoapi_dir":39,"autoapi_opt":39,"autoapi_typ":39,"autobuild":39,"autodoc":39,"automat":[15,40],"avail":[15,41],"ax":28,"axes_list":28,"axi":28,"b_lyso_16":38,"b_mito_16":38,"back":36,"base":[15,23],"basic":[41,42,45],"batch":38,"befor":[38,44,46],"behind":36,"between":44,"bia":[23,44],"bias":44,"bill":[38,46],"binar":44,"binari":38,"bio_mito":38,"bioimag":[3,8,38,42],"biomodelconfig":[28,46],"black_bord":21,"block":[0,2,40,41],"block_shap":[0,2,24,40,41],"blockwis":[13,37,45],"blockwise_processor":[2,37],"bodi":29,"boolean":[32,44],"both":[41,42],"boundari":44,"bsub_util":[31,37],"build":15,"build_model":27,"builder":39,"builtin":39,"c":28,"calculate_equival":23,"call":[6,32,46],"callabl":40,"can":[28,29,39,40,41,42,46],"case":40,"cellmap":[3,4,8,9,11,25,26,38,39,40,41,42,46],"cellmap_flow":[37,39,40,41,46],"cellmap_flow_multipl":[6,41],"cellmap_flow_serv":[8,26],"cellmap_flow_server_ip":36,"cellmap_flow_with_yaml":7,"cellmap_model":[3,8,16,28,37],"cellmapflow":[3,8,41,42],"cellmapflowblockwiseprocessor":[0,2],"cellmapflowserv":24,"cellmapmodel":[15,28],"cellmapmodelconfig":28,"center":29,"cerebellum":41,"certfil":[8,24],"certif":24,"cg":29,"chain":6,"chang":41,"channel":[0,2,8,23,28,40,41,44,46],"channel_axis_nam":28,"channels_nam":15,"channelselect":23,"charg":38,"charge_group":[0,2,3,4,6,7,11,26,38,46],"charge_group_arg":6,"check":[29,40],"check_config":28,"check_depend":30,"check_for_attrs_multiscal":29,"check_for_multiscal":29,"check_for_offset":29,"check_for_unit":29,"check_for_voxel_s":29,"checkpoint":[8,40,46],"checkpoint_path":[28,40,46],"chunk":[38,40,44],"chunk_encod":24,"chunk_slice_position_to_coords_id_dict":23,"class":46,"classif":44,"classmethod":[11,21],"cleanup":26,"cli":[2,13,37,39,40,46],"client":[0,1,2,34],"clip":[40,44],"clip_max":[23,44],"clip_min":[23,44],"cloud":41,"cm":29,"colexicograph":29,"com":29,"come":39,"comma":44,"command":[3,6,8,26,28,40,41,42,46],"common":39,"compat":40,"complet":[15,45],"compon":44,"comput":[15,38,46],"computedfieldinfo":15,"concat_along_c":28,"concaten":28,"concept":15,"concurrency_limit":[12,29],"conda":41,"config":[0,2,7,14,15,28,32,38,40,46],"config_fold":[3,38],"config_path":32,"config_util":[31,37],"configdict":15,"configur":[27,28,32,39,40,45,46],"confirm":38,"connect":44,"consist":[28,44],"construct":[28,41],"contain":[15,23,29,37,39],"context":40,"contribut":41,"control":[38,44],"conveni":24,"convent":[29,45],"convert":44,"coordin":[29,40],"copi":39,"copyright":39,"core":[15,29,41,42],"corner":29,"correct":[27,28,29],"correctli":40,"correspond":[15,28],"cpu":[15,40],"creat":[0,2,15,29,37,40],"create_and_run_app":9,"css":39,"cuda":40,"current":[41,45],"custom":[3,8,15,38,39],"custom_fill_valu":[12,29],"customcodefold":9,"d":[3,6,8,31,37,38,40,41],"dacapo":[3,6,8,38,42],"dacapomodelconfig":[28,46],"dashboard":[13,37],"data":[6,14,15,21,24,29,31,34,36,37,38,40,41,44,45,46],"data_arg":6,"data_format":34,"data_path":[3,8,38,41,46],"dataset":[3,24,29,38,45],"dataset_nam":[24,25],"dataset_path":[3,6,7,12,29,33,34],"david":39,"db":39,"debug":[8,24],"decod":36,"decode_to_json":36,"decor":[15,24],"deem":32,"def":40,"default":[28,38,39],"default_server_queu":[6,27],"default_valu":17,"defaultpostprocessor":23,"defin":[15,24,28,29,38,40,41,44,46],"definit":38,"delet":11,"depend":[30,41,42],"descript":[15,17],"deserialize_list":21,"desir":[3,8,28,38],"desired_ord":28,"desktop":[9,25],"detect":[15,32],"determin":29,"dev":24,"develop":[41,45],"devic":40,"dict":[18,21,23,35],"dictionari":[15,23,29,44],"differ":[34,38],"dilat":21,"dim":[28,34],"dimens":[28,29],"direct":40,"directori":[15,29,39],"disallowed_funct":32,"disallowed_import":32,"discov":15,"discuss":29,"dispatch":[6,44],"displai":41,"do":[40,41],"doc":39,"document":[15,37,39,45],"doe":[36,41,42],"doesn":15,"done":45,"down":45,"draft":45,"ds_name":29,"ds_store":39,"dtype":[0,2,21,23,28,44],"due":29,"dummi":25,"dummyconfig":24,"dump":15,"dure":15,"e":[6,29,36,38,40,41,44,46],"each":[6,29,38,40,44],"edg":[38,44],"edge_length_to_process":[3,8,28,38],"edt":21,"either":28,"element":29,"elemn":17,"elm":[21,23],"els":[15,40],"em":41,"embed":40,"empti":29,"en":39,"enabl":41,"encod":[36,44],"encode_to_str":36,"encoded_str":36,"end":34,"ends_with_scal":29,"ensur":[40,44,46],"entir":15,"entri":27,"equival":[23,44],"equivalence_map":44,"eros":44,"error":[29,32],"etc":[6,29],"euclideandist":21,"eval":40,"eventu":15,"exactli":28,"exampl":[3,6,8,9,38,41],"example_job":26,"example_norm":9,"exclude_pattern":39,"execut":[38,46],"exist":[15,29],"explain":40,"explicitli":15,"explor":41,"express":[21,23,44],"ext":39,"extens":39,"extra":[6,15,33],"extra_arg":6,"f":[38,40],"face":[36,44],"face_erosion_iter":[23,44],"factor":44,"fals":[8,21,24,29,32,46],"favicon":39,"feed":40,"feed_dict":40,"feel":41,"fibsem":[38,41],"field":15,"fieldinfo":15,"file":[15,28,29,38,39],"fileinput":17,"filenam":29,"filepath":32,"filetyp":12,"filter":44,"final":28,"find_target_scal":29,"first":[45,46],"flag":38,"flask":24,"flo":[3,8],"float":[23,29],"float32":28,"flow":[9,11,25,38,39,40,41,42,46],"fly":[8,40,46],"fly_model":[5,37],"fly_organel":[40,46],"flymodelconfig":[28,46],"fmt":39,"folder":38,"folder_path":[8,15,28],"follow":[3,8,38,40,41,42],"force_saf":32,"force_safe_config":32,"format_output_bioimag":28,"forward":40,"found":29,"frame":26,"framework":[15,40,44],"free":41,"frequent":41,"from":[15,27,28,29,38,40,41,44,46],"full":39,"function":[15,41],"funlib":[28,29,40],"g":[11,36,41,44,46],"gener":[15,37,39,44],"generate_neuroglancer_url":33,"geometri":[28,29,40],"get":29,"get_axes_and_dim":28,"get_dacapo_channel":28,"get_dacapo_run_model":28,"get_ds_info":29,"get_encoded_subvolum":34,"get_free_port":36,"get_host_from_stdout":26,"get_input_norm":21,"get_input_slic":28,"get_norm":21,"get_norms_post_arg":36,"get_object_mesh":34,"get_output_dtyp":11,"get_postprocessor":23,"get_postprocessors_list":23,"get_process_dataset":[24,35],"get_public_ip":36,"get_raw_lay":34,"get_scale_info":29,"get_spatial_dim":28,"get_tensor_nam":40,"get_url":29,"getenv":32,"given":[15,27],"global":[13,37,40,46],"go":45,"gpu":[15,41,46],"gpu_a100":4,"gpu_h100":[6,11,26,27,38,40,46],"graph":[40,44],"group":[29,38,41,46],"grow":40,"guid":40,"h100":46,"ha":[15,28,29],"handl":[40,45],"have":46,"hdf5":29,"heat":29,"heinrich":39,"help":39,"here":[28,29,39],"hierarchi":29,"high":45,"host":[24,26,41],"how":[15,40],"html":39,"html_css_file":39,"html_extra_path":39,"html_favicon":39,"html_static_path":39,"html_theme":39,"http":[26,29,39],"i":[3,8,15,28,29,32,38,39,40,41,44,46],"ico":39,"id":44,"idi":[14,28,40],"idi_raw":[0,2,24],"ignor":39,"imag":44,"image_data_interfac":[13,28,37,40],"imagedatainterfac":[12,28,40,41],"implement":44,"import":[32,39,40,46],"import_meta_graph":40,"import_util":[31,37],"improv":45,"in_channel":15,"includ":[39,41,42,46],"index":9,"indic":[32,44],"infer":[38,40,41,46],"inferenc":[0,2,13,24,37],"inference_host":8,"inference_input_shap":15,"inference_output_shap":15,"inference_serv":9,"inferencesess":15,"info":[29,34],"inform":[29,39],"init":15,"initi":38,"input":[28,29,38,40,41,44,46],"input_arrai":40,"input_ax":28,"input_data":40,"input_norm":[11,20,36,37,46],"input_norm_dict_kei":36,"input_path":[0,2],"input_roi":[28,40],"input_s":28,"input_shap":15,"input_tensor":40,"input_tensornam":40,"input_voxel_s":[0,2,8,15,24,28,40,41,46],"inputnorm":21,"insert":[28,39],"inspect":15,"instal":[15,40],"instanc":[15,40,44,45],"instanti":[15,27],"int":[15,23,28,29],"integr":39,"interest":29,"interfac":[3,8,38,40],"interleav":44,"internet":36,"invalid":34,"invert":[21,46],"invok":44,"io":[3,8,38,42],"ip":36,"ip_pattern":36,"ipynb":39,"is_avail":40,"is_bsub_avail":26,"is_output_segment":9,"is_segment":[23,44],"isn":15,"issu":32,"iter":[3,8,15,28,38,41],"its":[28,32],"itself":29,"jeff":39,"jit":15,"job":[26,36,38,46],"job_id":26,"job_nam":26,"join":40,"jrc_mu":[38,41],"jrc_ut21":41,"json":[15,36,40],"json_data":35,"jupytext":39,"keyfil":[8,24],"keys_to_skip":23,"kill":26,"kill_n_remove_from_neuroglanc":36,"kwarg":[14,21,32,44],"label":[28,44],"labelpostprocessor":23,"lambda":44,"lambdanorm":21,"lambdapostprocessor":23,"larissa":39,"launch":[40,46],"layer":34,"lazi":15,"lazili":15,"lazynorm":29,"lead":29,"level":[3,8,29,40],"lexicograph":29,"like":[39,40],"line":[3,8],"list":[15,19,21,23,27,28,29,32,34,39,44],"list_cls_to_dict":36,"list_model":15,"listinput":17,"ll":36,"load":[15,27,32,38,40],"load_config":27,"load_eval_model":[28,40],"load_input_inform":28,"load_model_path":18,"load_output_inform":28,"load_pi":[31,37],"load_safe_config":32,"load_state_dict":40,"local":[36,40,41],"localvolum":34,"log":[3,8],"log_level":[1,3,8],"logger":[0,1,3,6,7,8,9,14,19,21,23,24,26,27,28,29,33,34,35],"logic":6,"long":45,"look":[39,40],"low":45,"lyso_16":38,"m":[3,8,38,41],"machin":36,"mai":[15,41],"main":[4,6,7],"maintain":44,"make":39,"manual":28,"map":44,"map_loc":40,"mark":34,"marwan":39,"master":39,"match":[39,40],"max_val":40,"max_valu":[21,46],"max_voxel_s":34,"maximum":44,"md":[15,39],"mean":21,"member":39,"memo":29,"merg":44,"meta":[29,40],"meta_graph_fil":40,"metadata":[15,28,38],"method":[15,23,44],"microsoft":29,"mimic":34,"min_val":40,"min_valu":[21,46],"min_voxel_s":34,"minim":28,"minimum":44,"minmaxnorm":[21,46],"minut":41,"miss":28,"mito":38,"mito_16":38,"mito_model":38,"mito_run":38,"mito_script":38,"mito_script_model":38,"mode":[12,29,38],"model":[3,6,7,8,13,27,28,37,46],"model_app_config":[16,37],"model_backbon":40,"model_checkpoint":40,"model_checkpoint_432000":46,"model_config":[0,2,8,11,14,24,46],"model_dir":38,"model_entri":27,"model_nam":[15,26,28,38],"model_output_dtyp":11,"model_path":[3,8,19,38,41],"model_scal":46,"model_spec":41,"model_state_dict":40,"model_typ":15,"model_yaml":[16,37],"modelconfig":[14,24,27,28],"modeldashboardconfig":17,"modelmetadata":15,"modul":[39,44],"monitor":46,"month":41,"morton":44,"mortonsegmentationrelabel":23,"most":39,"multi":44,"multipl":[6,29],"multiple_cli":[5,37],"multiple_yaml_cli":[5,37],"multipli":[23,44],"multiscal":29,"multiscale_group":29,"must":[38,40],"mwatersh":44,"my_job":26,"my_run":[3,8,41],"mymodelconfig":17,"myst_nb":39,"myst_pars":39,"n":[23,38,41],"n5":[24,29],"n5_block_shap":24,"name":[0,3,8,15,17,19,21,23,26,28,29,38,39,41,44,46],"namespac":15,"napoleon":39,"nat":36,"nbsphinx":39,"nbsphinx_custom_format":39,"ncpu":0,"ndarrai":[21,28,44],"ndimag":44,"necessari":[28,29],"need":[28,40,46],"neighborhood":[23,44],"net":45,"net_config":40,"neuroglanc":[24,34,44],"neuroglancer_url":[8,9],"neuroglancer_util":[31,37],"nm":29,"nn":40,"node":29,"non":40,"none":[8,9,11,12,15,17,24,26,28,29,34],"norm":[13,35,37,46],"normal":[12,21,29,34,44],"note":[15,41,42],"np":[28,40],"nr":[38,41],"nuclei_model":38,"nuclei_run":38,"num_channel":[23,28],"num_label":40,"num_previous_seg":23,"number":[40,41],"numpi":[21,28,29,40,44],"o":[29,32,39,40],"object":[15,27,28,36,40],"object_id":34,"offset":[12,29,44],"offset_float":29,"often":29,"one":[6,38],"ones":39,"onli":[38,39],"onnx":15,"onnx_model":15,"onnxruntim":15,"open":[29,40],"open_ds_tensorstor":29,"oper":44,"optimize_model":14,"option":[17,24,39,40,41],"order":[28,29,44],"org":39,"organel":40,"ort":15,"ot":40,"other":41,"otherwis":[15,28],"out":28,"out_ax":28,"out_channel":15,"outlin":38,"output":[26,28,39,40,41,44],"output_arrai":[0,2],"output_ax":28,"output_channel":[0,2,24,40,41],"output_dtyp":28,"output_nam":28,"output_path":[0,2],"output_s":28,"output_sampl":28,"output_shap":15,"output_tensor":40,"output_tensornam":40,"output_voxel_s":[0,2,8,12,15,24,28,29,40,41,46],"overridden":38,"overwrit":39,"own":40,"p":[6,38,40],"page":[37,39],"parallel":21,"paramet":[3,8,23,28,29,34,46],"parametr":45,"parent":[15,29],"pars":[6,15],"parse_bpeek_output":26,"parse_model_config":28,"pass":29,"path":[6,7,12,27,29,38,39,40,41,46],"pattern":39,"pdf":29,"per":34,"percent":39,"perform":41,"physic":29,"pip":[40,41,42],"pipelin":[40,46],"pixelresolut":29,"placehold":28,"pleas":41,"point":[29,44],"popul":28,"port":[8,24],"posit":28,"post":[13,15,35,37,45],"post_processor":[11,46],"postprocess":[11,36,40,44],"postprocess_dict_kei":36,"postprocessing_lock":23,"postprocessor":[22,37],"postprocessormethod":23,"potenti":32,"predict":[14,28,40],"prefix":38,"prepar":40,"present":29,"previous_refresh_tim":24,"primarili":44,"print":46,"prioriti":45,"privat":[15,36],"process":[9,21,23,26,38,41,44,45],"process_chunk":[14,40,41],"process_chunk_bas":14,"process_chunk_bioimag":28,"process_chunk_bioimage_test":28,"process_fn":[0,2],"process_lsd":40,"produc":44,"programmat":46,"project":[6,38,39],"properti":[12,15,21,23,28,34],"provid":[15,34,38,41],"pt":15,"public":36,"purpos":15,"py":[7,38,39,40,41],"pydant":15,"pymorton":44,"pyramid":29,"python":[7,38,39,40,44],"pytorch":[15,41],"pytorch_model":15,"q":[6,38,40],"queue":[0,2,3,4,6,7,11,26,38,46],"r":[3,6,8,12,29,38,40,41],"rais":[28,29,32],"raw":[25,40],"re":[36,40],"read":[28,29,39],"read_block_shap":24,"read_roi":14,"read_shap":[40,41],"readm":15,"real":[36,41],"rebuild":15,"recon":41,"refetch":34,"refresh_rate_second":24,"region":29,"regular":29,"regularize_offset":29,"rel":39,"relabel":44,"remov":28,"render":29,"reorder":28,"reorder_ax":28,"replac":15,"repositori":41,"repres":[15,44],"requir":[15,38],"rescal":40,"rescale_data":40,"reshap":28,"resolut":[29,34],"resourc":[38,46],"respect":29,"restor":40,"result":[40,46],"retriev":[40,46],"return":[15,23,28,29,32,36,40,41,44,46],"rhoad":39,"roi":[12,14,28,29,40,41],"root":[29,39],"root_dir":15,"root_model":15,"rootmodel":15,"rout":24,"rst":39,"run":[0,1,2,3,8,11,16,24,26,37,38,40,46],"run07":46,"run_1":6,"run_2":6,"run_loc":26,"run_model":19,"run_multipl":[6,7],"run_nam":[3,8,28,38],"run_serv":8,"run_ui_serv":8,"runtim":15,"runtimeerror":29,"s0":41,"s1":38,"s2":38,"safe":[32,36],"safeti":32,"salivari":38,"same":38,"sampl":[28,45],"satisfi":40,"save":15,"saver":40,"sc":26,"scale":[28,29,34,38,44,46],"scale_kei":34,"scale_pyramid":[31,37],"scalepyramid":34,"schema":15,"schemaseri":15,"schemavalid":15,"scipi":44,"scope":40,"script":[3,6,8,32,38],"script_bas":41,"script_path":[3,8,28,38,41],"script_server_check":3,"script_test":25,"scriptmodelconfig":[28,46],"section":38,"secur":26,"see":[29,39],"segment":[44,45],"select":[39,44],"selectinput":17,"self":28,"semant":45,"separ":[29,44],"separate_store_path":29,"sequenti":[38,40],"serial":44,"serializableinterfac":21,"serialize_norms_posts_to_json":35,"serilization_util":[31,37],"server":[8,13,37,40,41],"server_cli":[5,37],"server_command":26,"server_queue_arg":6,"session":[15,40],"set":[15,40,46],"setup":[39,40],"setup_dir":40,"sever":38,"shape":[28,40,41],"share":6,"sheet":39,"should":[28,46],"show":[33,39],"shown":39,"sigmoid":40,"signatur":15,"signum":26,"similar":[15,28],"simpleblockwisemerg":23,"simplifi":45,"simul":[38,40],"singl":[15,38],"size":[21,28,29,38,40,41,46],"slice":23,"small":40,"so":[28,39],"some":6,"someon":29,"someth":28,"sometim":29,"sourc":[29,39],"spatial_dim":15,"spawn_work":0,"specif":29,"specifi":[38,46],"speed":41,"sphinx":[37,39],"sphinx_autodoc_typehint":39,"sphinx_click":39,"sphinx_rtd_them":39,"split":29,"split_dataset_path":29,"ssl":24,"st_data":19,"standard":40,"standardunet":40,"start":[34,45],"start_host":26,"state":45,"state_dict":15,"static":39,"statu":26,"std":21,"still":[15,41],"stop":11,"store":29,"str":[0,2,3,8,15,18,19,21,23,24,28,29],"string":[29,36,39],"structur":38,"style":39,"sub":6,"subclass":23,"subcommand":38,"subfold":15,"submit":38,"submit_bsub_job":26,"submit_model":9,"subset":44,"suggest":41,"summari":39,"support":[38,41,42],"swap_ax":[12,29],"sy":39,"synthes":15,"system":29,"t":[12,15,21],"take":41,"tanh":21,"target":44,"target_resolut":29,"task":[28,45],"task_nam":[0,2],"templat":39,"templates_path":39,"tensorstor":29,"test":25,"textinput":17,"tf":40,"tf_model_dir":40,"thei":39,"them":[15,28],"theme":39,"thi":[6,15,28,29,36,37,38,39,40,41],"those":29,"threshold":[23,44],"thresholdpostprocessor":23,"thumb":39,"time":41,"tmp":[13,37],"to_dict":[11,21,44],"to_ndarray_t":[12,40],"to_ndarray_tensorstor":29,"todo":45,"toi":45,"token":34,"tool":38,"torch":[15,40,41],"torchscript":15,"total":29,"track":46,"train":[38,40,45],"train_net_checkpoint_400000":40,"transform":29,"translat":29,"true":[0,2,12,14,21,23,29,32,34,40],"ts_dataset":29,"ts_model":15,"tupl":[28,29],"tutori":45,"type":[15,21,29,38],"typic":40,"u":45,"uint8":[38,40,41,44],"undefin":15,"under":41,"undoc":39,"uniqu":44,"unit":[29,40],"unitless":29,"unless":38,"unsaf":32,"up":[41,45],"update_equival":9,"update_run_model":19,"url":[36,46],"us":[3,8,15,28,29,32,36,38,39,40,42,44,46],"usag":[7,15,39],"use_exact":23,"use_half_predict":14,"user":[9,25,44],"using_dacapo":41,"util":[13,14,24,37,46],"v":[15,29],"v1":[15,40],"valid":[15,27,28,38,46],"valu":[15,29,44],"valueerror":[28,29],"variabl":[15,40,41],"variant":38,"variou":44,"vector":44,"verifi":32,"version":[15,38],"via":[24,40,41,46],"viewer":[11,33],"virtual":24,"volum":[34,38,46],"volume_lay":34,"volume_typ":34,"voxel":[29,40,41,44,46],"voxel_s":[12,28,29,40],"voxel_size_float":29,"voxels_to_process":28,"wa":[15,29],"wai":[29,45],"watersh":44,"we":[28,29,41],"weak":44,"web_util":[31,37],"weigel":39,"weights_onli":40,"when":[39,40],"where":29,"whether":[15,32],"which":[28,29,41,46],"wise":44,"within":29,"without":36,"work":40,"worker":[0,2],"workflow":44,"world":40,"write":45,"write_roi":14,"write_shap":[40,41],"www":39,"x":[25,28,36,44,45],"y":28,"yaml":[7,27,28],"yaml_config":[0,1,2],"yaml_fil":18,"yaml_file_path":28,"you":[28,29,36,40,41,42,46],"your":[15,28,39,41,46],"your_script":[40,41],"z":28,"zarr":[12,25,29,38,40,41,46],"zarr_grp":29,"zarr_grp_path":29,"zarr_path":[11,46],"zouinkhi":39,"zouinkhim":[9,25,38,41],"zscorenorm":21},"titles":["cellmap_flow.blockwise.blockwise_processor","cellmap_flow.blockwise.cli","cellmap_flow.blockwise","cellmap_flow.cli.cli","cellmap_flow.cli.fly_model","cellmap_flow.cli","cellmap_flow.cli.multiple_cli","cellmap_flow.cli.multiple_yaml_cli","cellmap_flow.cli.server_cli","cellmap_flow.dashboard.app","cellmap_flow.dashboard","cellmap_flow.globals","cellmap_flow.image_data_interface","cellmap_flow","cellmap_flow.inferencer","cellmap_flow.models.cellmap_models","cellmap_flow.models","cellmap_flow.models.model_app_config","cellmap_flow.models.model_yaml","cellmap_flow.models.run","cellmap_flow.norm","cellmap_flow.norm.input_normalize","cellmap_flow.post","cellmap_flow.post.postprocessors","cellmap_flow.server","cellmap_flow.tmp","cellmap_flow.utils.bsub_utils","cellmap_flow.utils.config_utils","cellmap_flow.utils.data","cellmap_flow.utils.ds","cellmap_flow.utils.import_utils","cellmap_flow.utils","cellmap_flow.utils.load_py","cellmap_flow.utils.neuroglancer_utils","cellmap_flow.utils.scale_pyramid","cellmap_flow.utils.serilization_utils","cellmap_flow.utils.web_utils","API Reference","CLI Commands","&lt;no title&gt;","Custom Model","Installation","Installation","cellmap_flow","PostProcessors","Road Map","Python Scripts"],"titleterms":{"0":45,"advanc":[38,40],"affinitypostprocessor":44,"api":37,"app":9,"attribut":[0,1,3,4,6,7,8,9,11,14,15,19,21,23,24,25,26,27,28,29,32,33,34,35,36,40],"avail":38,"base":[38,44],"basic":[38,40],"bioimag":41,"blockwis":[0,1,2],"blockwise_processor":0,"bsub_util":26,"can":45,"cellmap_flow":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,43],"cellmap_flow_multipl":38,"cellmap_flow_yaml":38,"cellmap_model":15,"chain":38,"channelselect":44,"check":38,"class":[0,2,11,12,14,15,17,21,23,24,26,28,29,32,34,44],"cli":[1,3,4,5,6,7,8,38],"command":38,"config_util":27,"configur":38,"content":[0,1,2,3,4,6,7,8,9,11,12,14,15,17,18,19,21,23,24,25,26,27,28,29,30,32,33,34,35,36],"custom":[40,41],"d":29,"dacapo":41,"dashboard":[9,10],"data":28,"defaultpostprocessor":44,"detail":45,"entri":38,"entrypoint":38,"explan":46,"fly_model":4,"function":[0,1,3,4,6,7,8,9,14,18,19,21,23,24,26,27,28,29,30,32,33,34,35,36,40],"global":11,"goal":45,"have":45,"image_data_interfac":12,"import_util":30,"inferenc":14,"input_norm":21,"instal":[41,42],"io":41,"keyword":41,"labelpostprocessor":44,"lambdapostprocessor":44,"load_pi":32,"main":38,"map":45,"minimum":40,"model":[15,16,17,18,19,38,40,41],"model_app_config":17,"model_yaml":18,"modul":[0,1,3,4,6,7,8,9,11,12,14,15,17,18,19,21,23,24,25,26,27,28,29,30,32,33,34,35,36],"mortonsegmentationrelabel":44,"multipl":[38,41],"multiple_cli":6,"multiple_yaml_cli":7,"neuroglancer_util":33,"non":45,"norm":[20,21],"onc":41,"option":38,"output":46,"overview":[40,44,45],"packag":2,"point":38,"post":[22,23],"postprocessor":[23,44],"prerequisit":46,"process":40,"python":46,"pytorch":40,"refer":37,"requir":40,"road":45,"run":[19,41],"scale_pyramid":34,"script":[40,41,46],"serilization_util":35,"server":[24,38],"server_cli":8,"simpleblockwisemerg":44,"subclass":44,"submodul":[2,5,10,13,16,20,22,31],"syntax":38,"templat":40,"tensorflow":[40,41],"test":40,"thresholdpostprocessor":44,"tmp":25,"us":41,"usag":[40,41],"util":[26,27,28,29,30,31,32,33,34,35,36,38],"v1":45,"web_util":36,"yaml":38,"your":40}})