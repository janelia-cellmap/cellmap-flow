Search.setIndex({"alltitles":{"API Reference":[[35,null]],"Advanced Options":[[36,"advanced-options"]],"Advanced Usage: Custom Process Function (TensorFlow)":[[38,"advanced-usage-custom-process-function-tensorflow"]],"AffinityPostprocessor":[[42,"affinitypostprocessor"]],"Attributes":[[0,"attributes"],[1,"attributes"],[3,"attributes"],[4,"attributes"],[6,"attributes"],[7,"attributes"],[8,"attributes"],[9,"attributes"],[11,"attributes"],[14,"attributes"],[15,"attributes"],[19,"attributes"],[21,"attributes"],[23,"attributes"],[24,"attributes"],[25,"attributes"],[26,"attributes"],[27,"attributes"],[28,"attributes"],[31,"attributes"],[32,"attributes"],[33,"attributes"],[34,"attributes"]],"Available Entry points":[[36,"available-entry-points"]],"Base Class":[[42,"base-class"]],"Basic Script Template (PyTorch)":[[38,"basic-script-template-pytorch"]],"Basic Syntax":[[36,"basic-syntax"]],"CLI Commands":[[36,null]],"Can Have":[[43,"can-have"]],"Chaining Multiple Models (cellmap_flow_multiple)":[[36,"chaining-multiple-models-cellmap-flow-multiple"]],"ChannelSelection":[[42,"channelselection"]],"Classes":[[0,"classes"],[2,"classes"],[11,"classes"],[12,"classes"],[14,"classes"],[15,"classes"],[17,"classes"],[21,"classes"],[23,"classes"],[24,"classes"],[25,"classes"],[27,"classes"],[28,"classes"],[31,"classes"],[33,"classes"]],"Custom Model":[[38,null]],"DefaultPostprocessor":[[42,"defaultpostprocessor"]],"Detailed Road Map":[[43,"detailed-road-map"]],"Explanation":[[44,"explanation"]],"Functions":[[0,"functions"],[1,"functions"],[3,"functions"],[4,"functions"],[6,"functions"],[7,"functions"],[8,"functions"],[9,"functions"],[14,"functions"],[18,"functions"],[19,"functions"],[21,"functions"],[23,"functions"],[24,"functions"],[25,"functions"],[26,"functions"],[27,"functions"],[28,"functions"],[29,"functions"],[31,"functions"],[32,"functions"],[33,"functions"],[34,"functions"]],"Installation":[[39,null],[40,null]],"LabelPostprocessor":[[42,"labelpostprocessor"]],"LambdaPostprocessor":[[42,"lambdapostprocessor"]],"Main CLI Entrypoint (cellmap_flow)":[[36,"main-cli-entrypoint-cellmap-flow"]],"Minimum Requirements for Custom Scripts":[[38,"minimum-requirements-for-custom-scripts"]],"Module Contents":[[0,"module-contents"],[1,"module-contents"],[3,"module-contents"],[4,"module-contents"],[6,"module-contents"],[7,"module-contents"],[8,"module-contents"],[9,"module-contents"],[11,"module-contents"],[12,"module-contents"],[14,"module-contents"],[15,"module-contents"],[17,"module-contents"],[18,"module-contents"],[19,"module-contents"],[21,"module-contents"],[23,"module-contents"],[24,"module-contents"],[25,"module-contents"],[26,"module-contents"],[27,"module-contents"],[28,"module-contents"],[29,"module-contents"],[31,"module-contents"],[32,"module-contents"],[33,"module-contents"],[34,"module-contents"]],"MortonSegmentationRelabeling":[[42,"mortonsegmentationrelabeling"]],"Non-Goals (for v1.0)":[[43,"non-goals-for-v1-0"]],"Output":[[44,"output"]],"Overview":[[38,"overview"],[42,"overview"],[43,"overview"]],"Package Contents":[[2,"package-contents"]],"PostProcessor Subclasses":[[42,"postprocessor-subclasses"]],"PostProcessors":[[42,null]],"Prerequisites":[[44,"prerequisites"]],"Python Scripts":[[44,null]],"Required Attributes":[[38,"required-attributes"]],"Road Map":[[43,null]],"Run multiple model at once:":[[39,"run-multiple-model-at-once"]],"Script":[[44,"script"]],"Script keywords:":[[39,"script-keywords"]],"Server Check Utility":[[36,"server-check-utility"]],"SimpleBlockwiseMerger":[[42,"simpleblockwisemerger"]],"Submodules":[[2,"submodules"],[5,"submodules"],[10,"submodules"],[13,"submodules"],[16,"submodules"],[20,"submodules"],[22,"submodules"],[30,"submodules"]],"Testing Your Script":[[38,"testing-your-script"]],"ThresholdPostprocessor":[[42,"thresholdpostprocessor"]],"Usage":[[39,"usage"]],"Using Dacapo model:":[[39,"using-dacapo-model"]],"Using TensorFlow model:":[[39,"using-tensorflow-model"]],"Using bioimage-io model:":[[39,"using-bioimage-io-model"]],"Using custom script:":[[39,"using-custom-script"]],"YAML-Based Configuration (cellmap_flow_yaml)":[[36,"yaml-based-configuration-cellmap-flow-yaml"]],"cellmap_flow":[[13,null],[41,null]],"cellmap_flow.blockwise":[[2,null]],"cellmap_flow.blockwise.blockwise_processor":[[0,null]],"cellmap_flow.blockwise.cli":[[1,null]],"cellmap_flow.cli":[[5,null]],"cellmap_flow.cli.cli":[[3,null]],"cellmap_flow.cli.fly_model":[[4,null]],"cellmap_flow.cli.multiple_cli":[[6,null]],"cellmap_flow.cli.multiple_yaml_cli":[[7,null]],"cellmap_flow.cli.server_cli":[[8,null]],"cellmap_flow.dashboard":[[10,null]],"cellmap_flow.dashboard.app":[[9,null]],"cellmap_flow.globals":[[11,null]],"cellmap_flow.image_data_interface":[[12,null]],"cellmap_flow.inferencer":[[14,null]],"cellmap_flow.models":[[16,null]],"cellmap_flow.models.cellmap_models":[[15,null]],"cellmap_flow.models.model_app_config":[[17,null]],"cellmap_flow.models.model_yaml":[[18,null]],"cellmap_flow.models.run":[[19,null]],"cellmap_flow.norm":[[20,null]],"cellmap_flow.norm.input_normalize":[[21,null]],"cellmap_flow.post":[[22,null]],"cellmap_flow.post.postprocessors":[[23,null]],"cellmap_flow.server":[[24,null]],"cellmap_flow.utils":[[30,null]],"cellmap_flow.utils.bsub_utils":[[25,null]],"cellmap_flow.utils.config_utils":[[26,null]],"cellmap_flow.utils.data":[[27,null]],"cellmap_flow.utils.ds":[[28,null]],"cellmap_flow.utils.import_utils":[[29,null]],"cellmap_flow.utils.load_py":[[31,null]],"cellmap_flow.utils.neuroglancer_utils":[[32,null]],"cellmap_flow.utils.scale_pyramid":[[33,null]],"cellmap_flow.utils.web_utils":[[34,null]]},"docnames":["autoapi/cellmap_flow/blockwise/blockwise_processor/index","autoapi/cellmap_flow/blockwise/cli/index","autoapi/cellmap_flow/blockwise/index","autoapi/cellmap_flow/cli/cli/index","autoapi/cellmap_flow/cli/fly_model/index","autoapi/cellmap_flow/cli/index","autoapi/cellmap_flow/cli/multiple_cli/index","autoapi/cellmap_flow/cli/multiple_yaml_cli/index","autoapi/cellmap_flow/cli/server_cli/index","autoapi/cellmap_flow/dashboard/app/index","autoapi/cellmap_flow/dashboard/index","autoapi/cellmap_flow/globals/index","autoapi/cellmap_flow/image_data_interface/index","autoapi/cellmap_flow/index","autoapi/cellmap_flow/inferencer/index","autoapi/cellmap_flow/models/cellmap_models/index","autoapi/cellmap_flow/models/index","autoapi/cellmap_flow/models/model_app_config/index","autoapi/cellmap_flow/models/model_yaml/index","autoapi/cellmap_flow/models/run/index","autoapi/cellmap_flow/norm/index","autoapi/cellmap_flow/norm/input_normalize/index","autoapi/cellmap_flow/post/index","autoapi/cellmap_flow/post/postprocessors/index","autoapi/cellmap_flow/server/index","autoapi/cellmap_flow/utils/bsub_utils/index","autoapi/cellmap_flow/utils/config_utils/index","autoapi/cellmap_flow/utils/data/index","autoapi/cellmap_flow/utils/ds/index","autoapi/cellmap_flow/utils/import_utils/index","autoapi/cellmap_flow/utils/index","autoapi/cellmap_flow/utils/load_py/index","autoapi/cellmap_flow/utils/neuroglancer_utils/index","autoapi/cellmap_flow/utils/scale_pyramid/index","autoapi/cellmap_flow/utils/web_utils/index","autoapi/index","cli_command","conf","custom_script","index","install","modules","post","roadmap","scripts"],"envversion":{"nbsphinx":4,"sphinx":65,"sphinx.domains.c":3,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":9,"sphinx.domains.index":1,"sphinx.domains.javascript":3,"sphinx.domains.math":2,"sphinx.domains.python":4,"sphinx.domains.rst":2,"sphinx.domains.std":2},"filenames":["autoapi/cellmap_flow/blockwise/blockwise_processor/index.rst","autoapi/cellmap_flow/blockwise/cli/index.rst","autoapi/cellmap_flow/blockwise/index.rst","autoapi/cellmap_flow/cli/cli/index.rst","autoapi/cellmap_flow/cli/fly_model/index.rst","autoapi/cellmap_flow/cli/index.rst","autoapi/cellmap_flow/cli/multiple_cli/index.rst","autoapi/cellmap_flow/cli/multiple_yaml_cli/index.rst","autoapi/cellmap_flow/cli/server_cli/index.rst","autoapi/cellmap_flow/dashboard/app/index.rst","autoapi/cellmap_flow/dashboard/index.rst","autoapi/cellmap_flow/globals/index.rst","autoapi/cellmap_flow/image_data_interface/index.rst","autoapi/cellmap_flow/index.rst","autoapi/cellmap_flow/inferencer/index.rst","autoapi/cellmap_flow/models/cellmap_models/index.rst","autoapi/cellmap_flow/models/index.rst","autoapi/cellmap_flow/models/model_app_config/index.rst","autoapi/cellmap_flow/models/model_yaml/index.rst","autoapi/cellmap_flow/models/run/index.rst","autoapi/cellmap_flow/norm/index.rst","autoapi/cellmap_flow/norm/input_normalize/index.rst","autoapi/cellmap_flow/post/index.rst","autoapi/cellmap_flow/post/postprocessors/index.rst","autoapi/cellmap_flow/server/index.rst","autoapi/cellmap_flow/utils/bsub_utils/index.rst","autoapi/cellmap_flow/utils/config_utils/index.rst","autoapi/cellmap_flow/utils/data/index.rst","autoapi/cellmap_flow/utils/ds/index.rst","autoapi/cellmap_flow/utils/import_utils/index.rst","autoapi/cellmap_flow/utils/index.rst","autoapi/cellmap_flow/utils/load_py/index.rst","autoapi/cellmap_flow/utils/neuroglancer_utils/index.rst","autoapi/cellmap_flow/utils/scale_pyramid/index.rst","autoapi/cellmap_flow/utils/web_utils/index.rst","autoapi/index.rst","cli_command.rst","conf.py","custom_script.rst","index.rst","install.rst","modules.rst","post.rst","roadmap.rst","scripts.rst"],"indexentries":{"__call__() (postprocessor method)":[[42,"PostProcessor.__call__",false]],"__class_vars__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__class_vars__",false]],"__private_attributes__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__private_attributes__",false]],"__pydantic_complete__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_complete__",false]],"__pydantic_computed_fields__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_computed_fields__",false]],"__pydantic_core_schema__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_core_schema__",false]],"__pydantic_custom_init__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_custom_init__",false]],"__pydantic_decorators__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_decorators__",false]],"__pydantic_extra__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_extra__",false]],"__pydantic_fields__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_fields__",false]],"__pydantic_fields_set__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_fields_set__",false]],"__pydantic_generic_metadata__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_generic_metadata__",false]],"__pydantic_parent_namespace__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_parent_namespace__",false]],"__pydantic_post_init__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_post_init__",false]],"__pydantic_private__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_private__",false]],"__pydantic_root_model__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_root_model__",false]],"__pydantic_serializer__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_serializer__",false]],"__pydantic_validator__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__pydantic_validator__",false]],"__signature__ (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.__signature__",false]],"_process() (postprocessor method)":[[42,"PostProcessor._process",false]],"access_parent() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.access_parent",false]],"activation (cellmap_flow.norm.input_normalize.euclideandistance attribute)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance.activation",false]],"affinitypostprocessor (built-in class)":[[42,"AffinityPostprocessor",false]],"affinitypostprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor",false]],"analyze_script() (in module cellmap_flow.utils.load_py)":[[31,"cellmap_flow.utils.load_py.analyze_script",false]],"anisotropy (cellmap_flow.norm.input_normalize.euclideandistance attribute)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance.anisotropy",false]],"app (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.app",false]],"app (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.app",false]],"appinput (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.AppInput",false]],"apply_norms() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.apply_norms",false]],"apply_postprocess() (in module cellmap_flow.inferencer)":[[14,"cellmap_flow.inferencer.apply_postprocess",false]],"args_key (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.ARGS_KEY",false]],"author (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.author",false]],"bias (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.bias",false]],"bias (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.bias",false]],"bioimage() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.bioimage",false]],"bioimage() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.bioimage",false]],"biomodelconfig (class in cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.BioModelConfig",false]],"black_border (cellmap_flow.norm.input_normalize.euclideandistance attribute)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance.black_border",false]],"block_shape (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.block_shape",false]],"block_shape (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.block_shape",false]],"block_shape (cellmap_flow.server.dummyconfig attribute)":[[24,"cellmap_flow.server.DummyConfig.block_shape",false]],"build_models() (in module cellmap_flow.utils.config_utils)":[[26,"cellmap_flow.utils.config_utils.build_models",false]],"calculate_equivalences() (cellmap_flow.post.postprocessors.simpleblockwisemerger method)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.calculate_equivalences",false]],"cellmap_flow":[[13,"module-cellmap_flow",false]],"cellmap_flow.blockwise":[[2,"module-cellmap_flow.blockwise",false]],"cellmap_flow.blockwise.blockwise_processor":[[0,"module-cellmap_flow.blockwise.blockwise_processor",false]],"cellmap_flow.blockwise.cli":[[1,"module-cellmap_flow.blockwise.cli",false]],"cellmap_flow.cli":[[5,"module-cellmap_flow.cli",false]],"cellmap_flow.cli.cli":[[3,"module-cellmap_flow.cli.cli",false]],"cellmap_flow.cli.fly_model":[[4,"module-cellmap_flow.cli.fly_model",false]],"cellmap_flow.cli.multiple_cli":[[6,"module-cellmap_flow.cli.multiple_cli",false]],"cellmap_flow.cli.multiple_yaml_cli":[[7,"module-cellmap_flow.cli.multiple_yaml_cli",false]],"cellmap_flow.cli.server_cli":[[8,"module-cellmap_flow.cli.server_cli",false]],"cellmap_flow.dashboard":[[10,"module-cellmap_flow.dashboard",false]],"cellmap_flow.dashboard.app":[[9,"module-cellmap_flow.dashboard.app",false]],"cellmap_flow.globals":[[11,"module-cellmap_flow.globals",false]],"cellmap_flow.image_data_interface":[[12,"module-cellmap_flow.image_data_interface",false]],"cellmap_flow.inferencer":[[14,"module-cellmap_flow.inferencer",false]],"cellmap_flow.models":[[16,"module-cellmap_flow.models",false]],"cellmap_flow.models.cellmap_models":[[15,"module-cellmap_flow.models.cellmap_models",false]],"cellmap_flow.models.model_app_config":[[17,"module-cellmap_flow.models.model_app_config",false]],"cellmap_flow.models.model_yaml":[[18,"module-cellmap_flow.models.model_yaml",false]],"cellmap_flow.models.run":[[19,"module-cellmap_flow.models.run",false]],"cellmap_flow.norm":[[20,"module-cellmap_flow.norm",false]],"cellmap_flow.norm.input_normalize":[[21,"module-cellmap_flow.norm.input_normalize",false]],"cellmap_flow.post":[[22,"module-cellmap_flow.post",false]],"cellmap_flow.post.postprocessors":[[23,"module-cellmap_flow.post.postprocessors",false]],"cellmap_flow.server":[[24,"module-cellmap_flow.server",false]],"cellmap_flow.utils":[[30,"module-cellmap_flow.utils",false]],"cellmap_flow.utils.bsub_utils":[[25,"module-cellmap_flow.utils.bsub_utils",false]],"cellmap_flow.utils.config_utils":[[26,"module-cellmap_flow.utils.config_utils",false]],"cellmap_flow.utils.data":[[27,"module-cellmap_flow.utils.data",false]],"cellmap_flow.utils.ds":[[28,"module-cellmap_flow.utils.ds",false]],"cellmap_flow.utils.import_utils":[[29,"module-cellmap_flow.utils.import_utils",false]],"cellmap_flow.utils.load_py":[[31,"module-cellmap_flow.utils.load_py",false]],"cellmap_flow.utils.neuroglancer_utils":[[32,"module-cellmap_flow.utils.neuroglancer_utils",false]],"cellmap_flow.utils.scale_pyramid":[[33,"module-cellmap_flow.utils.scale_pyramid",false]],"cellmap_flow.utils.web_utils":[[34,"module-cellmap_flow.utils.web_utils",false]],"cellmap_model (cellmap_flow.utils.data.cellmapmodelconfig attribute)":[[27,"cellmap_flow.utils.data.CellMapModelConfig.cellmap_model",false]],"cellmap_model() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.cellmap_model",false]],"cellmap_model() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.cellmap_model",false]],"cellmapflowblockwiseprocessor (class in cellmap_flow.blockwise)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor",false]],"cellmapflowblockwiseprocessor (class in cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor",false]],"cellmapflowserver (class in cellmap_flow.server)":[[24,"cellmap_flow.server.CellMapFlowServer",false]],"cellmapmodel (class in cellmap_flow.models.cellmap_models)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel",false]],"cellmapmodelconfig (class in cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.CellMapModelConfig",false]],"cellmapmodels (class in cellmap_flow.models.cellmap_models)":[[15,"cellmap_flow.models.cellmap_models.CellmapModels",false]],"channel (cellmap_flow.post.postprocessors.labelpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.LabelPostprocessor.channel",false]],"channel (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling attribute)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.channel",false]],"channel (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.channel",false]],"channels (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.channels",false]],"channels (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.channels",false]],"channels (cellmap_flow.post.postprocessors.channelselection attribute)":[[23,"cellmap_flow.post.postprocessors.ChannelSelection.channels",false]],"channels (cellmap_flow.utils.data.flymodelconfig attribute)":[[27,"cellmap_flow.utils.data.FlyModelConfig.channels",false]],"channels_names (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.channels_names",false]],"channelselection (built-in class)":[[42,"ChannelSelection",false]],"channelselection (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.ChannelSelection",false]],"charge_group (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.charge_group",false]],"charge_group (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.charge_group",false]],"charge_group (in module cellmap_flow.cli.fly_model)":[[4,"cellmap_flow.cli.fly_model.charge_group",false]],"charge_group_arg (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.charge_group_arg",false]],"check_config() (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.check_config",false]],"check_dependencies() (in module cellmap_flow.utils.import_utils)":[[29,"cellmap_flow.utils.import_utils.check_dependencies",false]],"check_for_attrs_multiscale() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.check_for_attrs_multiscale",false]],"check_for_multiscale() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.check_for_multiscale",false]],"check_for_offset() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.check_for_offset",false]],"check_for_units() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.check_for_units",false]],"check_for_voxel_size() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.check_for_voxel_size",false]],"chpoint_path (cellmap_flow.utils.data.flymodelconfig attribute)":[[27,"cellmap_flow.utils.data.FlyModelConfig.chpoint_path",false]],"chunk_encoder (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.chunk_encoder",false]],"chunk_slice_position_to_coords_id_dict (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.chunk_slice_position_to_coords_id_dict",false]],"cleanup() (in module cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.cleanup",false]],"cli() (in module cellmap_flow.blockwise.cli)":[[1,"cellmap_flow.blockwise.cli.cli",false]],"cli() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.cli",false]],"cli() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.cli",false]],"client() (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor method)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.client",false]],"client() (cellmap_flow.blockwise.cellmapflowblockwiseprocessor method)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.client",false]],"clip_max (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.clip_max",false]],"clip_min (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.clip_min",false]],"command (cellmap_flow.utils.data.biomodelconfig property)":[[27,"cellmap_flow.utils.data.BioModelConfig.command",false]],"command (cellmap_flow.utils.data.cellmapmodelconfig property)":[[27,"cellmap_flow.utils.data.CellMapModelConfig.command",false]],"command (cellmap_flow.utils.data.dacapomodelconfig property)":[[27,"cellmap_flow.utils.data.DaCapoModelConfig.command",false]],"command (cellmap_flow.utils.data.flymodelconfig property)":[[27,"cellmap_flow.utils.data.FlyModelConfig.command",false]],"command (cellmap_flow.utils.data.scriptmodelconfig property)":[[27,"cellmap_flow.utils.data.ScriptModelConfig.command",false]],"concat_along_c() (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.concat_along_c",false]],"concurrency_limit (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.concurrency_limit",false]],"config (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.config",false]],"config (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.config",false]],"config (cellmap_flow.utils.data.modelconfig property)":[[27,"cellmap_flow.utils.data.ModelConfig.config",false]],"config (class in cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.Config",false]],"config (class in cellmap_flow.utils.load_py)":[[31,"cellmap_flow.utils.load_py.Config",false]],"create_and_run_app() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.create_and_run_app",false]],"custom_fill_value (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.custom_fill_value",false]],"customcodefolder (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.CustomCodeFolder",false]],"dacapo() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.dacapo",false]],"dacapo() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.dacapo",false]],"dacapomodelconfig (class in cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.DaCapoModelConfig",false]],"data_args (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.data_args",false]],"decode_to_json() (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.decode_to_json",false]],"default_server_queue (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.DEFAULT_SERVER_QUEUE",false]],"default_server_queue (in module cellmap_flow.utils.config_utils)":[[26,"cellmap_flow.utils.config_utils.DEFAULT_SERVER_QUEUE",false]],"default_value (cellmap_flow.models.model_app_config.fileinput attribute)":[[17,"cellmap_flow.models.model_app_config.FileInput.default_value",false]],"default_value (cellmap_flow.models.model_app_config.listinput attribute)":[[17,"cellmap_flow.models.model_app_config.ListInput.default_value",false]],"default_value (cellmap_flow.models.model_app_config.selectinput attribute)":[[17,"cellmap_flow.models.model_app_config.SelectInput.default_value",false]],"default_value (cellmap_flow.models.model_app_config.textinput attribute)":[[17,"cellmap_flow.models.model_app_config.TextInput.default_value",false]],"defaultpostprocessor (built-in class)":[[42,"DefaultPostprocessor",false]],"defaultpostprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor",false]],"delete() (cellmap_flow.globals.flow class method)":[[11,"cellmap_flow.globals.Flow.delete",false]],"description (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.description",false]],"description (cellmap_flow.models.model_app_config.fileinput attribute)":[[17,"cellmap_flow.models.model_app_config.FileInput.description",false]],"description (cellmap_flow.models.model_app_config.listinput attribute)":[[17,"cellmap_flow.models.model_app_config.ListInput.description",false]],"description (cellmap_flow.models.model_app_config.selectinput attribute)":[[17,"cellmap_flow.models.model_app_config.SelectInput.description",false]],"description (cellmap_flow.models.model_app_config.textinput attribute)":[[17,"cellmap_flow.models.model_app_config.TextInput.description",false]],"dilate (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.Dilate",false]],"dims (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid.dims",false]],"disallowed_functions (in module cellmap_flow.utils.load_py)":[[31,"cellmap_flow.utils.load_py.DISALLOWED_FUNCTIONS",false]],"disallowed_imports (in module cellmap_flow.utils.load_py)":[[31,"cellmap_flow.utils.load_py.DISALLOWED_IMPORTS",false]],"dtype (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.dtype",false]],"dtype (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.euclideandistance property)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.inputnormalizer property)":[[21,"cellmap_flow.norm.input_normalize.InputNormalizer.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.lambdanormalizer property)":[[21,"cellmap_flow.norm.input_normalize.LambdaNormalizer.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.minmaxnormalizer property)":[[21,"cellmap_flow.norm.input_normalize.MinMaxNormalizer.dtype",false]],"dtype (cellmap_flow.norm.input_normalize.zscorenormalizer property)":[[21,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.dtype",false]],"dtype (cellmap_flow.post.postprocessors.affinitypostprocessor property)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.defaultpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.labelpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.LabelPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.lambdapostprocessor property)":[[23,"cellmap_flow.post.postprocessors.LambdaPostprocessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling property)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.dtype",false]],"dtype (cellmap_flow.post.postprocessors.postprocessor property)":[[23,"cellmap_flow.post.postprocessors.PostProcessor.dtype",false]],"dtype (cellmap_flow.post.postprocessors.simpleblockwisemerger property)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.dtype",false]],"dtype (cellmap_flow.post.postprocessors.thresholdpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.ThresholdPostprocessor.dtype",false]],"dtype (postprocessor attribute)":[[42,"PostProcessor.dtype",false]],"dummyconfig (class in cellmap_flow.server)":[[24,"cellmap_flow.server.DummyConfig",false]],"elemns (cellmap_flow.models.model_app_config.mymodelconfig attribute)":[[17,"cellmap_flow.models.model_app_config.MyModelConfig.elemns",false]],"encode_to_str() (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.encode_to_str",false]],"ends_with_scale() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.ends_with_scale",false]],"equivalences (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.equivalences",false]],"euclideandistance (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance",false]],"expression (cellmap_flow.norm.input_normalize.lambdanormalizer attribute)":[[21,"cellmap_flow.norm.input_normalize.LambdaNormalizer.expression",false]],"expression (cellmap_flow.post.postprocessors.lambdapostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.LambdaPostprocessor.expression",false]],"extra_args (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.extra_args",false]],"face_erosion_iterations (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.face_erosion_iterations",false]],"fileinput (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.FileInput",false]],"filetype (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.filetype",false]],"find_target_scale() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.find_target_scale",false]],"flow (class in cellmap_flow.globals)":[[11,"cellmap_flow.globals.Flow",false]],"fly() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.fly",false]],"flymodelconfig (class in cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.FlyModelConfig",false]],"folder_path (cellmap_flow.models.cellmap_models.cellmapmodel attribute)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.folder_path",false]],"format_output_bioimage() (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.format_output_bioimage",false]],"framework (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.framework",false]],"g (in module cellmap_flow.globals)":[[11,"cellmap_flow.globals.g",false]],"generate_neuroglancer_url() (in module cellmap_flow.utils.neuroglancer_utils)":[[32,"cellmap_flow.utils.neuroglancer_utils.generate_neuroglancer_url",false]],"get_axes_and_dims() (cellmap_flow.utils.data.biomodelconfig method)":[[27,"cellmap_flow.utils.data.BioModelConfig.get_axes_and_dims",false]],"get_dacapo_channels() (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.get_dacapo_channels",false]],"get_dacapo_run_model() (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.get_dacapo_run_model",false]],"get_ds_info() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.get_ds_info",false]],"get_encoded_subvolume() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid.get_encoded_subvolume",false]],"get_free_port() (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.get_free_port",false]],"get_host_from_stdout() (in module cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.get_host_from_stdout",false]],"get_input_normalizers() (in module cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.get_input_normalizers",false]],"get_input_slicer() (cellmap_flow.utils.data.biomodelconfig method)":[[27,"cellmap_flow.utils.data.BioModelConfig.get_input_slicer",false]],"get_normalizations() (in module cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.get_normalizations",false]],"get_norms_post_args() (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.get_norms_post_args",false]],"get_object_mesh() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid.get_object_mesh",false]],"get_output_dtype() (cellmap_flow.globals.flow method)":[[11,"cellmap_flow.globals.Flow.get_output_dtype",false]],"get_postprocessors() (in module cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.get_postprocessors",false]],"get_postprocessors_list() (in module cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.get_postprocessors_list",false]],"get_process_dataset() (in module cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.get_process_dataset",false]],"get_process_dataset() (in module cellmap_flow.server)":[[24,"cellmap_flow.server.get_process_dataset",false]],"get_public_ip() (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.get_public_ip",false]],"get_raw_layer() (in module cellmap_flow.utils.scale_pyramid)":[[33,"cellmap_flow.utils.scale_pyramid.get_raw_layer",false]],"get_scale_info() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.get_scale_info",false]],"get_spatial_dims() (cellmap_flow.utils.data.biomodelconfig method)":[[27,"cellmap_flow.utils.data.BioModelConfig.get_spatial_dims",false]],"get_url() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.get_url",false]],"host (cellmap_flow.utils.bsub_utils.job attribute)":[[25,"cellmap_flow.utils.bsub_utils.Job.host",false]],"idi_raw (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.idi_raw",false]],"idi_raw (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.idi_raw",false]],"idi_raw (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.idi_raw",false]],"imagedatainterface (class in cellmap_flow.image_data_interface)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface",false]],"in_channels (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.in_channels",false]],"index() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.index",false]],"inference_input_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.inference_input_shape",false]],"inference_output_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.inference_output_shape",false]],"inference_server (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.INFERENCE_SERVER",false]],"inferencer (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.inferencer",false]],"inferencer (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.inferencer",false]],"inferencer (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.inferencer",false]],"inferencer (class in cellmap_flow.inferencer)":[[14,"cellmap_flow.inferencer.Inferencer",false]],"info() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid.info",false]],"input_norm_dict_key (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.INPUT_NORM_DICT_KEY",false]],"input_norms (in module cellmap_flow.globals)":[[11,"cellmap_flow.globals.input_norms",false]],"input_path (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.input_path",false]],"input_path (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.input_path",false]],"input_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.input_shape",false]],"input_size (cellmap_flow.utils.data.flymodelconfig attribute)":[[27,"cellmap_flow.utils.data.FlyModelConfig.input_size",false]],"input_voxel_size (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.input_voxel_size",false]],"input_voxel_size (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.input_voxel_size",false]],"input_voxel_size (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.input_voxel_size",false]],"input_voxel_size (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.input_voxel_size",false]],"input_voxel_size (cellmap_flow.utils.data.flymodelconfig attribute)":[[27,"cellmap_flow.utils.data.FlyModelConfig.input_voxel_size",false]],"inputnormalizer (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.InputNormalizer",false]],"invalidate() (cellmap_flow.utils.scale_pyramid.scalepyramid method)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid.invalidate",false]],"ip_pattern (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.IP_PATTERN",false]],"is_bsub_available() (in module cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.is_bsub_available",false]],"is_output_segmentation() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.is_output_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.affinitypostprocessor property)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.defaultpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.labelpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.LabelPostprocessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling property)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.postprocessor property)":[[23,"cellmap_flow.post.postprocessors.PostProcessor.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.simpleblockwisemerger property)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.is_segmentation",false]],"is_segmentation (cellmap_flow.post.postprocessors.thresholdpostprocessor property)":[[23,"cellmap_flow.post.postprocessors.ThresholdPostprocessor.is_segmentation",false]],"is_segmentation (postprocessor attribute)":[[42,"PostProcessor.is_segmentation",false]],"iteration (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.iteration",false]],"iteration (cellmap_flow.utils.data.dacapomodelconfig attribute)":[[27,"cellmap_flow.utils.data.DaCapoModelConfig.iteration",false]],"job (class in cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.Job",false]],"job_id (cellmap_flow.utils.bsub_utils.job attribute)":[[25,"cellmap_flow.utils.bsub_utils.Job.job_id",false]],"json_str (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.json_str",false]],"json_str (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.json_str",false]],"keys_to_skip (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.keys_to_skip",false]],"kill() (cellmap_flow.utils.bsub_utils.job method)":[[25,"cellmap_flow.utils.bsub_utils.Job.kill",false]],"kill_n_remove_from_neuroglancer() (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.kill_n_remove_from_neuroglancer",false]],"labelpostprocessor (built-in class)":[[42,"LabelPostprocessor",false]],"labelpostprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.LabelPostprocessor",false]],"lambdanormalizer (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.LambdaNormalizer",false]],"lambdapostprocessor (built-in class)":[[42,"LambdaPostprocessor",false]],"lambdapostprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.LambdaPostprocessor",false]],"lazynormalization (class in cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.LazyNormalization",false]],"list_cls_to_dict() (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.list_cls_to_dict",false]],"list_models() (cellmap_flow.models.cellmap_models.cellmapmodels method)":[[15,"cellmap_flow.models.cellmap_models.CellmapModels.list_models",false]],"listinput (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.ListInput",false]],"load_config() (in module cellmap_flow.utils.config_utils)":[[26,"cellmap_flow.utils.config_utils.load_config",false]],"load_eval_model() (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.load_eval_model",false]],"load_input_information() (cellmap_flow.utils.data.biomodelconfig method)":[[27,"cellmap_flow.utils.data.BioModelConfig.load_input_information",false]],"load_model_paths() (in module cellmap_flow.models.model_yaml)":[[18,"cellmap_flow.models.model_yaml.load_model_paths",false]],"load_output_information() (cellmap_flow.utils.data.biomodelconfig method)":[[27,"cellmap_flow.utils.data.BioModelConfig.load_output_information",false]],"load_safe_config() (in module cellmap_flow.utils.load_py)":[[31,"cellmap_flow.utils.load_py.load_safe_config",false]],"logger (in module cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.logger",false]],"logger (in module cellmap_flow.blockwise.cli)":[[1,"cellmap_flow.blockwise.cli.logger",false]],"logger (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.logger",false],[3,"id0",false]],"logger (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.logger",false]],"logger (in module cellmap_flow.cli.multiple_yaml_cli)":[[7,"cellmap_flow.cli.multiple_yaml_cli.logger",false]],"logger (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.logger",false]],"logger (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.logger",false]],"logger (in module cellmap_flow.inferencer)":[[14,"cellmap_flow.inferencer.logger",false]],"logger (in module cellmap_flow.models.run)":[[19,"cellmap_flow.models.run.logger",false]],"logger (in module cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.logger",false]],"logger (in module cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.logger",false]],"logger (in module cellmap_flow.server)":[[24,"cellmap_flow.server.logger",false]],"logger (in module cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.logger",false],[25,"id0",false]],"logger (in module cellmap_flow.utils.config_utils)":[[26,"cellmap_flow.utils.config_utils.logger",false]],"logger (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.logger",false]],"logger (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.logger",false]],"logger (in module cellmap_flow.utils.neuroglancer_utils)":[[32,"cellmap_flow.utils.neuroglancer_utils.logger",false]],"logger (in module cellmap_flow.utils.scale_pyramid)":[[33,"cellmap_flow.utils.scale_pyramid.logger",false]],"main() (in module cellmap_flow.cli.fly_model)":[[4,"cellmap_flow.cli.fly_model.main",false]],"main() (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.main",false]],"main() (in module cellmap_flow.cli.multiple_yaml_cli)":[[7,"cellmap_flow.cli.multiple_yaml_cli.main",false]],"max_value (cellmap_flow.norm.input_normalize.minmaxnormalizer attribute)":[[21,"cellmap_flow.norm.input_normalize.MinMaxNormalizer.max_value",false]],"max_voxel_size (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid.max_voxel_size",false]],"mean (cellmap_flow.norm.input_normalize.zscorenormalizer attribute)":[[21,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.mean",false]],"metadata (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.metadata",false]],"min_value (cellmap_flow.norm.input_normalize.minmaxnormalizer attribute)":[[21,"cellmap_flow.norm.input_normalize.MinMaxNormalizer.min_value",false]],"min_voxel_size (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid.min_voxel_size",false]],"minmaxnormalizer (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.MinMaxNormalizer",false]],"model (cellmap_flow.utils.data.flymodelconfig property)":[[27,"cellmap_flow.utils.data.FlyModelConfig.model",false]],"model_config (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.model_config",false]],"model_config (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.model_config",false]],"model_config (cellmap_flow.inferencer.inferencer attribute)":[[14,"cellmap_flow.inferencer.Inferencer.model_config",false]],"model_name (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.model_name",false]],"model_name (cellmap_flow.utils.bsub_utils.job attribute)":[[25,"cellmap_flow.utils.bsub_utils.Job.model_name",false]],"model_name (cellmap_flow.utils.data.biomodelconfig attribute)":[[27,"cellmap_flow.utils.data.BioModelConfig.model_name",false]],"model_type (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.model_type",false]],"modelconfig (class in cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.ModelConfig",false]],"modeldashboardconfig (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.ModelDashboardConfig",false]],"modelmetadata (class in cellmap_flow.models.cellmap_models)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata",false]],"module":[[0,"module-cellmap_flow.blockwise.blockwise_processor",false],[1,"module-cellmap_flow.blockwise.cli",false],[2,"module-cellmap_flow.blockwise",false],[3,"module-cellmap_flow.cli.cli",false],[4,"module-cellmap_flow.cli.fly_model",false],[5,"module-cellmap_flow.cli",false],[6,"module-cellmap_flow.cli.multiple_cli",false],[7,"module-cellmap_flow.cli.multiple_yaml_cli",false],[8,"module-cellmap_flow.cli.server_cli",false],[9,"module-cellmap_flow.dashboard.app",false],[10,"module-cellmap_flow.dashboard",false],[11,"module-cellmap_flow.globals",false],[12,"module-cellmap_flow.image_data_interface",false],[13,"module-cellmap_flow",false],[14,"module-cellmap_flow.inferencer",false],[15,"module-cellmap_flow.models.cellmap_models",false],[16,"module-cellmap_flow.models",false],[17,"module-cellmap_flow.models.model_app_config",false],[18,"module-cellmap_flow.models.model_yaml",false],[19,"module-cellmap_flow.models.run",false],[20,"module-cellmap_flow.norm",false],[21,"module-cellmap_flow.norm.input_normalize",false],[22,"module-cellmap_flow.post",false],[23,"module-cellmap_flow.post.postprocessors",false],[24,"module-cellmap_flow.server",false],[25,"module-cellmap_flow.utils.bsub_utils",false],[26,"module-cellmap_flow.utils.config_utils",false],[27,"module-cellmap_flow.utils.data",false],[28,"module-cellmap_flow.utils.ds",false],[29,"module-cellmap_flow.utils.import_utils",false],[30,"module-cellmap_flow.utils",false],[31,"module-cellmap_flow.utils.load_py",false],[32,"module-cellmap_flow.utils.neuroglancer_utils",false],[33,"module-cellmap_flow.utils.scale_pyramid",false],[34,"module-cellmap_flow.utils.web_utils",false]],"mortonsegmentationrelabeling (built-in class)":[[42,"MortonSegmentationRelabeling",false]],"mortonsegmentationrelabeling (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling",false]],"multiplier (cellmap_flow.post.postprocessors.defaultpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.DefaultPostprocessor.multiplier",false]],"mymodelconfig (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.MyModelConfig",false]],"n5_block_shape (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.n5_block_shape",false]],"name (cellmap_flow.models.model_app_config.fileinput attribute)":[[17,"cellmap_flow.models.model_app_config.FileInput.name",false]],"name (cellmap_flow.models.model_app_config.listinput attribute)":[[17,"cellmap_flow.models.model_app_config.ListInput.name",false]],"name (cellmap_flow.models.model_app_config.selectinput attribute)":[[17,"cellmap_flow.models.model_app_config.SelectInput.name",false]],"name (cellmap_flow.models.model_app_config.textinput attribute)":[[17,"cellmap_flow.models.model_app_config.TextInput.name",false]],"name (cellmap_flow.utils.data.biomodelconfig attribute)":[[27,"cellmap_flow.utils.data.BioModelConfig.name",false]],"name (cellmap_flow.utils.data.cellmapmodelconfig attribute)":[[27,"cellmap_flow.utils.data.CellMapModelConfig.name",false]],"name (cellmap_flow.utils.data.dacapomodelconfig attribute)":[[27,"cellmap_flow.utils.data.DaCapoModelConfig.name",false]],"name (cellmap_flow.utils.data.flymodelconfig attribute)":[[27,"cellmap_flow.utils.data.FlyModelConfig.name",false]],"name (cellmap_flow.utils.data.scriptmodelconfig attribute)":[[27,"cellmap_flow.utils.data.ScriptModelConfig.name",false]],"name() (cellmap_flow.norm.input_normalize.inputnormalizer class method)":[[21,"cellmap_flow.norm.input_normalize.InputNormalizer.name",false]],"name() (cellmap_flow.post.postprocessors.postprocessor class method)":[[23,"cellmap_flow.post.postprocessors.PostProcessor.name",false]],"name() (postprocessor method)":[[42,"PostProcessor.name",false]],"neighborhood (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.neighborhood",false]],"neuroglancer_url (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.NEUROGLANCER_URL",false]],"normalize (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.normalize",false]],"normalize() (cellmap_flow.norm.input_normalize.inputnormalizer method)":[[21,"cellmap_flow.norm.input_normalize.InputNormalizer.normalize",false]],"normalize() (cellmap_flow.norm.input_normalize.zscorenormalizer method)":[[21,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.normalize",false]],"num_channels (cellmap_flow.post.postprocessors.affinitypostprocessor property)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.num_channels",false]],"num_channels (cellmap_flow.post.postprocessors.channelselection property)":[[23,"cellmap_flow.post.postprocessors.ChannelSelection.num_channels",false]],"num_previous_segments (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.num_previous_segments",false]],"num_previous_segments (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling attribute)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.num_previous_segments",false]],"offset (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.offset",false]],"onnx_model (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.onnx_model",false]],"open_ds_tensorstore() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.open_ds_tensorstore",false]],"optimize_model() (cellmap_flow.inferencer.inferencer method)":[[14,"cellmap_flow.inferencer.Inferencer.optimize_model",false]],"options (cellmap_flow.models.model_app_config.listinput attribute)":[[17,"cellmap_flow.models.model_app_config.ListInput.options",false]],"options (cellmap_flow.models.model_app_config.selectinput attribute)":[[17,"cellmap_flow.models.model_app_config.SelectInput.options",false]],"ort (in module cellmap_flow.models.cellmap_models)":[[15,"cellmap_flow.models.cellmap_models.ort",false]],"out_channels (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.out_channels",false]],"output_arrays (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_arrays",false]],"output_arrays (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_arrays",false]],"output_channels (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_channels",false]],"output_channels (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_channels",false]],"output_channels (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.output_channels",false]],"output_channels (cellmap_flow.server.dummyconfig attribute)":[[24,"cellmap_flow.server.DummyConfig.output_channels",false]],"output_dtype (cellmap_flow.utils.data.modelconfig property)":[[27,"cellmap_flow.utils.data.ModelConfig.output_dtype",false]],"output_path (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_path",false]],"output_path (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_path",false]],"output_shape (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.output_shape",false]],"output_size (cellmap_flow.utils.data.flymodelconfig attribute)":[[27,"cellmap_flow.utils.data.FlyModelConfig.output_size",false]],"output_voxel_size (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.output_voxel_size",false]],"output_voxel_size (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.output_voxel_size",false]],"output_voxel_size (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.output_voxel_size",false]],"output_voxel_size (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.output_voxel_size",false]],"output_voxel_size (cellmap_flow.server.dummyconfig attribute)":[[24,"cellmap_flow.server.DummyConfig.output_voxel_size",false]],"output_voxel_size (cellmap_flow.utils.data.flymodelconfig attribute)":[[27,"cellmap_flow.utils.data.FlyModelConfig.output_voxel_size",false]],"parallel (cellmap_flow.norm.input_normalize.euclideandistance attribute)":[[21,"cellmap_flow.norm.input_normalize.EuclideanDistance.parallel",false]],"parse_bpeek_output() (in module cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.parse_bpeek_output",false]],"parse_model_configs() (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.parse_model_configs",false]],"path (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.path",false]],"postprocess (in module cellmap_flow.globals)":[[11,"cellmap_flow.globals.postprocess",false]],"postprocess_dict_key (in module cellmap_flow.utils.web_utils)":[[34,"cellmap_flow.utils.web_utils.POSTPROCESS_DICT_KEY",false]],"postprocessing_lock (in module cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.postprocessing_lock",false]],"postprocessor (built-in class)":[[42,"PostProcessor",false]],"postprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.PostProcessor",false]],"postprocessormethods (in module cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.PostProcessorMethods",false]],"predict() (in module cellmap_flow.inferencer)":[[14,"cellmap_flow.inferencer.predict",false]],"previous_refresh_time (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.previous_refresh_time",false]],"process (cellmap_flow.utils.bsub_utils.job attribute)":[[25,"cellmap_flow.utils.bsub_utils.Job.process",false]],"process() (cellmap_flow.post.postprocessors.postprocessor method)":[[23,"cellmap_flow.post.postprocessors.PostProcessor.process",false]],"process() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.process",false]],"process() (postprocessor method)":[[42,"PostProcessor.process",false]],"process_chunk() (cellmap_flow.inferencer.inferencer method)":[[14,"cellmap_flow.inferencer.Inferencer.process_chunk",false]],"process_chunk_basic() (cellmap_flow.inferencer.inferencer method)":[[14,"cellmap_flow.inferencer.Inferencer.process_chunk_basic",false]],"process_chunk_bioimage() (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.process_chunk_bioimage",false]],"process_chunk_bioimage_test() (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.process_chunk_bioimage_test",false]],"process_fn() (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor method)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.process_fn",false]],"process_fn() (cellmap_flow.blockwise.cellmapflowblockwiseprocessor method)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.process_fn",false]],"pytorch_model (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.pytorch_model",false]],"queue (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.queue",false]],"queue (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.queue",false]],"queue (in module cellmap_flow.cli.fly_model)":[[4,"cellmap_flow.cli.fly_model.queue",false]],"read_block_shape (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.read_block_shape",false]],"readme (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.readme",false]],"refresh_rate_seconds (cellmap_flow.server.cellmapflowserver attribute)":[[24,"cellmap_flow.server.CellMapFlowServer.refresh_rate_seconds",false]],"regularize_offset() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.regularize_offset",false]],"reorder_axes() (in module cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.reorder_axes",false]],"root_dir (cellmap_flow.models.cellmap_models.cellmapmodels attribute)":[[15,"cellmap_flow.models.cellmap_models.CellmapModels.root_dir",false]],"run() (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor method)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.run",false]],"run() (cellmap_flow.blockwise.cellmapflowblockwiseprocessor method)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.run",false]],"run() (cellmap_flow.globals.flow class method)":[[11,"cellmap_flow.globals.Flow.run",false]],"run() (cellmap_flow.server.cellmapflowserver method)":[[24,"cellmap_flow.server.CellMapFlowServer.run",false]],"run() (in module cellmap_flow.blockwise.cli)":[[1,"cellmap_flow.blockwise.cli.run",false]],"run() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.run",false]],"run_locally() (in module cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.run_locally",false]],"run_model() (in module cellmap_flow.models.run)":[[19,"cellmap_flow.models.run.run_model",false]],"run_multiple() (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.run_multiple",false]],"run_multiple() (in module cellmap_flow.cli.multiple_yaml_cli)":[[7,"cellmap_flow.cli.multiple_yaml_cli.run_multiple",false]],"run_name (cellmap_flow.utils.data.dacapomodelconfig attribute)":[[27,"cellmap_flow.utils.data.DaCapoModelConfig.run_name",false]],"run_server() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.run_server",false]],"run_ui_server() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.run_ui_server",false]],"scale (cellmap_flow.utils.data.cellmapmodelconfig attribute)":[[27,"cellmap_flow.utils.data.CellMapModelConfig.scale",false]],"scale (cellmap_flow.utils.data.scriptmodelconfig attribute)":[[27,"cellmap_flow.utils.data.ScriptModelConfig.scale",false]],"scalepyramid (class in cellmap_flow.utils.scale_pyramid)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid",false]],"script() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.script",false]],"script() (in module cellmap_flow.cli.server_cli)":[[8,"cellmap_flow.cli.server_cli.script",false]],"script_path (cellmap_flow.utils.data.scriptmodelconfig attribute)":[[27,"cellmap_flow.utils.data.ScriptModelConfig.script_path",false]],"script_server_check() (in module cellmap_flow.cli.cli)":[[3,"cellmap_flow.cli.cli.script_server_check",false]],"scriptmodelconfig (class in cellmap_flow.utils.data)":[[27,"cellmap_flow.utils.data.ScriptModelConfig",false]],"security (in module cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.security",false]],"selectinput (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.SelectInput",false]],"separate_store_path() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.separate_store_path",false]],"server_command (in module cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.SERVER_COMMAND",false]],"server_queue_arg (in module cellmap_flow.cli.multiple_cli)":[[6,"cellmap_flow.cli.multiple_cli.server_queue_arg",false]],"show() (in module cellmap_flow.utils.neuroglancer_utils)":[[32,"cellmap_flow.utils.neuroglancer_utils.show",false]],"simpleblockwisemerger (built-in class)":[[42,"SimpleBlockwiseMerger",false]],"simpleblockwisemerger (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger",false]],"size (cellmap_flow.norm.input_normalize.dilate attribute)":[[21,"cellmap_flow.norm.input_normalize.Dilate.size",false]],"slices (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.slices",false]],"spatial_dims (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.spatial_dims",false]],"spawn_worker() (in module cellmap_flow.blockwise.blockwise_processor)":[[0,"cellmap_flow.blockwise.blockwise_processor.spawn_worker",false]],"split_dataset_path() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.split_dataset_path",false]],"start_hosts() (in module cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.start_hosts",false]],"status (cellmap_flow.utils.bsub_utils.job attribute)":[[25,"cellmap_flow.utils.bsub_utils.Job.status",false]],"std (cellmap_flow.norm.input_normalize.zscorenormalizer attribute)":[[21,"cellmap_flow.norm.input_normalize.ZScoreNormalizer.std",false]],"stop() (cellmap_flow.globals.flow class method)":[[11,"cellmap_flow.globals.Flow.stop",false]],"submit_bsub_job() (in module cellmap_flow.utils.bsub_utils)":[[25,"cellmap_flow.utils.bsub_utils.submit_bsub_job",false]],"submit_models() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.submit_models",false]],"swap_axes (cellmap_flow.image_data_interface.imagedatainterface attribute)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.swap_axes",false]],"task_name (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.task_name",false]],"task_name (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.task_name",false]],"textinput (class in cellmap_flow.models.model_app_config)":[[17,"cellmap_flow.models.model_app_config.TextInput",false]],"threshold (cellmap_flow.post.postprocessors.thresholdpostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.ThresholdPostprocessor.threshold",false]],"thresholdpostprocessor (built-in class)":[[42,"ThresholdPostprocessor",false]],"thresholdpostprocessor (class in cellmap_flow.post.postprocessors)":[[23,"cellmap_flow.post.postprocessors.ThresholdPostprocessor",false]],"to_dict() (cellmap_flow.globals.flow method)":[[11,"cellmap_flow.globals.Flow.to_dict",false]],"to_dict() (cellmap_flow.norm.input_normalize.inputnormalizer method)":[[21,"cellmap_flow.norm.input_normalize.InputNormalizer.to_dict",false]],"to_dict() (cellmap_flow.post.postprocessors.postprocessor method)":[[23,"cellmap_flow.post.postprocessors.PostProcessor.to_dict",false]],"to_dict() (postprocessor method)":[[42,"PostProcessor.to_dict",false]],"to_ndarray_tensorstore() (in module cellmap_flow.utils.ds)":[[28,"cellmap_flow.utils.ds.to_ndarray_tensorstore",false]],"to_ndarray_ts() (cellmap_flow.image_data_interface.imagedatainterface method)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.to_ndarray_ts",false]],"token (cellmap_flow.utils.scale_pyramid.scalepyramid property)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid.token",false]],"torch (in module cellmap_flow.models.cellmap_models)":[[15,"cellmap_flow.models.cellmap_models.torch",false]],"ts (cellmap_flow.image_data_interface.imagedatainterface property)":[[12,"cellmap_flow.image_data_interface.ImageDataInterface.ts",false]],"ts_dataset (cellmap_flow.utils.ds.lazynormalization attribute)":[[28,"cellmap_flow.utils.ds.LazyNormalization.ts_dataset",false]],"ts_model (cellmap_flow.models.cellmap_models.cellmapmodel property)":[[15,"cellmap_flow.models.cellmap_models.CellmapModel.ts_model",false]],"update_equivalences() (in module cellmap_flow.dashboard.app)":[[9,"cellmap_flow.dashboard.app.update_equivalences",false]],"update_run_models() (in module cellmap_flow.models.run)":[[19,"cellmap_flow.models.run.update_run_models",false]],"use_exact (cellmap_flow.post.postprocessors.affinitypostprocessor attribute)":[[23,"cellmap_flow.post.postprocessors.AffinityPostprocessor.use_exact",false]],"use_exact (cellmap_flow.post.postprocessors.mortonsegmentationrelabeling attribute)":[[23,"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling.use_exact",false]],"use_exact (cellmap_flow.post.postprocessors.simpleblockwisemerger attribute)":[[23,"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger.use_exact",false]],"use_half_prediction (cellmap_flow.inferencer.inferencer attribute)":[[14,"cellmap_flow.inferencer.Inferencer.use_half_prediction",false]],"version (cellmap_flow.models.cellmap_models.modelmetadata attribute)":[[15,"cellmap_flow.models.cellmap_models.ModelMetadata.version",false]],"viewer (in module cellmap_flow.globals)":[[11,"cellmap_flow.globals.viewer",false]],"volume_layers (cellmap_flow.utils.scale_pyramid.scalepyramid attribute)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid.volume_layers",false]],"volume_type (cellmap_flow.utils.scale_pyramid.scalepyramid property)":[[33,"cellmap_flow.utils.scale_pyramid.ScalePyramid.volume_type",false]],"voxel_size (cellmap_flow.utils.data.biomodelconfig attribute)":[[27,"cellmap_flow.utils.data.BioModelConfig.voxel_size",false]],"voxels_to_process (cellmap_flow.utils.data.biomodelconfig attribute)":[[27,"cellmap_flow.utils.data.BioModelConfig.voxels_to_process",false]],"workers (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.workers",false]],"workers (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.workers",false]],"yaml_config (cellmap_flow.blockwise.blockwise_processor.cellmapflowblockwiseprocessor attribute)":[[0,"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor.yaml_config",false]],"yaml_config (cellmap_flow.blockwise.cellmapflowblockwiseprocessor attribute)":[[2,"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor.yaml_config",false]],"zscorenormalizer (class in cellmap_flow.norm.input_normalize)":[[21,"cellmap_flow.norm.input_normalize.ZScoreNormalizer",false]]},"objects":{"":[[42,0,1,"","AffinityPostprocessor"],[42,0,1,"","ChannelSelection"],[42,0,1,"","DefaultPostprocessor"],[42,0,1,"","LabelPostprocessor"],[42,0,1,"","LambdaPostprocessor"],[42,0,1,"","MortonSegmentationRelabeling"],[42,0,1,"","PostProcessor"],[42,0,1,"","SimpleBlockwiseMerger"],[42,0,1,"","ThresholdPostprocessor"],[13,3,0,"-","cellmap_flow"]],"PostProcessor":[[42,1,1,"","__call__"],[42,1,1,"","_process"],[42,2,1,"","dtype"],[42,2,1,"","is_segmentation"],[42,1,1,"","name"],[42,1,1,"","process"],[42,1,1,"","to_dict"]],"cellmap_flow":[[2,3,0,"-","blockwise"],[5,3,0,"-","cli"],[10,3,0,"-","dashboard"],[11,3,0,"-","globals"],[12,3,0,"-","image_data_interface"],[14,3,0,"-","inferencer"],[16,3,0,"-","models"],[20,3,0,"-","norm"],[22,3,0,"-","post"],[24,3,0,"-","server"],[30,3,0,"-","utils"]],"cellmap_flow.blockwise":[[2,0,1,"","CellMapFlowBlockwiseProcessor"],[0,3,0,"-","blockwise_processor"],[1,3,0,"-","cli"]],"cellmap_flow.blockwise.CellMapFlowBlockwiseProcessor":[[2,2,1,"","block_shape"],[2,2,1,"","channels"],[2,2,1,"","charge_group"],[2,1,1,"","client"],[2,2,1,"","config"],[2,2,1,"","dtype"],[2,2,1,"","idi_raw"],[2,2,1,"","inferencer"],[2,2,1,"","input_path"],[2,2,1,"","input_voxel_size"],[2,2,1,"","json_str"],[2,2,1,"","model_config"],[2,2,1,"","output_arrays"],[2,2,1,"","output_channels"],[2,2,1,"","output_path"],[2,2,1,"","output_voxel_size"],[2,1,1,"","process_fn"],[2,2,1,"","queue"],[2,1,1,"","run"],[2,2,1,"","task_name"],[2,2,1,"","workers"],[2,2,1,"","yaml_config"]],"cellmap_flow.blockwise.blockwise_processor":[[0,0,1,"","CellMapFlowBlockwiseProcessor"],[0,4,1,"","get_process_dataset"],[0,5,1,"","logger"],[0,4,1,"","spawn_worker"]],"cellmap_flow.blockwise.blockwise_processor.CellMapFlowBlockwiseProcessor":[[0,2,1,"","block_shape"],[0,2,1,"","channels"],[0,2,1,"","charge_group"],[0,1,1,"","client"],[0,2,1,"","config"],[0,2,1,"","dtype"],[0,2,1,"","idi_raw"],[0,2,1,"","inferencer"],[0,2,1,"","input_path"],[0,2,1,"","input_voxel_size"],[0,2,1,"","json_str"],[0,2,1,"","model_config"],[0,2,1,"","output_arrays"],[0,2,1,"","output_channels"],[0,2,1,"","output_path"],[0,2,1,"","output_voxel_size"],[0,1,1,"","process_fn"],[0,2,1,"","queue"],[0,1,1,"","run"],[0,2,1,"","task_name"],[0,2,1,"","workers"],[0,2,1,"","yaml_config"]],"cellmap_flow.blockwise.cli":[[1,4,1,"","cli"],[1,5,1,"","logger"],[1,4,1,"","run"]],"cellmap_flow.cli":[[3,3,0,"-","cli"],[4,3,0,"-","fly_model"],[6,3,0,"-","multiple_cli"],[7,3,0,"-","multiple_yaml_cli"],[8,3,0,"-","server_cli"]],"cellmap_flow.cli.cli":[[3,4,1,"","bioimage"],[3,4,1,"","cellmap_model"],[3,4,1,"","cli"],[3,4,1,"","dacapo"],[3,5,1,"id0","logger"],[3,4,1,"","run"],[3,4,1,"","script"],[3,4,1,"","script_server_check"]],"cellmap_flow.cli.fly_model":[[4,5,1,"","charge_group"],[4,4,1,"","main"],[4,5,1,"","queue"]],"cellmap_flow.cli.multiple_cli":[[6,5,1,"","DEFAULT_SERVER_QUEUE"],[6,5,1,"","charge_group_arg"],[6,5,1,"","data_args"],[6,5,1,"","extra_args"],[6,5,1,"","logger"],[6,4,1,"","main"],[6,4,1,"","run_multiple"],[6,5,1,"","server_queue_arg"]],"cellmap_flow.cli.multiple_yaml_cli":[[7,5,1,"","logger"],[7,4,1,"","main"],[7,4,1,"","run_multiple"]],"cellmap_flow.cli.server_cli":[[8,4,1,"","bioimage"],[8,4,1,"","cellmap_model"],[8,4,1,"","cli"],[8,4,1,"","dacapo"],[8,4,1,"","fly"],[8,5,1,"","logger"],[8,4,1,"","run_server"],[8,4,1,"","run_ui_server"],[8,4,1,"","script"]],"cellmap_flow.dashboard":[[9,3,0,"-","app"]],"cellmap_flow.dashboard.app":[[9,5,1,"","CustomCodeFolder"],[9,5,1,"","INFERENCE_SERVER"],[9,5,1,"","NEUROGLANCER_URL"],[9,5,1,"","app"],[9,4,1,"","create_and_run_app"],[9,4,1,"","index"],[9,4,1,"","is_output_segmentation"],[9,5,1,"","logger"],[9,4,1,"","process"],[9,4,1,"","submit_models"],[9,4,1,"","update_equivalences"]],"cellmap_flow.globals":[[11,0,1,"","Flow"],[11,5,1,"","g"],[11,5,1,"","input_norms"],[11,5,1,"","postprocess"],[11,5,1,"","viewer"]],"cellmap_flow.globals.Flow":[[11,1,1,"","delete"],[11,1,1,"","get_output_dtype"],[11,1,1,"","run"],[11,1,1,"","stop"],[11,1,1,"","to_dict"]],"cellmap_flow.image_data_interface":[[12,0,1,"","ImageDataInterface"]],"cellmap_flow.image_data_interface.ImageDataInterface":[[12,2,1,"","concurrency_limit"],[12,2,1,"","custom_fill_value"],[12,2,1,"","filetype"],[12,2,1,"","normalize"],[12,2,1,"","offset"],[12,2,1,"","path"],[12,2,1,"","swap_axes"],[12,1,1,"","to_ndarray_ts"],[12,6,1,"","ts"]],"cellmap_flow.inferencer":[[14,0,1,"","Inferencer"],[14,4,1,"","apply_postprocess"],[14,5,1,"","logger"],[14,4,1,"","predict"]],"cellmap_flow.inferencer.Inferencer":[[14,2,1,"","model_config"],[14,1,1,"","optimize_model"],[14,1,1,"","process_chunk"],[14,1,1,"","process_chunk_basic"],[14,2,1,"","use_half_prediction"]],"cellmap_flow.models":[[15,3,0,"-","cellmap_models"],[17,3,0,"-","model_app_config"],[18,3,0,"-","model_yaml"],[19,3,0,"-","run"]],"cellmap_flow.models.cellmap_models":[[15,0,1,"","CellmapModel"],[15,0,1,"","CellmapModels"],[15,0,1,"","ModelMetadata"],[15,5,1,"","ort"],[15,5,1,"","torch"]],"cellmap_flow.models.cellmap_models.CellmapModel":[[15,2,1,"","folder_path"],[15,6,1,"","metadata"],[15,6,1,"","onnx_model"],[15,6,1,"","pytorch_model"],[15,6,1,"","readme"],[15,6,1,"","ts_model"]],"cellmap_flow.models.cellmap_models.CellmapModels":[[15,1,1,"","list_models"],[15,2,1,"","root_dir"]],"cellmap_flow.models.cellmap_models.ModelMetadata":[[15,2,1,"","__class_vars__"],[15,2,1,"","__private_attributes__"],[15,2,1,"","__pydantic_complete__"],[15,2,1,"","__pydantic_computed_fields__"],[15,2,1,"","__pydantic_core_schema__"],[15,2,1,"","__pydantic_custom_init__"],[15,2,1,"","__pydantic_decorators__"],[15,2,1,"","__pydantic_extra__"],[15,2,1,"","__pydantic_fields__"],[15,2,1,"","__pydantic_fields_set__"],[15,2,1,"","__pydantic_generic_metadata__"],[15,2,1,"","__pydantic_parent_namespace__"],[15,2,1,"","__pydantic_post_init__"],[15,2,1,"","__pydantic_private__"],[15,2,1,"","__pydantic_root_model__"],[15,2,1,"","__pydantic_serializer__"],[15,2,1,"","__pydantic_validator__"],[15,2,1,"","__signature__"],[15,2,1,"","author"],[15,2,1,"","channels_names"],[15,2,1,"","description"],[15,2,1,"","framework"],[15,2,1,"","in_channels"],[15,2,1,"","inference_input_shape"],[15,2,1,"","inference_output_shape"],[15,2,1,"","input_shape"],[15,2,1,"","input_voxel_size"],[15,2,1,"","iteration"],[15,2,1,"","model_name"],[15,2,1,"","model_type"],[15,2,1,"","out_channels"],[15,2,1,"","output_shape"],[15,2,1,"","output_voxel_size"],[15,2,1,"","spatial_dims"],[15,2,1,"","version"]],"cellmap_flow.models.model_app_config":[[17,0,1,"","AppInput"],[17,0,1,"","FileInput"],[17,0,1,"","ListInput"],[17,0,1,"","ModelDashboardConfig"],[17,0,1,"","MyModelConfig"],[17,0,1,"","SelectInput"],[17,0,1,"","TextInput"]],"cellmap_flow.models.model_app_config.FileInput":[[17,2,1,"","default_value"],[17,2,1,"","description"],[17,2,1,"","name"]],"cellmap_flow.models.model_app_config.ListInput":[[17,2,1,"","default_value"],[17,2,1,"","description"],[17,2,1,"","name"],[17,2,1,"","options"]],"cellmap_flow.models.model_app_config.MyModelConfig":[[17,2,1,"","elemns"]],"cellmap_flow.models.model_app_config.SelectInput":[[17,2,1,"","default_value"],[17,2,1,"","description"],[17,2,1,"","name"],[17,2,1,"","options"]],"cellmap_flow.models.model_app_config.TextInput":[[17,2,1,"","default_value"],[17,2,1,"","description"],[17,2,1,"","name"]],"cellmap_flow.models.model_yaml":[[18,4,1,"","load_model_paths"]],"cellmap_flow.models.run":[[19,5,1,"","logger"],[19,4,1,"","run_model"],[19,4,1,"","update_run_models"]],"cellmap_flow.norm":[[21,3,0,"-","input_normalize"]],"cellmap_flow.norm.input_normalize":[[21,0,1,"","Dilate"],[21,0,1,"","EuclideanDistance"],[21,0,1,"","InputNormalizer"],[21,0,1,"","LambdaNormalizer"],[21,0,1,"","MinMaxNormalizer"],[21,0,1,"","ZScoreNormalizer"],[21,4,1,"","get_input_normalizers"],[21,4,1,"","get_normalizations"],[21,5,1,"","logger"]],"cellmap_flow.norm.input_normalize.Dilate":[[21,2,1,"","size"]],"cellmap_flow.norm.input_normalize.EuclideanDistance":[[21,2,1,"","activation"],[21,2,1,"","anisotropy"],[21,2,1,"","black_border"],[21,6,1,"","dtype"],[21,2,1,"","parallel"]],"cellmap_flow.norm.input_normalize.InputNormalizer":[[21,6,1,"","dtype"],[21,1,1,"","name"],[21,1,1,"","normalize"],[21,1,1,"","to_dict"]],"cellmap_flow.norm.input_normalize.LambdaNormalizer":[[21,6,1,"","dtype"],[21,2,1,"","expression"]],"cellmap_flow.norm.input_normalize.MinMaxNormalizer":[[21,6,1,"","dtype"],[21,2,1,"","max_value"],[21,2,1,"","min_value"]],"cellmap_flow.norm.input_normalize.ZScoreNormalizer":[[21,6,1,"","dtype"],[21,2,1,"","mean"],[21,1,1,"","normalize"],[21,2,1,"","std"]],"cellmap_flow.post":[[23,3,0,"-","postprocessors"]],"cellmap_flow.post.postprocessors":[[23,0,1,"","AffinityPostprocessor"],[23,0,1,"","ChannelSelection"],[23,0,1,"","DefaultPostprocessor"],[23,0,1,"","LabelPostprocessor"],[23,0,1,"","LambdaPostprocessor"],[23,0,1,"","MortonSegmentationRelabeling"],[23,0,1,"","PostProcessor"],[23,5,1,"","PostProcessorMethods"],[23,0,1,"","SimpleBlockwiseMerger"],[23,0,1,"","ThresholdPostprocessor"],[23,4,1,"","get_postprocessors"],[23,4,1,"","get_postprocessors_list"],[23,5,1,"","logger"],[23,5,1,"","postprocessing_lock"]],"cellmap_flow.post.postprocessors.AffinityPostprocessor":[[23,2,1,"","bias"],[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"],[23,2,1,"","neighborhood"],[23,6,1,"","num_channels"],[23,2,1,"","num_previous_segments"],[23,2,1,"","use_exact"]],"cellmap_flow.post.postprocessors.ChannelSelection":[[23,2,1,"","channels"],[23,6,1,"","num_channels"]],"cellmap_flow.post.postprocessors.DefaultPostprocessor":[[23,2,1,"","bias"],[23,2,1,"","clip_max"],[23,2,1,"","clip_min"],[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"],[23,2,1,"","multiplier"]],"cellmap_flow.post.postprocessors.LabelPostprocessor":[[23,2,1,"","channel"],[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"]],"cellmap_flow.post.postprocessors.LambdaPostprocessor":[[23,6,1,"","dtype"],[23,2,1,"","expression"]],"cellmap_flow.post.postprocessors.MortonSegmentationRelabeling":[[23,2,1,"","channel"],[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"],[23,2,1,"","num_previous_segments"],[23,2,1,"","use_exact"]],"cellmap_flow.post.postprocessors.PostProcessor":[[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"],[23,1,1,"","name"],[23,1,1,"","process"],[23,1,1,"","to_dict"]],"cellmap_flow.post.postprocessors.SimpleBlockwiseMerger":[[23,1,1,"","calculate_equivalences"],[23,2,1,"","channel"],[23,2,1,"","chunk_slice_position_to_coords_id_dict"],[23,6,1,"","dtype"],[23,2,1,"","equivalences"],[23,2,1,"","face_erosion_iterations"],[23,6,1,"","is_segmentation"],[23,2,1,"","keys_to_skip"],[23,2,1,"","slices"],[23,2,1,"","use_exact"]],"cellmap_flow.post.postprocessors.ThresholdPostprocessor":[[23,6,1,"","dtype"],[23,6,1,"","is_segmentation"],[23,2,1,"","threshold"]],"cellmap_flow.server":[[24,0,1,"","CellMapFlowServer"],[24,0,1,"","DummyConfig"],[24,4,1,"","get_process_dataset"],[24,5,1,"","logger"]],"cellmap_flow.server.CellMapFlowServer":[[24,2,1,"","app"],[24,2,1,"","chunk_encoder"],[24,2,1,"","idi_raw"],[24,2,1,"","inferencer"],[24,2,1,"","input_voxel_size"],[24,2,1,"","n5_block_shape"],[24,2,1,"","output_channels"],[24,2,1,"","output_voxel_size"],[24,2,1,"","previous_refresh_time"],[24,2,1,"","read_block_shape"],[24,2,1,"","refresh_rate_seconds"],[24,1,1,"","run"]],"cellmap_flow.server.DummyConfig":[[24,2,1,"","block_shape"],[24,2,1,"","output_channels"],[24,2,1,"","output_voxel_size"]],"cellmap_flow.utils":[[25,3,0,"-","bsub_utils"],[26,3,0,"-","config_utils"],[27,3,0,"-","data"],[28,3,0,"-","ds"],[29,3,0,"-","import_utils"],[31,3,0,"-","load_py"],[32,3,0,"-","neuroglancer_utils"],[33,3,0,"-","scale_pyramid"],[34,3,0,"-","web_utils"]],"cellmap_flow.utils.bsub_utils":[[25,0,1,"","Job"],[25,5,1,"","SERVER_COMMAND"],[25,4,1,"","cleanup"],[25,4,1,"","get_host_from_stdout"],[25,4,1,"","is_bsub_available"],[25,5,1,"id0","logger"],[25,4,1,"","parse_bpeek_output"],[25,4,1,"","run_locally"],[25,5,1,"","security"],[25,4,1,"","start_hosts"],[25,4,1,"","submit_bsub_job"]],"cellmap_flow.utils.bsub_utils.Job":[[25,2,1,"","host"],[25,2,1,"","job_id"],[25,1,1,"","kill"],[25,2,1,"","model_name"],[25,2,1,"","process"],[25,2,1,"","status"]],"cellmap_flow.utils.config_utils":[[26,5,1,"","DEFAULT_SERVER_QUEUE"],[26,4,1,"","build_models"],[26,4,1,"","load_config"],[26,5,1,"","logger"]],"cellmap_flow.utils.data":[[27,0,1,"","BioModelConfig"],[27,0,1,"","CellMapModelConfig"],[27,0,1,"","Config"],[27,0,1,"","DaCapoModelConfig"],[27,0,1,"","FlyModelConfig"],[27,0,1,"","ModelConfig"],[27,0,1,"","ScriptModelConfig"],[27,4,1,"","check_config"],[27,4,1,"","concat_along_c"],[27,4,1,"","format_output_bioimage"],[27,4,1,"","get_dacapo_channels"],[27,4,1,"","get_dacapo_run_model"],[27,4,1,"","load_eval_model"],[27,5,1,"","logger"],[27,4,1,"","parse_model_configs"],[27,4,1,"","process_chunk_bioimage"],[27,4,1,"","process_chunk_bioimage_test"],[27,4,1,"","reorder_axes"]],"cellmap_flow.utils.data.BioModelConfig":[[27,6,1,"","command"],[27,1,1,"","get_axes_and_dims"],[27,1,1,"","get_input_slicer"],[27,1,1,"","get_spatial_dims"],[27,1,1,"","load_input_information"],[27,1,1,"","load_output_information"],[27,2,1,"","model_name"],[27,2,1,"","name"],[27,2,1,"","voxel_size"],[27,2,1,"","voxels_to_process"]],"cellmap_flow.utils.data.CellMapModelConfig":[[27,2,1,"","cellmap_model"],[27,6,1,"","command"],[27,2,1,"","name"],[27,2,1,"","scale"]],"cellmap_flow.utils.data.DaCapoModelConfig":[[27,6,1,"","command"],[27,2,1,"","iteration"],[27,2,1,"","name"],[27,2,1,"","run_name"]],"cellmap_flow.utils.data.FlyModelConfig":[[27,2,1,"","channels"],[27,2,1,"","chpoint_path"],[27,6,1,"","command"],[27,2,1,"","input_size"],[27,2,1,"","input_voxel_size"],[27,6,1,"","model"],[27,2,1,"","name"],[27,2,1,"","output_size"],[27,2,1,"","output_voxel_size"]],"cellmap_flow.utils.data.ModelConfig":[[27,6,1,"","config"],[27,6,1,"","output_dtype"]],"cellmap_flow.utils.data.ScriptModelConfig":[[27,6,1,"","command"],[27,2,1,"","name"],[27,2,1,"","scale"],[27,2,1,"","script_path"]],"cellmap_flow.utils.ds":[[28,0,1,"","LazyNormalization"],[28,4,1,"","access_parent"],[28,4,1,"","apply_norms"],[28,4,1,"","check_for_attrs_multiscale"],[28,4,1,"","check_for_multiscale"],[28,4,1,"","check_for_offset"],[28,4,1,"","check_for_units"],[28,4,1,"","check_for_voxel_size"],[28,4,1,"","ends_with_scale"],[28,4,1,"","find_target_scale"],[28,4,1,"","get_ds_info"],[28,4,1,"","get_scale_info"],[28,4,1,"","get_url"],[28,5,1,"","logger"],[28,4,1,"","open_ds_tensorstore"],[28,4,1,"","regularize_offset"],[28,4,1,"","separate_store_path"],[28,4,1,"","split_dataset_path"],[28,4,1,"","to_ndarray_tensorstore"]],"cellmap_flow.utils.ds.LazyNormalization":[[28,2,1,"","ts_dataset"]],"cellmap_flow.utils.import_utils":[[29,4,1,"","check_dependencies"]],"cellmap_flow.utils.load_py":[[31,0,1,"","Config"],[31,5,1,"","DISALLOWED_FUNCTIONS"],[31,5,1,"","DISALLOWED_IMPORTS"],[31,4,1,"","analyze_script"],[31,4,1,"","load_safe_config"]],"cellmap_flow.utils.neuroglancer_utils":[[32,4,1,"","generate_neuroglancer_url"],[32,5,1,"","logger"],[32,4,1,"","show"]],"cellmap_flow.utils.scale_pyramid":[[33,0,1,"","ScalePyramid"],[33,4,1,"","get_raw_layer"],[33,5,1,"","logger"]],"cellmap_flow.utils.scale_pyramid.ScalePyramid":[[33,2,1,"","dims"],[33,1,1,"","get_encoded_subvolume"],[33,1,1,"","get_object_mesh"],[33,1,1,"","info"],[33,1,1,"","invalidate"],[33,2,1,"","max_voxel_size"],[33,2,1,"","min_voxel_size"],[33,6,1,"","token"],[33,2,1,"","volume_layers"],[33,6,1,"","volume_type"]],"cellmap_flow.utils.web_utils":[[34,5,1,"","ARGS_KEY"],[34,5,1,"","INPUT_NORM_DICT_KEY"],[34,5,1,"","IP_PATTERN"],[34,5,1,"","POSTPROCESS_DICT_KEY"],[34,4,1,"","decode_to_json"],[34,4,1,"","encode_to_str"],[34,4,1,"","get_free_port"],[34,4,1,"","get_norms_post_args"],[34,4,1,"","get_public_ip"],[34,4,1,"","kill_n_remove_from_neuroglancer"],[34,4,1,"","list_cls_to_dict"]]},"objnames":{"0":["py","class","Python class"],"1":["py","method","Python method"],"2":["py","attribute","Python attribute"],"3":["py","module","Python module"],"4":["py","function","Python function"],"5":["py","data","Python data"],"6":["py","property","Python property"]},"objtypes":{"0":"py:class","1":"py:method","2":"py:attribute","3":"py:module","4":"py:function","5":"py:data","6":"py:property"},"terms":{"":[3,6,8,34,36,38,39],"0":[8,21,23,24,37,38,42,44],"003":39,"1":[12,21,23,24,27,35,36,37,38,39,42,44],"10":[34,38],"12":0,"127":[23,42],"1413":39,"158":38,"16":39,"164":38,"168":34,"178":[27,38],"192":34,"2":[38,39,42],"2024":37,"20241204_finetune_mito_affs_task_datasplit_v3_u21_kidney_mito_default_cache_8_1":39,"233":38,"255":[21,38,44],"268":38,"2d":36,"2x2x2":[36,38],"3":23,"32":24,"36000":36,"4":[24,27],"40000":36,"5":[21,23,24,42],"50":[6,21],"56":[27,38],"60":[6,36],"6_pixel":28,"700000":39,"8":[38,44],"9":23,"A":[15,28,33,39],"For":[27,36,37,38],"IF":27,"If":[15,27,28,31,37,38],"Not":43,"One":33,"The":[3,8,15,27,28,36,37,38,39,42,44],"Then":44,"To":[3,8,36,38,39,40],"__args__":15,"__call__":42,"__cflow_args__":34,"__class_vars__":15,"__init__":15,"__origin__":15,"__parameters__":15,"__private_attributes__":15,"__pydantic_complete__":15,"__pydantic_computed_fields__":15,"__pydantic_core_schema__":15,"__pydantic_custom_init__":15,"__pydantic_decorators__":15,"__pydantic_extra__":15,"__pydantic_fields__":15,"__pydantic_fields_set__":15,"__pydantic_generic_metadata__":15,"__pydantic_parent_namespace__":15,"__pydantic_post_init__":15,"__pydantic_private__":15,"__pydantic_root_model__":15,"__pydantic_serializer__":15,"__pydantic_validator__":15,"__root_validators__":15,"__signature__":15,"__validators__":15,"_build":37,"_description_":28,"_process":42,"_static":37,"_templat":37,"about":15,"absolut":37,"abspath":37,"abstract":[15,42],"access":44,"access_par":28,"accord":38,"account":44,"ackerman":37,"across":43,"activ":21,"ad":42,"add":37,"address":34,"adjust":15,"affect":37,"affin":42,"affinitypostprocessor":23,"after":[31,37,42],"against":28,"all":[15,23,24,28,36,42],"alloc":44,"allow":[6,15,36],"almost":43,"along":27,"also":[37,44],"alvyrai":28,"an":[15,27,28,31,39],"analyz":31,"analyze_script":31,"ani":[15,27,28,37,39],"anisotropi":21,"anoth":37,"api":37,"app":[10,24,35],"appar":28,"appinput":17,"appli":42,"applic":[3,8,24],"apply_norm":28,"apply_postprocess":14,"appropri":[6,44],"ar":[15,24,28,36,37],"arg":39,"args_kei":34,"argument":[6,28],"arr":27,"arrai":[27,28,38,42,43],"as_default":38,"ast":31,"astyp":38,"attr":28,"attribut":42,"aubrei":37,"author":[15,37],"auto":[35,37],"autoapi":[35,37],"autoapi_dir":37,"autoapi_opt":37,"autoapi_typ":37,"autobuild":37,"autodoc":37,"automat":[15,38],"avail":[15,39],"ax":27,"axes_list":27,"axi":27,"b_lyso_16":36,"b_mito_16":36,"back":34,"base":15,"basic":[39,40,43],"batch":36,"befor":[36,42,44],"behind":34,"between":42,"bia":[23,42],"bias":42,"bill":[36,44],"binar":42,"binari":36,"bio_mito":36,"bioimag":[3,8,36,40],"biomodelconfig":[27,44],"black_bord":21,"block":[0,2,38,39],"block_shap":[0,2,24,38,39],"blockwis":[13,35,43],"blockwise_processor":[2,35],"bodi":28,"boolean":[31,42],"both":[39,40],"boundari":42,"bsub_util":[30,35],"build":15,"build_model":26,"builder":37,"builtin":37,"c":27,"calculate_equival":23,"call":[6,31,44],"callabl":38,"can":[27,28,37,38,39,40,44],"case":38,"cellmap":[3,4,8,9,11,25,36,37,38,39,40,44],"cellmap_flow":[35,37,38,39,44],"cellmap_flow_multipl":[6,39],"cellmap_flow_serv":[8,25],"cellmap_flow_server_ip":34,"cellmap_flow_with_yaml":7,"cellmap_model":[3,8,16,27,35],"cellmapflow":[3,8,39,40],"cellmapflowblockwiseprocessor":[0,2],"cellmapflowserv":24,"cellmapmodel":[15,27],"cellmapmodelconfig":27,"center":28,"cerebellum":39,"certfil":[8,24],"certif":24,"cg":28,"chain":6,"chang":39,"channel":[0,2,8,23,27,38,39,42,44],"channel_axis_nam":27,"channels_nam":15,"channelselect":23,"charg":36,"charge_group":[0,2,3,4,6,7,11,25,36,44],"charge_group_arg":6,"check":[28,38],"check_config":27,"check_depend":29,"check_for_attrs_multiscal":28,"check_for_multiscal":28,"check_for_offset":28,"check_for_unit":28,"check_for_voxel_s":28,"checkpoint":[8,38,44],"checkpoint_path":[27,38,44],"chpoint_path":27,"chunk":[36,38,42],"chunk_encod":24,"chunk_slice_position_to_coords_id_dict":23,"class":44,"classif":42,"classmethod":[11,21,23],"cleanup":25,"cli":[2,13,35,37,38,44],"client":[0,1,2,33],"clip":[38,42],"clip_max":[23,42],"clip_min":[23,42],"cloud":39,"cm":28,"colexicograph":28,"com":28,"come":37,"comma":42,"command":[3,6,8,25,27,38,39,40,44],"common":37,"compat":38,"complet":[15,43],"compon":42,"comput":[15,36,44],"computedfieldinfo":15,"concat_along_c":27,"concaten":27,"concept":15,"concurrency_limit":[12,28],"conda":39,"config":[0,2,7,14,15,27,31,36,38,44],"config_fold":[3,36],"config_path":31,"config_util":[30,35],"configdict":15,"configur":[26,27,31,37,38,43,44],"confirm":36,"connect":42,"consist":[27,42],"construct":[27,39],"contain":[15,23,28,35,37],"context":38,"contribut":39,"control":[36,42],"conveni":24,"convent":[28,43],"convert":42,"coordin":[28,38],"copi":37,"copyright":37,"core":[15,28,39,40],"corner":28,"correct":[26,27,28],"correctli":38,"correspond":[15,27],"cpu":[15,38],"creat":[0,2,15,28,35,38],"create_and_run_app":9,"css":37,"cuda":38,"current":[39,43],"custom":[3,8,15,36,37],"custom_fill_valu":[12,28],"customcodefold":9,"d":[3,6,8,30,35,36,38,39],"dacapo":[3,6,8,36,40],"dacapomodelconfig":[27,44],"dashboard":[13,35],"data":[6,14,15,21,23,24,28,30,33,34,35,36,38,39,42,43,44],"data_arg":6,"data_format":33,"data_path":[3,8,36,39,44],"dataset":[3,24,28,36,43],"dataset_nam":24,"dataset_path":[3,6,7,12,28,32,33],"david":37,"db":37,"debug":[8,24],"decod":34,"decode_to_json":34,"decor":[15,24],"deem":31,"def":38,"default":[27,36,37],"default_server_queu":[6,26],"default_valu":17,"defaultpostprocessor":23,"defin":[15,24,27,28,36,38,39,42,44],"definit":36,"delet":11,"depend":[29,39,40],"descript":[15,17],"desir":[3,8,27,36],"desired_ord":27,"desktop":9,"detect":[15,31],"determin":28,"dev":24,"develop":[39,43],"devic":38,"dict":[18,21,23],"dictionari":[15,23,28,42],"differ":[33,36],"dilat":21,"dim":[27,33],"dimens":[27,28],"direct":38,"directori":[15,28,37],"disallowed_funct":31,"disallowed_import":31,"discov":15,"discuss":28,"dispatch":[6,42],"displai":39,"do":[38,39],"doc":37,"document":[15,35,37,43],"doe":[34,39,40],"doesn":15,"done":43,"down":43,"draft":43,"ds_name":28,"ds_store":37,"dtype":[0,2,21,23,27,42],"due":28,"dummyconfig":24,"dump":15,"dure":15,"e":[6,28,34,36,38,39,42,44],"each":[6,28,36,38,42],"edg":[36,42],"edge_length_to_process":[3,8,27,36],"edt":21,"either":27,"element":28,"elemn":17,"elm":[21,23],"els":[15,38],"em":39,"embed":38,"empti":28,"en":37,"enabl":39,"encod":[34,42],"encode_to_str":34,"encoded_str":34,"end":33,"ends_with_scal":28,"ensur":[38,42,44],"entir":15,"entri":26,"equival":[23,42],"equivalence_map":42,"eros":42,"error":[28,31],"etc":[6,28],"euclideandist":21,"eval":38,"eventu":15,"exactli":27,"exampl":[3,6,8,9,36,39],"example_job":25,"example_norm":9,"exclude_pattern":37,"execut":[36,44],"exist":[15,28],"explain":38,"explicitli":15,"explor":39,"express":[21,23,42],"ext":37,"extens":37,"extra":[6,15,32],"extra_arg":6,"f":[36,38],"face":[34,42],"face_erosion_iter":[23,42],"factor":42,"fals":[8,21,24,28,31,44],"favicon":37,"feed":38,"feed_dict":38,"feel":39,"fibsem":[36,39],"field":15,"fieldinfo":15,"file":[15,27,28,36,37],"fileinput":17,"filenam":28,"filepath":31,"filetyp":12,"filter":42,"final":27,"find_target_scal":28,"first":[43,44],"flag":36,"flask":24,"flo":[3,8],"float":[23,28],"float32":27,"flow":[9,11,36,37,38,39,40,44],"fly":[8,38,44],"fly_model":[5,35],"fly_organel":[38,44],"flymodelconfig":[27,44],"fmt":37,"folder":36,"folder_path":[8,15,27],"follow":[3,8,36,38,39,40],"force_saf":31,"force_safe_config":31,"format_output_bioimag":27,"forward":38,"found":28,"frame":25,"framework":[15,38,42],"free":39,"frequent":39,"from":[15,26,27,28,36,38,39,42,44],"full":37,"function":[15,39],"funlib":[27,28,38],"g":[11,34,39,42,44],"gener":[15,35,37,42],"generate_neuroglancer_url":32,"geometri":[27,28,38],"get":28,"get_axes_and_dim":27,"get_dacapo_channel":27,"get_dacapo_run_model":27,"get_ds_info":28,"get_encoded_subvolum":33,"get_free_port":34,"get_host_from_stdout":25,"get_input_norm":21,"get_input_slic":27,"get_norm":21,"get_norms_post_arg":34,"get_object_mesh":33,"get_output_dtyp":11,"get_postprocessor":23,"get_postprocessors_list":23,"get_process_dataset":[0,24],"get_public_ip":34,"get_raw_lay":33,"get_scale_info":28,"get_spatial_dim":27,"get_tensor_nam":38,"get_url":28,"getenv":31,"given":[15,26],"global":[13,35,38,44],"go":43,"gpu":[15,39,44],"gpu_h100":[4,6,11,25,26,36,38,44],"graph":[38,42],"group":[28,36,39,44],"grow":38,"guid":38,"h100":44,"ha":[15,27,28],"handl":[38,43],"have":44,"hdf5":28,"heat":28,"heinrich":37,"help":37,"here":[27,28,37],"hierarchi":28,"high":43,"host":[24,25,39],"how":[15,38],"html":37,"html_css_file":37,"html_extra_path":37,"html_favicon":37,"html_static_path":37,"html_theme":37,"http":[25,28,37],"i":[3,8,15,27,28,31,36,37,38,39,42,44],"ico":37,"id":42,"idi":[14,27,38],"idi_raw":[0,2,24],"ignor":37,"imag":42,"image_data_interfac":[13,27,35,38],"imagedatainterfac":[12,27,38,39],"implement":42,"import":[31,37,38,44],"import_meta_graph":38,"import_util":[30,35],"improv":43,"in_channel":15,"includ":[37,39,40,44],"index":9,"indic":[31,42],"infer":[36,38,39,44],"inferenc":[0,2,13,24,35],"inference_host":8,"inference_input_shap":15,"inference_output_shap":15,"inference_serv":9,"inferencesess":15,"info":[28,33],"inform":[28,37],"init":15,"initi":36,"input":[27,28,36,38,39,42,44],"input_arrai":38,"input_ax":27,"input_data":38,"input_norm":[11,20,34,35,44],"input_norm_dict_kei":34,"input_path":[0,2],"input_roi":[27,38],"input_s":27,"input_shap":15,"input_tensor":38,"input_tensornam":38,"input_voxel_s":[0,2,8,15,24,27,38,39,44],"inputnorm":21,"insert":[27,37],"inspect":15,"instal":[15,38],"instanc":[15,38,42,43],"instanti":[15,26],"int":[15,23,27,28],"integr":37,"interest":28,"interfac":[3,8,36,38],"interleav":42,"internet":34,"invalid":33,"invert":[21,44],"invok":42,"io":[3,8,36,40],"ip":34,"ip_pattern":34,"ipynb":37,"is_avail":38,"is_bsub_avail":25,"is_output_segment":9,"is_segment":[23,42],"isn":15,"issu":31,"iter":[3,8,15,27,36,39],"its":[27,31],"itself":28,"jeff":37,"jit":15,"job":[25,34,36,44],"job_id":25,"job_nam":25,"join":38,"jrc_mu":[36,39],"jrc_ut21":39,"json":[15,34,38],"json_data":0,"json_str":[0,2],"jupytext":37,"keyfil":[8,24],"keys_to_skip":23,"kill":25,"kill_n_remove_from_neuroglanc":34,"kwarg":[14,23,31,42],"label":[27,42],"labelpostprocessor":23,"lambda":42,"lambdanorm":21,"lambdapostprocessor":23,"larissa":37,"launch":[38,44],"layer":33,"lazi":15,"lazili":15,"lazynorm":28,"lead":28,"level":[3,8,28,38],"lexicograph":28,"like":[37,38],"line":[3,8],"list":[15,19,21,23,26,27,28,31,33,37,42],"list_cls_to_dict":34,"list_model":15,"listinput":17,"ll":34,"load":[15,26,31,36,38],"load_config":26,"load_eval_model":[27,38],"load_input_inform":27,"load_model_path":18,"load_output_inform":27,"load_pi":[30,35],"load_safe_config":31,"load_state_dict":38,"local":[34,38,39],"localvolum":33,"log":[3,8],"log_level":[1,3,8],"logger":[0,1,3,6,7,8,9,14,19,21,23,24,25,26,27,28,32,33],"logic":6,"long":43,"look":[37,38],"low":43,"lyso_16":36,"m":[3,8,36,39],"machin":34,"mai":[15,39],"main":[4,6,7],"maintain":42,"make":37,"manual":27,"map":42,"map_loc":38,"mark":33,"marwan":37,"master":37,"match":[37,38],"max_val":38,"max_valu":[21,44],"max_voxel_s":33,"maximum":42,"md":[15,37],"mean":21,"member":37,"memo":28,"merg":42,"meta":[28,38],"meta_graph_fil":38,"metadata":[15,27,36],"method":[15,42],"microsoft":28,"mimic":33,"min_val":38,"min_valu":[21,44],"min_voxel_s":33,"minim":27,"minimum":42,"minmaxnorm":[21,44],"minut":39,"miss":27,"mito":36,"mito_16":36,"mito_model":36,"mito_run":36,"mito_script":36,"mito_script_model":36,"mode":[12,28,36],"model":[3,6,7,8,13,26,27,35,44],"model_app_config":[16,35],"model_backbon":38,"model_checkpoint":38,"model_checkpoint_432000":44,"model_config":[0,2,8,11,14,24,44],"model_dir":36,"model_entri":26,"model_nam":[15,25,27,36],"model_path":[3,8,19,36,39],"model_scal":44,"model_spec":39,"model_state_dict":38,"model_typ":15,"model_yaml":[16,35],"modelconfig":[14,24,26,27],"modeldashboardconfig":17,"modelmetadata":15,"modul":[37,42],"monitor":44,"month":39,"morton":42,"mortonsegmentationrelabel":23,"most":37,"multi":42,"multipl":[6,28],"multiple_cli":[5,35],"multiple_yaml_cli":[5,35],"multipli":[23,42],"multiscal":28,"multiscale_group":28,"must":[36,38],"mwatersh":42,"my_job":25,"my_run":[3,8,39],"mymodelconfig":17,"myst_nb":37,"myst_pars":37,"n":[23,36,39],"n5":[24,28],"n5_block_shap":24,"name":[0,3,8,15,17,19,21,23,25,27,28,36,37,39,42,44],"namespac":15,"napoleon":37,"nat":34,"nbsphinx":37,"nbsphinx_custom_format":37,"ncpu":0,"ndarrai":[21,23,27,42],"ndimag":42,"necessari":[27,28],"need":[27,38,44],"neighborhood":[23,42],"net":43,"net_config":38,"neuroglanc":[24,33,42],"neuroglancer_url":[8,9],"neuroglancer_util":[30,35],"nm":28,"nn":38,"node":28,"non":38,"none":[0,2,8,9,11,12,15,17,24,25,27,28,33],"norm":[13,35,44],"normal":[12,21,28,33,42],"note":[15,39,40],"np":[27,38],"nr":[36,39],"nuclei_model":36,"nuclei_run":36,"num_channel":[23,27],"num_label":38,"num_previous_seg":23,"number":[38,39],"numpi":[21,23,27,28,38,42],"o":[28,31,37,38],"object":[15,26,27,34,38],"object_id":33,"offset":[12,28,42],"offset_float":28,"often":28,"one":[6,36],"ones":37,"onli":[36,37],"onnx":15,"onnx_model":15,"onnxruntim":15,"open":[28,38],"open_ds_tensorstor":28,"oper":42,"optimize_model":14,"option":[17,24,37,38,39],"order":[27,28,42],"org":37,"organel":38,"ort":15,"ot":38,"other":39,"otherwis":[15,27],"out":27,"out_ax":27,"out_channel":15,"outlin":36,"output":[25,27,37,38,39,42],"output_arrai":[0,2],"output_ax":27,"output_channel":[0,2,24,38,39],"output_dtyp":27,"output_nam":27,"output_path":[0,2],"output_s":27,"output_sampl":27,"output_shap":15,"output_tensor":38,"output_tensornam":38,"output_voxel_s":[0,2,8,12,15,24,27,28,38,39,44],"overridden":36,"overwrit":37,"own":38,"p":[6,36,38],"page":[35,37],"parallel":21,"paramet":[3,8,23,27,28,33,44],"parametr":43,"parent":[15,28],"pars":[6,15],"parse_bpeek_output":25,"parse_model_config":27,"pass":28,"path":[6,7,12,26,28,36,37,38,39,44],"pattern":37,"pdf":28,"per":33,"percent":37,"perform":39,"physic":28,"pip":[38,39,40],"pipelin":[38,44],"pixelresolut":28,"placehold":27,"pleas":39,"point":[28,42],"popul":27,"port":[8,24],"posit":27,"post":[13,15,35,43],"post_processor":[11,44],"postprocess":[11,34,38,42],"postprocess_dict_kei":34,"postprocessing_lock":23,"postprocessor":[22,35],"postprocessormethod":23,"potenti":31,"predict":[14,27,38],"prefix":36,"prepar":38,"present":28,"previous_refresh_tim":24,"primarili":42,"print":44,"prioriti":43,"privat":[15,34],"process":[9,23,25,36,39,42,43],"process_chunk":[14,38,39],"process_chunk_bas":14,"process_chunk_bioimag":27,"process_chunk_bioimage_test":27,"process_fn":[0,2],"process_lsd":38,"produc":42,"programmat":44,"project":[6,36,37],"properti":[12,15,21,23,27,33],"provid":[15,33,36,39],"pt":15,"public":34,"purpos":15,"py":[7,36,37,38,39],"pydant":15,"pymorton":42,"pyramid":28,"python":[7,36,37,38,42],"pytorch":[15,39],"pytorch_model":15,"q":[6,36,38],"queue":[0,2,3,4,6,7,11,25,36,44],"r":[3,6,8,12,28,36,38,39],"rais":[27,28,31],"raw":38,"re":[34,38],"read":[27,28,37],"read_block_shap":24,"read_roi":14,"read_shap":[38,39],"readm":15,"real":[34,39],"rebuild":15,"recon":39,"refetch":33,"refresh_rate_second":24,"region":28,"regular":28,"regularize_offset":28,"rel":37,"relabel":42,"remov":27,"render":28,"reorder":27,"reorder_ax":27,"replac":15,"repositori":39,"repres":[15,42],"requir":[15,36],"rescal":38,"rescale_data":38,"reshap":27,"resolut":[28,33],"resourc":[36,44],"respect":28,"restor":38,"result":[38,44],"retriev":[38,44],"return":[15,23,27,28,31,34,38,39,42,44],"rhoad":37,"roi":[12,14,27,28,38,39],"root":[28,37],"root_dir":15,"root_model":15,"rootmodel":15,"rout":24,"rst":37,"run":[0,1,2,3,8,11,16,24,25,35,36,38,44],"run07":44,"run_1":6,"run_2":6,"run_loc":25,"run_model":19,"run_multipl":[6,7],"run_nam":[3,8,27,36],"run_serv":8,"run_ui_serv":8,"runtim":15,"runtimeerror":28,"s0":39,"s1":36,"s2":36,"safe":[31,34],"safeti":31,"salivari":36,"same":36,"sampl":[27,43],"satisfi":38,"save":15,"saver":38,"sc":25,"scale":[27,28,33,36,42,44],"scale_kei":33,"scale_pyramid":[30,35],"scalepyramid":33,"schema":15,"schemaseri":15,"schemavalid":15,"scipi":42,"scope":38,"script":[3,6,8,31,36],"script_bas":39,"script_path":[3,8,27,36,39],"script_server_check":3,"scriptmodelconfig":[27,44],"section":36,"secur":25,"see":[28,37],"segment":[42,43],"select":[37,42],"selectinput":17,"self":27,"semant":43,"separ":[28,42],"separate_store_path":28,"sequenti":[36,38],"serial":42,"server":[8,13,35,38,39],"server_cli":[5,35],"server_command":25,"server_queue_arg":6,"session":[15,38],"set":[15,38,44],"setup":[37,38],"setup_dir":38,"sever":36,"shape":[27,38,39],"share":6,"sheet":37,"should":[27,44],"show":[32,37],"shown":37,"sigmoid":38,"signatur":15,"signum":25,"similar":[15,27],"simpleblockwisemerg":23,"simplifi":43,"simul":[36,38],"singl":[15,36],"size":[21,27,28,36,38,39,44],"slice":23,"small":38,"so":[27,37],"some":6,"someon":28,"someth":27,"sometim":28,"sourc":[28,37],"spatial_dim":15,"spawn_work":0,"specif":28,"specifi":[36,44],"speed":39,"sphinx":[35,37],"sphinx_autodoc_typehint":37,"sphinx_click":37,"sphinx_rtd_them":37,"split":28,"split_dataset_path":28,"ssl":24,"st_data":19,"standard":38,"standardunet":38,"start":[33,43],"start_host":25,"state":43,"state_dict":15,"static":37,"statu":25,"std":21,"still":[15,39],"stop":11,"store":28,"str":[0,2,3,8,15,18,19,21,23,24,27,28],"string":[28,34,37],"structur":36,"style":37,"sub":6,"subclass":23,"subcommand":36,"subfold":15,"submit":36,"submit_bsub_job":25,"submit_model":9,"subset":42,"suggest":39,"summari":37,"support":[36,39,40],"swap_ax":[12,28],"sy":37,"synthes":15,"system":28,"t":[12,15],"take":39,"tanh":21,"target":42,"target_resolut":28,"task":[27,43],"task_nam":[0,2],"templat":37,"templates_path":37,"tensorstor":28,"textinput":17,"tf":38,"tf_model_dir":38,"thei":37,"them":[15,27],"theme":37,"thi":[6,15,27,28,34,35,36,37,38,39],"those":28,"threshold":[23,42],"thresholdpostprocessor":23,"thumb":37,"time":39,"to_dict":[11,21,23,42],"to_ndarray_t":[12,38],"to_ndarray_tensorstor":28,"todo":43,"toi":43,"token":33,"tool":36,"torch":[15,38,39],"torchscript":15,"total":28,"track":44,"train":[36,38,43],"train_net_checkpoint_400000":38,"transform":28,"translat":28,"true":[0,2,12,14,21,23,28,31,33,38],"ts_dataset":28,"ts_model":15,"tupl":[27,28],"tutori":43,"type":[15,21,28,36],"typic":38,"u":43,"uint8":[36,38,39,42],"undefin":15,"under":39,"undoc":37,"uniqu":42,"unit":[28,38],"unitless":28,"unless":36,"unsaf":31,"up":[39,43],"update_equival":9,"update_run_model":19,"url":[34,44],"us":[3,8,15,27,28,31,34,36,37,38,40,42,44],"usag":[7,15,37],"use_exact":23,"use_half_predict":14,"user":[9,42],"using_dacapo":39,"util":[13,14,24,35,44],"v":[15,28],"v1":[15,38],"valid":[15,26,27,36,44],"valu":[15,28,42],"valueerror":[27,28],"variabl":[15,38,39],"variant":36,"variou":42,"vector":42,"verifi":31,"version":[15,36],"via":[24,38,39,44],"viewer":[11,32],"virtual":24,"volum":[33,36,44],"volume_lay":33,"volume_typ":33,"voxel":[28,38,39,42,44],"voxel_s":[12,27,28,38],"voxel_size_float":28,"voxels_to_process":27,"wa":[15,28],"wai":[28,43],"watersh":42,"we":[27,28,39],"weak":42,"web_util":[30,35],"weigel":37,"weights_onli":38,"when":[37,38],"where":28,"whether":[15,31],"which":[27,28,39,44],"wise":42,"within":28,"without":34,"work":38,"worker":[0,2],"workflow":42,"world":38,"write":43,"write_roi":14,"write_shap":[38,39],"www":37,"x":[27,34,42,43],"y":27,"yaml":[7,26,27],"yaml_config":[0,1,2],"yaml_fil":18,"yaml_file_path":27,"you":[27,28,34,38,39,40,44],"your":[15,27,37,39,44],"your_script":[38,39],"z":27,"zarr":[12,28,36,38,39,44],"zarr_grp":28,"zarr_grp_path":28,"zarr_path":[11,44],"zouinkhi":37,"zouinkhim":[9,36,39],"zscorenorm":21},"titles":["cellmap_flow.blockwise.blockwise_processor","cellmap_flow.blockwise.cli","cellmap_flow.blockwise","cellmap_flow.cli.cli","cellmap_flow.cli.fly_model","cellmap_flow.cli","cellmap_flow.cli.multiple_cli","cellmap_flow.cli.multiple_yaml_cli","cellmap_flow.cli.server_cli","cellmap_flow.dashboard.app","cellmap_flow.dashboard","cellmap_flow.globals","cellmap_flow.image_data_interface","cellmap_flow","cellmap_flow.inferencer","cellmap_flow.models.cellmap_models","cellmap_flow.models","cellmap_flow.models.model_app_config","cellmap_flow.models.model_yaml","cellmap_flow.models.run","cellmap_flow.norm","cellmap_flow.norm.input_normalize","cellmap_flow.post","cellmap_flow.post.postprocessors","cellmap_flow.server","cellmap_flow.utils.bsub_utils","cellmap_flow.utils.config_utils","cellmap_flow.utils.data","cellmap_flow.utils.ds","cellmap_flow.utils.import_utils","cellmap_flow.utils","cellmap_flow.utils.load_py","cellmap_flow.utils.neuroglancer_utils","cellmap_flow.utils.scale_pyramid","cellmap_flow.utils.web_utils","API Reference","CLI Commands","&lt;no title&gt;","Custom Model","Installation","Installation","cellmap_flow","PostProcessors","Road Map","Python Scripts"],"titleterms":{"0":43,"advanc":[36,38],"affinitypostprocessor":42,"api":35,"app":9,"attribut":[0,1,3,4,6,7,8,9,11,14,15,19,21,23,24,25,26,27,28,31,32,33,34,38],"avail":36,"base":[36,42],"basic":[36,38],"bioimag":39,"blockwis":[0,1,2],"blockwise_processor":0,"bsub_util":25,"can":43,"cellmap_flow":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,41],"cellmap_flow_multipl":36,"cellmap_flow_yaml":36,"cellmap_model":15,"chain":36,"channelselect":42,"check":36,"class":[0,2,11,12,14,15,17,21,23,24,25,27,28,31,33,42],"cli":[1,3,4,5,6,7,8,36],"command":36,"config_util":26,"configur":36,"content":[0,1,2,3,4,6,7,8,9,11,12,14,15,17,18,19,21,23,24,25,26,27,28,29,31,32,33,34],"custom":[38,39],"d":28,"dacapo":39,"dashboard":[9,10],"data":27,"defaultpostprocessor":42,"detail":43,"entri":36,"entrypoint":36,"explan":44,"fly_model":4,"function":[0,1,3,4,6,7,8,9,14,18,19,21,23,24,25,26,27,28,29,31,32,33,34,38],"global":11,"goal":43,"have":43,"image_data_interfac":12,"import_util":29,"inferenc":14,"input_norm":21,"instal":[39,40],"io":39,"keyword":39,"labelpostprocessor":42,"lambdapostprocessor":42,"load_pi":31,"main":36,"map":43,"minimum":38,"model":[15,16,17,18,19,36,38,39],"model_app_config":17,"model_yaml":18,"modul":[0,1,3,4,6,7,8,9,11,12,14,15,17,18,19,21,23,24,25,26,27,28,29,31,32,33,34],"mortonsegmentationrelabel":42,"multipl":[36,39],"multiple_cli":6,"multiple_yaml_cli":7,"neuroglancer_util":32,"non":43,"norm":[20,21],"onc":39,"option":36,"output":44,"overview":[38,42,43],"packag":2,"point":36,"post":[22,23],"postprocessor":[23,42],"prerequisit":44,"process":38,"python":44,"pytorch":38,"refer":35,"requir":38,"road":43,"run":[19,39],"scale_pyramid":33,"script":[38,39,44],"server":[24,36],"server_cli":8,"simpleblockwisemerg":42,"subclass":42,"submodul":[2,5,10,13,16,20,22,30],"syntax":36,"templat":38,"tensorflow":[38,39],"test":38,"thresholdpostprocessor":42,"us":39,"usag":[38,39],"util":[25,26,27,28,29,30,31,32,33,34,36],"v1":43,"web_util":34,"yaml":36,"your":38}})