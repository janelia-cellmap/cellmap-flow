cellmap_flow.norm.input_normalize
=================================

.. py:module:: cellmap_flow.norm.input_normalize


Attributes
----------

.. autoapisummary::

   cellmap_flow.norm.input_normalize.logger


Classes
-------

.. autoapisummary::

   cellmap_flow.norm.input_normalize.SerializableInterface
   cellmap_flow.norm.input_normalize.InputNormalizer
   cellmap_flow.norm.input_normalize.Dilate
   cellmap_flow.norm.input_normalize.EuclideanDistance
   cellmap_flow.norm.input_normalize.MinMaxNormalizer
   cellmap_flow.norm.input_normalize.LambdaNormalizer
   cellmap_flow.norm.input_normalize.ZScoreNormalizer


Functions
---------

.. autoapisummary::

   cellmap_flow.norm.input_normalize.get_input_normalizers
   cellmap_flow.norm.input_normalize.deserialize_list
   cellmap_flow.norm.input_normalize.get_normalizations


Module Contents
---------------

.. py:data:: logger

.. py:class:: SerializableInterface

   .. py:method:: name()
      :classmethod:



   .. py:method:: process(data, **kwargs) -> numpy.ndarray


   .. py:method:: to_dict()


   .. py:property:: dtype


.. py:class:: InputNormalizer



.. py:class:: Dilate(size=1)



   .. py:attribute:: size
      :value: 1



.. py:class:: EuclideanDistance(anisotropy=50, black_border=True, parallel=5, type='edt', activation='tanh')



   .. py:attribute:: anisotropy


   .. py:attribute:: black_border
      :value: True



   .. py:attribute:: parallel
      :value: 5



   .. py:attribute:: activation


   .. py:property:: dtype


.. py:class:: MinMaxNormalizer(min_value=0.0, max_value=255.0, invert=False)



   .. py:attribute:: min_value


   .. py:attribute:: max_value


   .. py:property:: dtype


.. py:class:: LambdaNormalizer(expression: str)



   .. py:attribute:: expression


   .. py:property:: dtype


.. py:class:: ZScoreNormalizer(mean=0.0, std=1.0)



   .. py:attribute:: mean


   .. py:attribute:: std


   .. py:property:: dtype


.. py:function:: get_input_normalizers() -> list[dict]

.. py:function:: deserialize_list(elms: dict, T: type) -> list

.. py:function:: get_normalizations(elms: dict) -> list[InputNormalizer]

